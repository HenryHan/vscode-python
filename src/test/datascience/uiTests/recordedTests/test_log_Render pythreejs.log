[
    {
        "payload": {
            "type": "loc_init",
            "payload": "{}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_settings",
            "payload": "{\"allowImportFromNotebook\":true,\"jupyterLaunchTimeout\":20000,\"jupyterLaunchRetries\":3,\"enabled\":true,\"jupyterServerURI\":\"local\",\"notebookFileRoot\":\"${fileDirname}\",\"changeDirOnImportExport\":false,\"useDefaultConfigForJupyter\":true,\"jupyterInterruptTimeout\":10000,\"searchForJupyter\":true,\"showCellInputCode\":true,\"collapseCellInputCodeByDefault\":true,\"allowInput\":true,\"maxOutputSize\":400,\"errorBackgroundColor\":\"#FFFFFF\",\"sendSelectionToInteractiveWindow\":false,\"codeRegularExpression\":\"^(#\\\\s*%%|#\\\\s*\\\\<codecell\\\\>|#\\\\s*In\\\\[\\\\d*?\\\\]|#\\\\s*In\\\\[ \\\\])\",\"markdownRegularExpression\":\"^(#\\\\s*%%\\\\s*\\\\[markdown\\\\]|#\\\\s*\\\\<markdowncell\\\\>)\",\"variableExplorerExclude\":\"module;function;builtin_function_or_method\",\"liveShareConnectionTimeout\":100,\"enablePlotViewer\":true,\"stopOnFirstLineWhileDebugging\":true,\"stopOnError\":true,\"addGotoCodeLenses\":true,\"enableCellCodeLens\":true,\"runStartupCommands\":\"\",\"debugJustMyCode\":true,\"variableQueries\":[],\"jupyterCommandLineArguments\":[],\"disableJupyterAutoStart\":true,\"extraSettings\":{\"editor\":{\"cursor\":\"line\",\"cursorBlink\":\"blink\",\"autoClosingBrackets\":\"languageDefined\",\"autoClosingQuotes\":\"languageDefined\",\"autoSurround\":\"languageDefined\",\"autoIndent\":false,\"fontLigatures\":false,\"scrollBeyondLastLine\":true,\"verticalScrollbarSize\":14,\"horizontalScrollbarSize\":10,\"fontSize\":14,\"fontFamily\":\"Consolas, 'Courier New', monospace\"},\"theme\":\"Default Light+\"},\"intellisenseOptions\":{\"quickSuggestions\":{\"other\":true,\"comments\":false,\"strings\":false},\"acceptSuggestionOnEnter\":\"on\",\"quickSuggestionsDelay\":10,\"suggestOnTriggerCharacters\":true,\"tabCompletion\":\"on\",\"suggestLocalityBonus\":true,\"suggestSelection\":\"recentlyUsed\",\"wordBasedSuggestions\":true,\"parameterHintsEnabled\":true}}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "loc_init",
            "payload": "{}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "loc_init",
            "payload": "{}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "load_all_cells",
            "payload": {
                "cells": [
                    {
                        "id": "NotebookImport#0",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "markdown",
                            "metadata": {},
                            "source": [
                                "## Intall pythreejs\n",
                                "pip install pythreejs"
                            ],
                            "execution_count": null,
                            "outputs": []
                        }
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from pythreejs import *\n",
                                "from IPython.display import display\n",
                                "from math import pi\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "# Reduce repo churn for examples with embedded state:\n",
                                "from pythreejs._example_helper import use_example_model_ids\n",
                                "use_example_model_ids()"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 3,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "text/plain": "Preview(child=BoxGeometry(depth=15.0, depthSegments=15, height=10.0, heightSegments=10, width=5.0, widthSegmenâ€¦",
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "pythree_example_model_002"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        },
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 4,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "view_width = 600\n",
                                "view_height = 400"
                            ]
                        },
                        "id": "NotebookImport#4",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 5,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "sphere = Mesh(\n",
                                "    SphereBufferGeometry(1, 32, 16),\n",
                                "    MeshStandardMaterial(color='red')\n",
                                ")"
                            ]
                        },
                        "id": "NotebookImport#5",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 6,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "cube = Mesh(\n",
                                "    BoxBufferGeometry(1, 1, 1),\n",
                                "    MeshPhysicalMaterial(color='green'),\n",
                                "    position=[2, 0, 4]\n",
                                ")\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#6",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 7,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "key_light = DirectionalLight(position=[0, 10, 10])\n",
                                "ambient_light = AmbientLight()"
                            ]
                        },
                        "id": "NotebookImport#7",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "id": "NotebookImport#8",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 18,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "f = \"\"\"\n",
                                "function f(origu, origv, out) {\n",
                                "    // scale u and v to the ranges I want: [0, 2*pi]\n",
                                "    var u = 2*Math.PI*origu;\n",
                                "    var v = 2*Math.PI*origv;\n",
                                "\n",
                                "    var x = Math.sin(u);\n",
                                "    var y = Math.cos(v);\n",
                                "    var z = Math.cos(u+v);\n",
                                "\n",
                                "    out.set(x,y,z)\n",
                                "}\n",
                                "\"\"\"\n",
                                "surf_g = ParametricGeometry(func=f, slices=16, stacks=16);\n",
                                "\n",
                                "surf1 = Mesh(geometry=surf_g,\n",
                                "             material=MeshLambertMaterial(color='green', side='FrontSide'))\n",
                                "surf2 = Mesh(geometry=surf_g,\n",
                                "             material=MeshLambertMaterial(color='yellow', side='BackSide'))\n",
                                "surf = Group(children=[surf1, surf2])\n",
                                "\n",
                                "camera2 = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "scene2 = Scene(children=[surf, camera2,\n",
                                "                         DirectionalLight(position=[3, 5, 1], intensity=0.6),\n",
                                "                         AmbientLight(intensity=0.5)])\n",
                                "renderer2 = Renderer(camera=camera2, scene=scene2,\n",
                                "                     controls=[OrbitControls(controlling=camera2)],\n",
                                "                     width=view_width, height=view_height)\n",
                                "display(renderer2)"
                            ]
                        }
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": []
                        },
                        "id": "2bf80bc8-4dd4-4a8b-a35a-ff576c481c83",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    }
                ]
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_settings",
            "payload": "{\"allowImportFromNotebook\":true,\"jupyterLaunchTimeout\":20000,\"jupyterLaunchRetries\":3,\"enabled\":true,\"jupyterServerURI\":\"local\",\"notebookFileRoot\":\"${fileDirname}\",\"changeDirOnImportExport\":false,\"useDefaultConfigForJupyter\":true,\"jupyterInterruptTimeout\":10000,\"searchForJupyter\":true,\"showCellInputCode\":true,\"collapseCellInputCodeByDefault\":true,\"allowInput\":true,\"maxOutputSize\":400,\"errorBackgroundColor\":\"#FFFFFF\",\"sendSelectionToInteractiveWindow\":false,\"codeRegularExpression\":\"^(#\\\\s*%%|#\\\\s*\\\\<codecell\\\\>|#\\\\s*In\\\\[\\\\d*?\\\\]|#\\\\s*In\\\\[ \\\\])\",\"markdownRegularExpression\":\"^(#\\\\s*%%\\\\s*\\\\[markdown\\\\]|#\\\\s*\\\\<markdowncell\\\\>)\",\"variableExplorerExclude\":\"module;function;builtin_function_or_method\",\"liveShareConnectionTimeout\":100,\"enablePlotViewer\":true,\"stopOnFirstLineWhileDebugging\":true,\"stopOnError\":true,\"addGotoCodeLenses\":true,\"enableCellCodeLens\":true,\"runStartupCommands\":\"\",\"debugJustMyCode\":true,\"variableQueries\":[],\"jupyterCommandLineArguments\":[],\"disableJupyterAutoStart\":true,\"extraSettings\":{\"editor\":{\"cursor\":\"line\",\"cursorBlink\":\"blink\",\"autoClosingBrackets\":\"languageDefined\",\"autoClosingQuotes\":\"languageDefined\",\"autoSurround\":\"languageDefined\",\"autoIndent\":false,\"fontLigatures\":false,\"scrollBeyondLastLine\":true,\"verticalScrollbarSize\":14,\"horizontalScrollbarSize\":10,\"fontSize\":14,\"fontFamily\":\"Consolas, 'Courier New', monospace\"},\"theme\":\"Default Light+\"},\"intellisenseOptions\":{\"quickSuggestions\":{\"other\":true,\"comments\":false,\"strings\":false},\"acceptSuggestionOnEnter\":\"on\",\"quickSuggestionsDelay\":10,\"suggestOnTriggerCharacters\":true,\"tabCompletion\":\"on\",\"suggestLocalityBonus\":true,\"suggestSelection\":\"recentlyUsed\",\"wordBasedSuggestions\":true,\"parameterHintsEnabled\":true}}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_settings",
            "payload": "{\"allowImportFromNotebook\":true,\"jupyterLaunchTimeout\":20000,\"jupyterLaunchRetries\":3,\"enabled\":true,\"jupyterServerURI\":\"local\",\"notebookFileRoot\":\"${fileDirname}\",\"changeDirOnImportExport\":false,\"useDefaultConfigForJupyter\":true,\"jupyterInterruptTimeout\":10000,\"searchForJupyter\":true,\"showCellInputCode\":true,\"collapseCellInputCodeByDefault\":true,\"allowInput\":true,\"maxOutputSize\":400,\"errorBackgroundColor\":\"#FFFFFF\",\"sendSelectionToInteractiveWindow\":false,\"codeRegularExpression\":\"^(#\\\\s*%%|#\\\\s*\\\\<codecell\\\\>|#\\\\s*In\\\\[\\\\d*?\\\\]|#\\\\s*In\\\\[ \\\\])\",\"markdownRegularExpression\":\"^(#\\\\s*%%\\\\s*\\\\[markdown\\\\]|#\\\\s*\\\\<markdowncell\\\\>)\",\"variableExplorerExclude\":\"module;function;builtin_function_or_method\",\"liveShareConnectionTimeout\":100,\"enablePlotViewer\":true,\"stopOnFirstLineWhileDebugging\":true,\"stopOnError\":true,\"addGotoCodeLenses\":true,\"enableCellCodeLens\":true,\"runStartupCommands\":\"\",\"debugJustMyCode\":true,\"variableQueries\":[],\"jupyterCommandLineArguments\":[],\"disableJupyterAutoStart\":true,\"extraSettings\":{\"editor\":{\"cursor\":\"line\",\"cursorBlink\":\"blink\",\"autoClosingBrackets\":\"languageDefined\",\"autoClosingQuotes\":\"languageDefined\",\"autoSurround\":\"languageDefined\",\"autoIndent\":false,\"fontLigatures\":false,\"scrollBeyondLastLine\":true,\"verticalScrollbarSize\":14,\"horizontalScrollbarSize\":10,\"fontSize\":14,\"fontFamily\":\"Consolas, 'Courier New', monospace\"},\"theme\":\"Default Light+\"},\"intellisenseOptions\":{\"quickSuggestions\":{\"other\":true,\"comments\":false,\"strings\":false},\"acceptSuggestionOnEnter\":\"on\",\"quickSuggestionsDelay\":10,\"suggestOnTriggerCharacters\":true,\"tabCompletion\":\"on\",\"suggestLocalityBonus\":true,\"suggestSelection\":\"recentlyUsed\",\"wordBasedSuggestions\":true,\"parameterHintsEnabled\":true}}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_Ready"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "started"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "loc_init",
            "payload": "{}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "loc_init",
            "payload": "{}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "load_all_cells",
            "payload": {
                "cells": [
                    {
                        "id": "NotebookImport#0",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "markdown",
                            "metadata": {},
                            "source": [
                                "## Intall pythreejs\n",
                                "pip install pythreejs"
                            ],
                            "execution_count": null,
                            "outputs": []
                        }
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from pythreejs import *\n",
                                "from IPython.display import display\n",
                                "from math import pi\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "# Reduce repo churn for examples with embedded state:\n",
                                "from pythreejs._example_helper import use_example_model_ids\n",
                                "use_example_model_ids()"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 3,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "text/plain": "Preview(child=BoxGeometry(depth=15.0, depthSegments=15, height=10.0, heightSegments=10, width=5.0, widthSegmenâ€¦",
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "pythree_example_model_002"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        },
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 4,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "view_width = 600\n",
                                "view_height = 400"
                            ]
                        },
                        "id": "NotebookImport#4",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 5,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "sphere = Mesh(\n",
                                "    SphereBufferGeometry(1, 32, 16),\n",
                                "    MeshStandardMaterial(color='red')\n",
                                ")"
                            ]
                        },
                        "id": "NotebookImport#5",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 6,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "cube = Mesh(\n",
                                "    BoxBufferGeometry(1, 1, 1),\n",
                                "    MeshPhysicalMaterial(color='green'),\n",
                                "    position=[2, 0, 4]\n",
                                ")\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#6",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 7,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "key_light = DirectionalLight(position=[0, 10, 10])\n",
                                "ambient_light = AmbientLight()"
                            ]
                        },
                        "id": "NotebookImport#7",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "id": "NotebookImport#8",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 18,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "f = \"\"\"\n",
                                "function f(origu, origv, out) {\n",
                                "    // scale u and v to the ranges I want: [0, 2*pi]\n",
                                "    var u = 2*Math.PI*origu;\n",
                                "    var v = 2*Math.PI*origv;\n",
                                "\n",
                                "    var x = Math.sin(u);\n",
                                "    var y = Math.cos(v);\n",
                                "    var z = Math.cos(u+v);\n",
                                "\n",
                                "    out.set(x,y,z)\n",
                                "}\n",
                                "\"\"\"\n",
                                "surf_g = ParametricGeometry(func=f, slices=16, stacks=16);\n",
                                "\n",
                                "surf1 = Mesh(geometry=surf_g,\n",
                                "             material=MeshLambertMaterial(color='green', side='FrontSide'))\n",
                                "surf2 = Mesh(geometry=surf_g,\n",
                                "             material=MeshLambertMaterial(color='yellow', side='BackSide'))\n",
                                "surf = Group(children=[surf1, surf2])\n",
                                "\n",
                                "camera2 = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "scene2 = Scene(children=[surf, camera2,\n",
                                "                         DirectionalLight(position=[3, 5, 1], intensity=0.6),\n",
                                "                         AmbientLight(intensity=0.5)])\n",
                                "renderer2 = Renderer(camera=camera2, scene=scene2,\n",
                                "                     controls=[OrbitControls(controlling=camera2)],\n",
                                "                     width=view_width, height=view_height)\n",
                                "display(renderer2)"
                            ]
                        }
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": []
                        },
                        "id": "2bf80bc8-4dd4-4a8b-a35a-ff576c481c83",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    }
                ]
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_settings",
            "payload": "{\"allowImportFromNotebook\":true,\"jupyterLaunchTimeout\":20000,\"jupyterLaunchRetries\":3,\"enabled\":true,\"jupyterServerURI\":\"local\",\"notebookFileRoot\":\"${fileDirname}\",\"changeDirOnImportExport\":false,\"useDefaultConfigForJupyter\":true,\"jupyterInterruptTimeout\":10000,\"searchForJupyter\":true,\"showCellInputCode\":true,\"collapseCellInputCodeByDefault\":true,\"allowInput\":true,\"maxOutputSize\":400,\"errorBackgroundColor\":\"#FFFFFF\",\"sendSelectionToInteractiveWindow\":false,\"codeRegularExpression\":\"^(#\\\\s*%%|#\\\\s*\\\\<codecell\\\\>|#\\\\s*In\\\\[\\\\d*?\\\\]|#\\\\s*In\\\\[ \\\\])\",\"markdownRegularExpression\":\"^(#\\\\s*%%\\\\s*\\\\[markdown\\\\]|#\\\\s*\\\\<markdowncell\\\\>)\",\"variableExplorerExclude\":\"module;function;builtin_function_or_method\",\"liveShareConnectionTimeout\":100,\"enablePlotViewer\":true,\"stopOnFirstLineWhileDebugging\":true,\"stopOnError\":true,\"addGotoCodeLenses\":true,\"enableCellCodeLens\":true,\"runStartupCommands\":\"\",\"debugJustMyCode\":true,\"variableQueries\":[],\"jupyterCommandLineArguments\":[],\"disableJupyterAutoStart\":true,\"extraSettings\":{\"editor\":{\"cursor\":\"line\",\"cursorBlink\":\"blink\",\"autoClosingBrackets\":\"languageDefined\",\"autoClosingQuotes\":\"languageDefined\",\"autoSurround\":\"languageDefined\",\"autoIndent\":false,\"fontLigatures\":false,\"scrollBeyondLastLine\":true,\"verticalScrollbarSize\":14,\"horizontalScrollbarSize\":10,\"fontSize\":14,\"fontFamily\":\"Consolas, 'Courier New', monospace\"},\"theme\":\"Default Light+\"},\"intellisenseOptions\":{\"quickSuggestions\":{\"other\":true,\"comments\":false,\"strings\":false},\"acceptSuggestionOnEnter\":\"on\",\"quickSuggestionsDelay\":10,\"suggestOnTriggerCharacters\":true,\"tabCompletion\":\"on\",\"suggestLocalityBonus\":true,\"suggestSelection\":\"recentlyUsed\",\"wordBasedSuggestions\":true,\"parameterHintsEnabled\":true}}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_settings",
            "payload": "{\"allowImportFromNotebook\":true,\"jupyterLaunchTimeout\":20000,\"jupyterLaunchRetries\":3,\"enabled\":true,\"jupyterServerURI\":\"local\",\"notebookFileRoot\":\"${fileDirname}\",\"changeDirOnImportExport\":false,\"useDefaultConfigForJupyter\":true,\"jupyterInterruptTimeout\":10000,\"searchForJupyter\":true,\"showCellInputCode\":true,\"collapseCellInputCodeByDefault\":true,\"allowInput\":true,\"maxOutputSize\":400,\"errorBackgroundColor\":\"#FFFFFF\",\"sendSelectionToInteractiveWindow\":false,\"codeRegularExpression\":\"^(#\\\\s*%%|#\\\\s*\\\\<codecell\\\\>|#\\\\s*In\\\\[\\\\d*?\\\\]|#\\\\s*In\\\\[ \\\\])\",\"markdownRegularExpression\":\"^(#\\\\s*%%\\\\s*\\\\[markdown\\\\]|#\\\\s*\\\\<markdowncell\\\\>)\",\"variableExplorerExclude\":\"module;function;builtin_function_or_method\",\"liveShareConnectionTimeout\":100,\"enablePlotViewer\":true,\"stopOnFirstLineWhileDebugging\":true,\"stopOnError\":true,\"addGotoCodeLenses\":true,\"enableCellCodeLens\":true,\"runStartupCommands\":\"\",\"debugJustMyCode\":true,\"variableQueries\":[],\"jupyterCommandLineArguments\":[],\"disableJupyterAutoStart\":true,\"extraSettings\":{\"editor\":{\"cursor\":\"line\",\"cursorBlink\":\"blink\",\"autoClosingBrackets\":\"languageDefined\",\"autoClosingQuotes\":\"languageDefined\",\"autoSurround\":\"languageDefined\",\"autoIndent\":false,\"fontLigatures\":false,\"scrollBeyondLastLine\":true,\"verticalScrollbarSize\":14,\"horizontalScrollbarSize\":10,\"fontSize\":14,\"fontFamily\":\"Consolas, 'Courier New', monospace\"},\"theme\":\"Default Light+\"},\"intellisenseOptions\":{\"quickSuggestions\":{\"other\":true,\"comments\":false,\"strings\":false},\"acceptSuggestionOnEnter\":\"on\",\"quickSuggestionsDelay\":10,\"suggestOnTriggerCharacters\":true,\"tabCompletion\":\"on\",\"suggestLocalityBonus\":true,\"suggestSelection\":\"recentlyUsed\",\"wordBasedSuggestions\":true,\"parameterHintsEnabled\":true}}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_css_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_response",
            "payload": {
                "css": "\n:root {\n    --code-comment-color: #008000;\n    --code-numeric-color: #09885a;\n    --code-string-color: #a31515;\n    --code-variable-color: #001080;\n    --code-type-color: #267f99;\n    --code-font-family: Consolas, 'Courier New', monospace;\n    --code-font-size: 14px;\n}\n\n\n    :root {\n        --override-widget-background: #f3f3f3;\n        --override-foreground: #000000;\n        --override-background: #FFFFFF;\n        --override-selection-background: #add6ff;\n        --override-watermark-color: rgba(66, 66, 66, 0.75);\n        --override-tabs-background: #f3f3f3;\n        --override-progress-background: #0066bf;\n        --override-badge-background: #c4c4c4;\n        --override-lineHighlightBorder: #eeeeee;\n        --override-peek-background: #f2f8fc;\n    }\n\n",
                "theme": "Default Light+"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_response",
            "payload": {
                "theme": {
                    "base": "vs",
                    "inherit": true,
                    "rules": [
                        {
                            "token": "punctuation.definition.comment",
                            "foreground": "#008000"
                        },
                        {
                            "token": "punctuation.definition.string",
                            "foreground": "#a31515"
                        }
                    ],
                    "colors": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "load_onigasm_assembly_request"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "load_tmlanguage_request"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "load_onigasm_assembly_response",
            "payload": "<BLAH>"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "load_tmlanguage_response",
            "payload": "{\r\n    \"information_for_contributors\": [\r\n        \"This file has been converted from https://github.com/MagicStack/MagicPython/blob/master/grammars/MagicPython.tmLanguage\",\r\n        \"If you want to provide a fix or improvement, please create a pull request against the original repository.\",\r\n        \"Once accepted there, we are happy to receive an update request.\"\r\n    ],\r\n    \"version\": \"https://github.com/MagicStack/MagicPython/commit/8ff35b3e5fcde471fae62a57ea1ae1c7cd34c9fc\",\r\n    \"name\": \"MagicPython\",\r\n    \"scopeName\": \"source.python\",\r\n    \"patterns\": [\r\n        {\r\n            \"include\": \"#statement\"\r\n        },\r\n        {\r\n            \"include\": \"#expression\"\r\n        }\r\n    ],\r\n    \"repository\": {\r\n        \"impossible\": {\r\n            \"comment\": \"This is a special rule that should be used where no match is desired. It is not a good idea to match something like '1{0}' because in some cases that can result in infinite loops in token generation. So the rule instead matches and impossible expression to allow a match to fail and move to the next token.\",\r\n            \"match\": \"$.^\"\r\n        },\r\n        \"statement\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#import\"\r\n                },\r\n                {\r\n                    \"include\": \"#class-declaration\"\r\n                },\r\n                {\r\n                    \"include\": \"#function-declaration\"\r\n                },\r\n                {\r\n                    \"include\": \"#statement-keyword\"\r\n                },\r\n                {\r\n                    \"include\": \"#assignment-operator\"\r\n                },\r\n                {\r\n                    \"include\": \"#decorator\"\r\n                },\r\n                {\r\n                    \"include\": \"#docstring-statement\"\r\n                },\r\n                {\r\n                    \"include\": \"#semicolon\"\r\n                }\r\n            ]\r\n        },\r\n        \"semicolon\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"invalid.deprecated.semicolon.python\",\r\n                    \"match\": \"\\\\;$\"\r\n                }\r\n            ]\r\n        },\r\n        \"comments\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"comment.line.number-sign.python\",\r\n                    \"contentName\": \"meta.typehint.comment.python\",\r\n                    \"begin\": \"(?x)\\n  (?:\\n    \\\\# \\\\s* (type:)\\n    \\\\s*+ (?# we want `\\\\s*+` which is possessive quantifier since\\n             we do not actually want to backtrack when matching\\n             whitespace here)\\n    (?! $ | \\\\#)\\n  )\\n\",\r\n                    \"end\": \"(?:$|(?=\\\\#))\",\r\n                    \"beginCaptures\": {\r\n                        \"0\": {\r\n                            \"name\": \"meta.typehint.comment.python\"\r\n                        },\r\n                        \"1\": {\r\n                            \"name\": \"comment.typehint.directive.notation.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"name\": \"comment.typehint.ignore.notation.python\",\r\n                            \"match\": \"(?x)\\n  \\\\G ignore\\n  (?= \\\\s* (?: $ | \\\\#))\\n\"\r\n                        },\r\n                        {\r\n                            \"name\": \"comment.typehint.type.notation.python\",\r\n                            \"match\": \"(?x)\\n  (?<!\\\\.)\\\\b(\\n    bool | bytes | float | int | object | str\\n    | List | Dict | Iterable | Sequence | Set\\n    | FrozenSet | Callable | Union | Tuple\\n    | Any | None\\n  )\\\\b\\n\"\r\n                        },\r\n                        {\r\n                            \"name\": \"comment.typehint.punctuation.notation.python\",\r\n                            \"match\": \"([\\\\[\\\\]\\\\(\\\\),\\\\.\\\\=\\\\*]|(->))\"\r\n                        },\r\n                        {\r\n                            \"name\": \"comment.typehint.variable.notation.python\",\r\n                            \"match\": \"([[:alpha:]_]\\\\w*)\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"include\": \"#comments-base\"\r\n                }\r\n            ]\r\n        },\r\n        \"docstring-statement\": {\r\n            \"begin\": \"^(?=\\\\s*[rR]?(\\\\'\\\\'\\\\'|\\\\\\\"\\\\\\\"\\\\\\\"|\\\\'|\\\\\\\"))\",\r\n            \"comment\": \"the string either terminates correctly or by the beginning of a new line (this is for single line docstrings that aren't terminated) AND it's not followed by another docstring\",\r\n            \"end\": \"((?<=\\\\1)|^)(?!\\\\s*[rR]?(\\\\'\\\\'\\\\'|\\\\\\\"\\\\\\\"\\\\\\\"|\\\\'|\\\\\\\"))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#docstring\"\r\n                }\r\n            ]\r\n        },\r\n        \"docstring\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"string.quoted.docstring.multi.python\",\r\n                    \"begin\": \"(\\\\'\\\\'\\\\'|\\\\\\\"\\\\\\\"\\\\\\\")\",\r\n                    \"end\": \"(\\\\1)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.string.begin.python\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.string.end.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#docstring-prompt\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#codetags\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#docstring-guts-unicode\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"string.quoted.docstring.raw.multi.python\",\r\n                    \"begin\": \"([rR])(\\\\'\\\\'\\\\'|\\\\\\\"\\\\\\\"\\\\\\\")\",\r\n                    \"end\": \"(\\\\2)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.string.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"punctuation.definition.string.begin.python\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.string.end.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#string-consume-escape\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#docstring-prompt\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#codetags\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"string.quoted.docstring.single.python\",\r\n                    \"begin\": \"(\\\\'|\\\\\\\")\",\r\n                    \"end\": \"(\\\\1)|(\\\\n)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.string.begin.python\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.string.end.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.newline.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#codetags\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#docstring-guts-unicode\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"string.quoted.docstring.raw.single.python\",\r\n                    \"begin\": \"([rR])(\\\\'|\\\\\\\")\",\r\n                    \"end\": \"(\\\\2)|(\\\\n)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.string.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"punctuation.definition.string.begin.python\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.string.end.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.newline.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#string-consume-escape\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#codetags\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"docstring-guts-unicode\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#escape-sequence\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-line-continuation\"\r\n                }\r\n            ]\r\n        },\r\n        \"docstring-prompt\": {\r\n            \"match\": \"(?x)\\n  (?:\\n    (?:^|\\\\G) \\\\s* (?# '\\\\G' is necessary for ST)\\n    ((?:>>>|\\\\.\\\\.\\\\.) \\\\s) (?=\\\\s*\\\\S)\\n  )\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.control.flow.python\"\r\n                }\r\n            }\r\n        },\r\n        \"statement-keyword\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"storage.type.function.python\",\r\n                    \"match\": \"\\\\b((async\\\\s+)?\\\\s*def)\\\\b\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.control.flow.python\",\r\n                    \"comment\": \"if `as` is eventually followed by `:` or line continuation\\nit's probably control flow like:\\n    with foo as bar, \\\\\\n         Foo as Bar:\\n      try:\\n        do_stuff()\\n      except Exception as e:\\n        pass\\n\",\r\n                    \"match\": \"\\\\b(?<!\\\\.)as\\\\b(?=.*[:\\\\\\\\])\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.control.import.python\",\r\n                    \"comment\": \"other legal use of `as` is in an import\",\r\n                    \"match\": \"\\\\b(?<!\\\\.)as\\\\b\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.control.flow.python\",\r\n                    \"match\": \"(?x)\\n  \\\\b(?<!\\\\.)(\\n    async | continue | del | assert | break | finally | for\\n    | from | elif | else | if | except | pass | raise\\n    | return | try | while | with\\n  )\\\\b\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.modifier.declaration.python\",\r\n                    \"match\": \"(?x)\\n  \\\\b(?<!\\\\.)(\\n    global | nonlocal\\n  )\\\\b\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.class.python\",\r\n                    \"match\": \"\\\\b(?<!\\\\.)(class)\\\\b\"\r\n                }\r\n            ]\r\n        },\r\n        \"expression-bare\": {\r\n            \"comment\": \"valid Python expressions w/o comments and line continuation\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#backticks\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-anno\"\r\n                },\r\n                {\r\n                    \"include\": \"#literal\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp\"\r\n                },\r\n                {\r\n                    \"include\": \"#string\"\r\n                },\r\n                {\r\n                    \"include\": \"#lambda\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-operator\"\r\n                },\r\n                {\r\n                    \"include\": \"#operator\"\r\n                },\r\n                {\r\n                    \"include\": \"#curly-braces\"\r\n                },\r\n                {\r\n                    \"include\": \"#item-access\"\r\n                },\r\n                {\r\n                    \"include\": \"#list\"\r\n                },\r\n                {\r\n                    \"include\": \"#round-braces\"\r\n                },\r\n                {\r\n                    \"include\": \"#function-call\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-functions\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-types\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-exceptions\"\r\n                },\r\n                {\r\n                    \"include\": \"#magic-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#special-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#special-variables\"\r\n                },\r\n                {\r\n                    \"include\": \"#ellipsis\"\r\n                },\r\n                {\r\n                    \"include\": \"#punctuation\"\r\n                },\r\n                {\r\n                    \"include\": \"#line-continuation\"\r\n                }\r\n            ]\r\n        },\r\n        \"expression-base\": {\r\n            \"comment\": \"valid Python expressions with comments and line continuation\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#expression-bare\"\r\n                },\r\n                {\r\n                    \"include\": \"#line-continuation\"\r\n                }\r\n            ]\r\n        },\r\n        \"expression\": {\r\n            \"comment\": \"All valid Python expressions\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression-base\"\r\n                },\r\n                {\r\n                    \"include\": \"#member-access\"\r\n                },\r\n                {\r\n                    \"comment\": \"Tokenize identifiers to help linters\",\r\n                    \"match\": \"(?x) \\\\b ([[:alpha:]_]\\\\w*) \\\\b\"\r\n                }\r\n            ]\r\n        },\r\n        \"member-access\": {\r\n            \"begin\": \"(\\\\.)\\\\s*(?!\\\\.)\",\r\n            \"end\": \"(?x)\\n  # stop when you've just read non-whitespace followed by non-word\\n  # i.e. when finished reading an identifier or function call\\n  (?<=\\\\S)(?=\\\\W) |\\n  # stop when seeing the start of something that's not a word,\\n  # i.e. when seeing a non-identifier\\n  (^|(?<=\\\\s))(?=[^\\\\\\\\\\\\w\\\\s]) |\\n  $\\n\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.separator.period.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#function-call\"\r\n                },\r\n                {\r\n                    \"include\": \"#member-access-base\"\r\n                }\r\n            ]\r\n        },\r\n        \"member-access-base\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#magic-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-object-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#special-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#line-continuation\"\r\n                },\r\n                {\r\n                    \"include\": \"#item-access\"\r\n                }\r\n            ]\r\n        },\r\n        \"special-names\": {\r\n            \"name\": \"constant.other.caps.python\",\r\n            \"match\": \"(?x)\\n  \\\\b\\n    # we want to see \\\"enough\\\", meaning 2 or more upper-case\\n    # letters in the beginning of the constant\\n    #\\n    # for more details refer to:\\n    #   https://github.com/MagicStack/MagicPython/issues/42\\n    (\\n      _* [[:upper:]] [_\\\\d]* [[:upper:]]\\n    )\\n    [[:upper:]\\\\d]* (_\\\\w*)?\\n  \\\\b\\n\"\r\n        },\r\n        \"curly-braces\": {\r\n            \"begin\": \"\\\\{\",\r\n            \"end\": \"\\\\}\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.definition.dict.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.definition.dict.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"punctuation.separator.dict.python\",\r\n                    \"match\": \":\"\r\n                },\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"list\": {\r\n            \"begin\": \"\\\\[\",\r\n            \"end\": \"\\\\]\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.definition.list.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.definition.list.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"round-braces\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"\\\\)\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.parenthesis.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.parenthesis.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"line-continuation\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"match\": \"(\\\\\\\\)\\\\s*(\\\\S.*$\\\\n?)\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.separator.continuation.line.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.line.continuation.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"begin\": \"(\\\\\\\\)\\\\s*$\\\\n?\",\r\n                    \"end\": \"(?x)\\n  (?=^\\\\s*$)\\n  |\\n  (?! (\\\\s* [rR]? (\\\\'\\\\'\\\\'|\\\\\\\"\\\\\\\"\\\\\\\"|\\\\'|\\\\\\\"))\\n      |\\n      (\\\\G $)  (?# '\\\\G' is necessary for ST)\\n  )\\n\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.separator.continuation.line.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#regexp\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#string\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"assignment-operator\": {\r\n            \"name\": \"keyword.operator.assignment.python\",\r\n            \"match\": \"(?x)\\n     <<= | >>= | //= | \\\\*\\\\*=\\n    | \\\\+= | -= | /= | @=\\n    | \\\\*= | %= | ~= | \\\\^= | &= | \\\\|=\\n    | =(?!=)\\n\"\r\n        },\r\n        \"operator\": {\r\n            \"match\": \"(?x)\\n    \\\\b(?<!\\\\.)\\n      (?:\\n        (and | or | not | in | is)                         (?# 1)\\n        |\\n        (for | if | else | await | (?:yield(?:\\\\s+from)?))  (?# 2)\\n      )\\n    (?!\\\\s*:)\\\\b\\n\\n    | (<< | >> | & | \\\\| | \\\\^ | ~)                          (?# 3)\\n\\n    | (\\\\*\\\\* | \\\\* | \\\\+ | - | % | // | / | @)                (?# 4)\\n\\n    | (!= | == | >= | <= | < | >)                          (?# 5)\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.logical.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"keyword.control.flow.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"keyword.operator.bitwise.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"keyword.operator.arithmetic.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"keyword.operator.comparison.python\"\r\n                }\r\n            }\r\n        },\r\n        \"punctuation\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"punctuation.separator.colon.python\",\r\n                    \"match\": \":\"\r\n                },\r\n                {\r\n                    \"name\": \"punctuation.separator.element.python\",\r\n                    \"match\": \",\"\r\n                }\r\n            ]\r\n        },\r\n        \"literal\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"constant.language.python\",\r\n                    \"match\": \"\\\\b(True|False|None|NotImplemented|Ellipsis)\\\\b\"\r\n                },\r\n                {\r\n                    \"include\": \"#number\"\r\n                }\r\n            ]\r\n        },\r\n        \"number\": {\r\n            \"name\": \"constant.numeric.python\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#number-float\"\r\n                },\r\n                {\r\n                    \"include\": \"#number-dec\"\r\n                },\r\n                {\r\n                    \"include\": \"#number-hex\"\r\n                },\r\n                {\r\n                    \"include\": \"#number-oct\"\r\n                },\r\n                {\r\n                    \"include\": \"#number-bin\"\r\n                },\r\n                {\r\n                    \"include\": \"#number-long\"\r\n                },\r\n                {\r\n                    \"name\": \"invalid.illegal.name.python\",\r\n                    \"match\": \"\\\\b[0-9]+\\\\w+\"\r\n                }\r\n            ]\r\n        },\r\n        \"number-float\": {\r\n            \"name\": \"constant.numeric.float.python\",\r\n            \"match\": \"(?x)\\n  (?<! \\\\w)(?:\\n    (?:\\n      \\\\.[0-9](?: _?[0-9] )*\\n      |\\n      [0-9](?: _?[0-9] )* \\\\. [0-9](?: _?[0-9] )*\\n      |\\n      [0-9](?: _?[0-9] )* \\\\.\\n    ) (?: [eE][+-]?[0-9](?: _?[0-9] )* )?\\n    |\\n    [0-9](?: _?[0-9] )* (?: [eE][+-]?[0-9](?: _?[0-9] )* )\\n  )([jJ])?\\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.imaginary.number.python\"\r\n                }\r\n            }\r\n        },\r\n        \"number-dec\": {\r\n            \"name\": \"constant.numeric.dec.python\",\r\n            \"match\": \"(?x)\\n  (?<![\\\\w\\\\.])(?:\\n      [1-9](?: _?[0-9] )*\\n      |\\n      0+\\n      |\\n      [0-9](?: _?[0-9] )* ([jJ])\\n      |\\n      0 ([0-9]+)(?![eE\\\\.])\\n  )\\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.imaginary.number.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.dec.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"invalid.illegal.dec.python\"\r\n                }\r\n            }\r\n        },\r\n        \"number-hex\": {\r\n            \"name\": \"constant.numeric.hex.python\",\r\n            \"match\": \"(?x)\\n  (?<![\\\\w\\\\.])\\n    (0[xX]) (_?[0-9a-fA-F])+\\n  \\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.number.python\"\r\n                }\r\n            }\r\n        },\r\n        \"number-oct\": {\r\n            \"name\": \"constant.numeric.oct.python\",\r\n            \"match\": \"(?x)\\n  (?<![\\\\w\\\\.])\\n    (0[oO]) (_?[0-7])+\\n  \\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.number.python\"\r\n                }\r\n            }\r\n        },\r\n        \"number-bin\": {\r\n            \"name\": \"constant.numeric.bin.python\",\r\n            \"match\": \"(?x)\\n  (?<![\\\\w\\\\.])\\n    (0[bB]) (_?[01])+\\n  \\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.number.python\"\r\n                }\r\n            }\r\n        },\r\n        \"number-long\": {\r\n            \"name\": \"constant.numeric.bin.python\",\r\n            \"comment\": \"this is to support python2 syntax for long ints\",\r\n            \"match\": \"(?x)\\n  (?<![\\\\w\\\\.])\\n    ([1-9][0-9]* | 0) ([lL])\\n  \\\\b\\n\",\r\n            \"captures\": {\r\n                \"2\": {\r\n                    \"name\": \"storage.type.number.python\"\r\n                }\r\n            }\r\n        },\r\n        \"regexp\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-single-three-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-double-three-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-single-one-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-double-one-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fregexp-single-three-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fregexp-double-three-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fregexp-single-one-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fregexp-double-one-line\"\r\n                }\r\n            ]\r\n        },\r\n        \"string\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-quoted-single-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-bin-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-bin-quoted-single-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-raw-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-raw-quoted-single-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-raw-bin-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-raw-bin-quoted-single-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-fnorm-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-fnorm-quoted-single-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-normf-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-normf-quoted-single-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-raw-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-raw-quoted-single-line\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-unicode-guts\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-entity\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-brace-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-consume-escape\": {\r\n            \"match\": \"\\\\\\\\['\\\"\\\\n\\\\\\\\]\"\r\n        },\r\n        \"string-raw-guts\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-formatting\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-brace-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-raw-bin-guts\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-entity\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-line-continuation\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-guts\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#escape-sequence\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-line-continuation\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-raw-guts\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-illegal-single-brace\": {\r\n            \"comment\": \"it is illegal to have a multiline brace inside a single-line string\",\r\n            \"begin\": \"(\\\\{)(?=[^\\\\n}]*$\\\\n?)\",\r\n            \"end\": \"(\\\\})|(?=\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-terminator-single\"\r\n                },\r\n                {\r\n                    \"include\": \"#f-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-illegal-multi-brace\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#impossible\"\r\n                }\r\n            ]\r\n        },\r\n        \"f-expression\": {\r\n            \"comment\": \"All valid Python expressions, except comments and line cont\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression-bare\"\r\n                },\r\n                {\r\n                    \"include\": \"#member-access\"\r\n                },\r\n                {\r\n                    \"comment\": \"Tokenize identifiers to help linters\",\r\n                    \"match\": \"(?x) \\\\b ([[:alpha:]_]\\\\w*) \\\\b\"\r\n                }\r\n            ]\r\n        },\r\n        \"escape-sequence-unicode\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"constant.character.escape.python\",\r\n                    \"match\": \"(?x)\\n  \\\\\\\\ (\\n        u[0-9A-Fa-f]{4}\\n        | U[0-9A-Fa-f]{8}\\n        | N\\\\{[\\\\w\\\\s]+?\\\\}\\n     )\\n\"\r\n                }\r\n            ]\r\n        },\r\n        \"escape-sequence\": {\r\n            \"name\": \"constant.character.escape.python\",\r\n            \"match\": \"(?x)\\n  \\\\\\\\ (\\n        x[0-9A-Fa-f]{2}\\n        | [0-7]{1,3}\\n        | [\\\\\\\\\\\"'abfnrtv]\\n     )\\n\"\r\n        },\r\n        \"string-line-continuation\": {\r\n            \"name\": \"constant.language.python\",\r\n            \"match\": \"\\\\\\\\$\"\r\n        },\r\n        \"string-formatting\": {\r\n            \"name\": \"meta.format.percent.python\",\r\n            \"match\": \"(?x)\\n  (\\n    % (\\\\([\\\\w\\\\s]*\\\\))?\\n      [-+#0 ]*\\n      (\\\\d+|\\\\*)? (\\\\.(\\\\d+|\\\\*))?\\n      ([hlL])?\\n      [diouxXeEfFgGcrsab%]\\n  )\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            }\r\n        },\r\n        \"string-brace-formatting\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"meta.format.brace.python\",\r\n                    \"match\": \"(?x)\\n  (\\n    {{ | }}\\n    | (?:\\n      {\\n        \\\\w* (\\\\.[[:alpha:]_]\\\\w* | \\\\[[^\\\\]'\\\"]+\\\\])*\\n        (![rsa])?\\n        ( : \\\\w? [<>=^]? [-+ ]? \\\\#?\\n          \\\\d* ,? (\\\\.\\\\d+)? [bcdeEfFgGnosxX%]? )?\\n      })\\n  )\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"constant.character.format.placeholder.other.python\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        },\r\n                        \"4\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"name\": \"meta.format.brace.python\",\r\n                    \"match\": \"(?x)\\n  (\\n    {\\n      \\\\w* (\\\\.[[:alpha:]_]\\\\w* | \\\\[[^\\\\]'\\\"]+\\\\])*\\n      (![rsa])?\\n      (:)\\n        [^'\\\"{}\\\\n]* (?:\\n          \\\\{ [^'\\\"}\\\\n]*? \\\\} [^'\\\"{}\\\\n]*\\n        )*\\n    }\\n  )\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"constant.character.format.placeholder.other.python\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        },\r\n                        \"4\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-formatting\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-formatting-braces\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-formatting-singe-brace\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-formatting-singe-brace\": {\r\n            \"name\": \"invalid.illegal.brace.python\",\r\n            \"match\": \"(}(?!}))\"\r\n        },\r\n        \"import\": {\r\n            \"comment\": \"Import statements used to correctly mark `from`, `import`, and `as`\\n\",\r\n            \"patterns\": [\r\n                {\r\n                    \"begin\": \"\\\\b(?<!\\\\.)(from)\\\\b(?=.+import)\",\r\n                    \"end\": \"$|(?=import)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"keyword.control.import.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"name\": \"punctuation.separator.period.python\",\r\n                            \"match\": \"\\\\.+\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#expression\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"begin\": \"\\\\b(?<!\\\\.)(import)\\\\b\",\r\n                    \"end\": \"$\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"keyword.control.import.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"name\": \"keyword.control.import.python\",\r\n                            \"match\": \"\\\\b(?<!\\\\.)as\\\\b\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#expression\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"class-declaration\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"meta.class.python\",\r\n                    \"begin\": \"(?x)\\n  \\\\s*(class)\\\\s+\\n    (?=\\n      [[:alpha:]_]\\\\w* \\\\s* (:|\\\\()\\n    )\\n\",\r\n                    \"end\": \"(:)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.class.python\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.section.class.begin.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#class-name\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#class-inheritance\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"class-name\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#illegal-object-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-possible-callables\"\r\n                },\r\n                {\r\n                    \"name\": \"entity.name.type.class.python\",\r\n                    \"match\": \"(?x)\\n  \\\\b ([[:alpha:]_]\\\\w*) \\\\b\\n\"\r\n                }\r\n            ]\r\n        },\r\n        \"class-inheritance\": {\r\n            \"name\": \"meta.class.inheritance.python\",\r\n            \"begin\": \"(\\\\()\",\r\n            \"end\": \"(\\\\))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.inheritance.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.inheritance.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"keyword.operator.unpacking.arguments.python\",\r\n                    \"match\": \"(\\\\*\\\\*|\\\\*)\"\r\n                },\r\n                {\r\n                    \"name\": \"punctuation.separator.inheritance.python\",\r\n                    \"match\": \",\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.operator.assignment.python\",\r\n                    \"match\": \"=(?!=)\"\r\n                },\r\n                {\r\n                    \"name\": \"support.type.metaclass.python\",\r\n                    \"match\": \"\\\\bmetaclass\\\\b\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#class-kwarg\"\r\n                },\r\n                {\r\n                    \"include\": \"#call-wrapper-inheritance\"\r\n                },\r\n                {\r\n                    \"include\": \"#expression-base\"\r\n                },\r\n                {\r\n                    \"include\": \"#member-access-class\"\r\n                },\r\n                {\r\n                    \"include\": \"#inheritance-identifier\"\r\n                }\r\n            ]\r\n        },\r\n        \"class-kwarg\": {\r\n            \"match\": \"(?x)\\n  \\\\b ([[:alpha:]_]\\\\w*) \\\\s*(=)(?!=)\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"entity.other.inherited-class.python variable.parameter.class.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"keyword.operator.assignment.python\"\r\n                }\r\n            }\r\n        },\r\n        \"inheritance-identifier\": {\r\n            \"match\": \"(?x)\\n  \\\\b ([[:alpha:]_]\\\\w*) \\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"entity.other.inherited-class.python\"\r\n                }\r\n            }\r\n        },\r\n        \"member-access-class\": {\r\n            \"begin\": \"(\\\\.)\\\\s*(?!\\\\.)\",\r\n            \"end\": \"(?<=\\\\S)(?=\\\\W)|$\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.separator.period.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#call-wrapper-inheritance\"\r\n                },\r\n                {\r\n                    \"include\": \"#member-access-base\"\r\n                },\r\n                {\r\n                    \"include\": \"#inheritance-identifier\"\r\n                }\r\n            ]\r\n        },\r\n        \"lambda\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"match\": \"((?<=\\\\.)lambda|lambda(?=\\\\s*[\\\\.=]))\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"keyword.control.flow.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"match\": \"\\\\b(lambda)\\\\s*?(?=[,\\\\n]|$)\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.function.lambda.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"name\": \"meta.lambda-function.python\",\r\n                    \"begin\": \"(?x)\\n  \\\\b (lambda) \\\\b\\n\",\r\n                    \"end\": \"(:)|(\\\\n)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.function.lambda.python\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.section.function.lambda.begin.python\"\r\n                        }\r\n                    },\r\n                    \"contentName\": \"meta.function.lambda.parameters.python\",\r\n                    \"patterns\": [\r\n                        {\r\n                            \"name\": \"keyword.operator.unpacking.parameter.python\",\r\n                            \"match\": \"(\\\\*\\\\*|\\\\*)\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#lambda-nested-incomplete\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#illegal-names\"\r\n                        },\r\n                        {\r\n                            \"match\": \"([[:alpha:]_]\\\\w*)\\\\s*(?:(,)|(?=:|$))\",\r\n                            \"captures\": {\r\n                                \"1\": {\r\n                                    \"name\": \"variable.parameter.function.language.python\"\r\n                                },\r\n                                \"2\": {\r\n                                    \"name\": \"punctuation.separator.parameters.python\"\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            \"include\": \"#comments\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#backticks\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#illegal-anno\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#lambda-parameter-with-default\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#line-continuation\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#illegal-operator\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"lambda-incomplete\": {\r\n            \"name\": \"storage.type.function.lambda.python\",\r\n            \"match\": \"\\\\blambda(?=\\\\s*[,)])\"\r\n        },\r\n        \"lambda-nested-incomplete\": {\r\n            \"name\": \"storage.type.function.lambda.python\",\r\n            \"match\": \"\\\\blambda(?=\\\\s*[:,)])\"\r\n        },\r\n        \"lambda-parameter-with-default\": {\r\n            \"begin\": \"(?x)\\n  \\\\b\\n  ([[:alpha:]_]\\\\w*) \\\\s* (=)\\n\",\r\n            \"end\": \"(,)|(?=:|$)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"variable.parameter.function.language.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"keyword.operator.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.separator.parameters.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"function-declaration\": {\r\n            \"name\": \"meta.function.python\",\r\n            \"begin\": \"(?x)\\n  \\\\s*\\n  (?:\\\\b(async) \\\\s+)? \\\\b(def)\\\\s+\\n    (?=\\n      [[:alpha:]_][[:word:]]* \\\\s* \\\\(\\n    )\\n\",\r\n            \"end\": \"(:|(?=[#'\\\"\\\\n]))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.function.async.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"storage.type.function.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.section.function.begin.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#function-def-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#parameters\"\r\n                },\r\n                {\r\n                    \"include\": \"#line-continuation\"\r\n                },\r\n                {\r\n                    \"include\": \"#return-annotation\"\r\n                }\r\n            ]\r\n        },\r\n        \"function-def-name\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#illegal-object-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-possible-callables\"\r\n                },\r\n                {\r\n                    \"name\": \"entity.name.function.python\",\r\n                    \"match\": \"(?x)\\n  \\\\b ([[:alpha:]_]\\\\w*) \\\\b\\n\"\r\n                }\r\n            ]\r\n        },\r\n        \"parameters\": {\r\n            \"name\": \"meta.function.parameters.python\",\r\n            \"begin\": \"(\\\\()\",\r\n            \"end\": \"(\\\\))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.parameters.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.parameters.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"keyword.operator.unpacking.parameter.python\",\r\n                    \"match\": \"(\\\\*\\\\*|\\\\*)\"\r\n                },\r\n                {\r\n                    \"include\": \"#lambda-incomplete\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-object-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#parameter-special\"\r\n                },\r\n                {\r\n                    \"match\": \"(?x)\\n  ([[:alpha:]_]\\\\w*)\\n    \\\\s* (?: (,) | (?=[)#\\\\n=]))\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"variable.parameter.function.language.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"punctuation.separator.parameters.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"include\": \"#comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#loose-default\"\r\n                },\r\n                {\r\n                    \"include\": \"#annotated-parameter\"\r\n                }\r\n            ]\r\n        },\r\n        \"parameter-special\": {\r\n            \"match\": \"(?x)\\n  \\\\b ((self)|(cls)) \\\\b \\\\s*(?:(,)|(?=\\\\)))\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"variable.parameter.function.language.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"variable.parameter.function.language.special.self.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"variable.parameter.function.language.special.cls.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"punctuation.separator.parameters.python\"\r\n                }\r\n            }\r\n        },\r\n        \"loose-default\": {\r\n            \"begin\": \"(=)\",\r\n            \"end\": \"(,)|(?=\\\\))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.separator.parameters.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"annotated-parameter\": {\r\n            \"begin\": \"(?x)\\n  \\\\b\\n  ([[:alpha:]_]\\\\w*) \\\\s* (:)\\n\",\r\n            \"end\": \"(,)|(?=\\\\))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"variable.parameter.function.language.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.separator.annotation.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.separator.parameters.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.operator.assignment.python\",\r\n                    \"match\": \"=(?!=)\"\r\n                }\r\n            ]\r\n        },\r\n        \"return-annotation\": {\r\n            \"begin\": \"(->)\",\r\n            \"end\": \"(?=:)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.separator.annotation.result.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"item-access\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"meta.item-access.python\",\r\n                    \"begin\": \"(?x)\\n  \\\\b(?=\\n    [[:alpha:]_]\\\\w* \\\\s* \\\\[\\n  )\\n\",\r\n                    \"end\": \"(\\\\])\",\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.arguments.end.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#item-name\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#item-index\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#expression\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"item-name\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#special-variables\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-functions\"\r\n                },\r\n                {\r\n                    \"include\": \"#special-names\"\r\n                },\r\n                {\r\n                    \"match\": \"(?x)\\n  \\\\b ([[:alpha:]_]\\\\w*) \\\\b\\n\"\r\n                }\r\n            ]\r\n        },\r\n        \"item-index\": {\r\n            \"begin\": \"(\\\\[)\",\r\n            \"end\": \"(?=\\\\])\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.arguments.begin.python\"\r\n                }\r\n            },\r\n            \"contentName\": \"meta.item-access.arguments.python\",\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"punctuation.separator.slice.python\",\r\n                    \"match\": \":\"\r\n                },\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"decorator\": {\r\n            \"name\": \"meta.function.decorator.python\",\r\n            \"begin\": \"(?x)\\n  ^\\\\s*\\n  ((@)) \\\\s* (?=[[:alpha:]_]\\\\w*)\\n\",\r\n            \"end\": \"(?x)\\n  ( \\\\) )\\n    # trailing whitespace and comments are legal\\n    (?: (.*?) (?=\\\\s*(?:\\\\#|$)) )\\n  | (?=\\\\n|\\\\#)\\n\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"entity.name.function.decorator.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.decorator.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.arguments.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.decorator.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#decorator-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#function-arguments\"\r\n                }\r\n            ]\r\n        },\r\n        \"decorator-name\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#builtin-callables\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-object-name\"\r\n                },\r\n                {\r\n                    \"name\": \"entity.name.function.decorator.python\",\r\n                    \"match\": \"(?x)\\n  ([[:alpha:]_]\\\\w*) | (\\\\.)\\n\",\r\n                    \"captures\": {\r\n                        \"2\": {\r\n                            \"name\": \"punctuation.separator.period.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"include\": \"#line-continuation\"\r\n                },\r\n                {\r\n                    \"name\": \"invalid.illegal.decorator.python\",\r\n                    \"match\": \"(?x)\\n  \\\\s* ([^([:alpha:]\\\\s_\\\\.#\\\\\\\\] .*?) (?=\\\\#|$)\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"invalid.illegal.decorator.python\"\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        \"call-wrapper-inheritance\": {\r\n            \"comment\": \"same as a function call, but in inheritance context\",\r\n            \"name\": \"meta.function-call.python\",\r\n            \"begin\": \"(?x)\\n  \\\\b(?=\\n    ([[:alpha:]_]\\\\w*) \\\\s* (\\\\()\\n  )\\n\",\r\n            \"end\": \"(\\\\))\",\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.arguments.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#inheritance-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#function-arguments\"\r\n                }\r\n            ]\r\n        },\r\n        \"inheritance-name\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#lambda-incomplete\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-possible-callables\"\r\n                },\r\n                {\r\n                    \"include\": \"#inheritance-identifier\"\r\n                }\r\n            ]\r\n        },\r\n        \"function-call\": {\r\n            \"name\": \"meta.function-call.python\",\r\n            \"begin\": \"(?x)\\n  \\\\b(?=\\n    ([[:alpha:]_]\\\\w*) \\\\s* (\\\\()\\n  )\\n\",\r\n            \"end\": \"(\\\\))\",\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.arguments.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#special-variables\"\r\n                },\r\n                {\r\n                    \"include\": \"#function-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#function-arguments\"\r\n                }\r\n            ]\r\n        },\r\n        \"function-name\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#builtin-possible-callables\"\r\n                },\r\n                {\r\n                    \"comment\": \"Some color schemas support meta.function-call.generic scope\",\r\n                    \"name\": \"meta.function-call.generic.python\",\r\n                    \"match\": \"(?x)\\n  \\\\b ([[:alpha:]_]\\\\w*) \\\\b\\n\"\r\n                }\r\n            ]\r\n        },\r\n        \"function-arguments\": {\r\n            \"begin\": \"(\\\\()\",\r\n            \"end\": \"(?=\\\\))(?!\\\\)\\\\s*\\\\()\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.arguments.begin.python\"\r\n                }\r\n            },\r\n            \"contentName\": \"meta.function-call.arguments.python\",\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"punctuation.separator.arguments.python\",\r\n                    \"match\": \"(,)\"\r\n                },\r\n                {\r\n                    \"match\": \"(?x)\\n  (?:(?<=[,(])|^) \\\\s* (\\\\*{1,2})\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"keyword.operator.unpacking.arguments.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"include\": \"#lambda-incomplete\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-names\"\r\n                },\r\n                {\r\n                    \"match\": \"\\\\b([[:alpha:]_]\\\\w*)\\\\s*(=)(?!=)\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"variable.parameter.function-call.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"keyword.operator.assignment.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"name\": \"keyword.operator.assignment.python\",\r\n                    \"match\": \"=(?!=)\"\r\n                },\r\n                {\r\n                    \"include\": \"#expression\"\r\n                },\r\n                {\r\n                    \"match\": \"\\\\s*(\\\\))\\\\s*(\\\\()\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.arguments.end.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"punctuation.definition.arguments.begin.python\"\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        \"builtin-callables\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#illegal-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-object-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-exceptions\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-functions\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-types\"\r\n                }\r\n            ]\r\n        },\r\n        \"builtin-possible-callables\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#builtin-callables\"\r\n                },\r\n                {\r\n                    \"include\": \"#magic-names\"\r\n                }\r\n            ]\r\n        },\r\n        \"builtin-exceptions\": {\r\n            \"name\": \"support.type.exception.python\",\r\n            \"match\": \"(?x) (?<!\\\\.) \\\\b(\\n  (\\n    Arithmetic | Assertion | Attribute | Buffer | BlockingIO\\n    | BrokenPipe | ChildProcess\\n    | (Connection (Aborted | Refused | Reset)?)\\n    | EOF | Environment | FileExists | FileNotFound\\n    | FloatingPoint | IO | Import | Indentation | Index | Interrupted\\n    | IsADirectory | NotADirectory | Permission | ProcessLookup\\n    | Timeout\\n    | Key | Lookup | Memory | Name | NotImplemented | OS | Overflow\\n    | Reference | Runtime | Recursion | Syntax | System\\n    | Tab | Type | UnboundLocal | Unicode(Encode|Decode|Translate)?\\n    | Value | Windows | ZeroDivision | ModuleNotFound\\n  ) Error\\n|\\n  ((Pending)?Deprecation | Runtime | Syntax | User | Future | Import\\n    | Unicode | Bytes | Resource\\n  )? Warning\\n|\\n  SystemExit | Stop(Async)?Iteration\\n  | KeyboardInterrupt\\n  | GeneratorExit | (Base)?Exception\\n)\\\\b\\n\"\r\n        },\r\n        \"builtin-functions\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"support.function.builtin.python\",\r\n                    \"match\": \"(?x)\\n  (?<!\\\\.) \\\\b(\\n    __import__ | abs | all | any | ascii | bin | breakpoint | callable\\n    | chr | compile | copyright | credits | delattr | dir | divmod\\n    | enumerate | eval | exec | exit | filter | format | getattr\\n    | globals | hasattr | hash | help | hex | id | input\\n    | isinstance | issubclass | iter | len | license | locals | map\\n    | max | memoryview | min | next | oct | open | ord | pow | print\\n    | quit | range | reload | repr | reversed | round\\n    | setattr | sorted | sum | vars | zip\\n  )\\\\b\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"variable.legacy.builtin.python\",\r\n                    \"match\": \"(?x)\\n  (?<!\\\\.) \\\\b(\\n    file | reduce | intern | raw_input | unicode | cmp | basestring\\n    | execfile | long | xrange\\n  )\\\\b\\n\"\r\n                }\r\n            ]\r\n        },\r\n        \"builtin-types\": {\r\n            \"name\": \"support.type.python\",\r\n            \"match\": \"(?x)\\n  (?<!\\\\.) \\\\b(\\n    bool | bytearray | bytes | classmethod | complex | dict\\n    | float | frozenset | int | list | object | property\\n    | set | slice | staticmethod | str | tuple | type\\n\\n    (?# Although 'super' is not a type, it's related to types,\\n        and is special enough to be highlighted differently from\\n        other built-ins)\\n    | super\\n  )\\\\b\\n\"\r\n        },\r\n        \"magic-function-names\": {\r\n            \"comment\": \"these methods have magic interpretation by python and are generally called\\nindirectly through syntactic constructs\\n\",\r\n            \"match\": \"(?x)\\n  \\\\b(\\n    __(?:\\n      abs | add | aenter | aexit | aiter | and | anext | await\\n      | bool | call | ceil | cmp | coerce | complex | contains\\n      | copy | deepcopy | del | delattr | delete | delitem\\n      | delslice | dir | div | divmod | enter | eq | exit | float\\n      | floor | floordiv | format | ge | get | getattr\\n      | getattribute | getinitargs | getitem | getnewargs\\n      | getslice | getstate | gt | hash | hex | iadd | iand | idiv\\n      | ifloordiv | ilshift | imod | imul | index | init\\n      | instancecheck | int | invert | ior | ipow | irshift | isub\\n      | iter | itruediv | ixor | le | len | long | lshift | lt\\n      | missing | mod | mul | ne | neg | new | next | nonzero | oct | or\\n      | pos | pow | radd | rand | rdiv | rdivmod | reduce\\n      | reduce_ex | repr | reversed | rfloordiv | rlshift | rmod\\n      | rmul | ror | round | rpow | rrshift | rshift | rsub\\n      | rtruediv | rxor | set | setattr | setitem | setslice\\n      | setstate | sizeof | str | sub | subclasscheck | truediv\\n      | trunc | unicode | xor | matmul | rmatmul | imatmul\\n      | init_subclass | set_name | fspath | bytes | prepare\\n    )__\\n  )\\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.function.magic.python\"\r\n                }\r\n            }\r\n        },\r\n        \"magic-variable-names\": {\r\n            \"comment\": \"magic variables which a class/module may have.\",\r\n            \"match\": \"(?x)\\n  \\\\b(\\n    __(?:\\n      all | bases | builtins | class | class_getitem | code | debug\\n      | defaults | dict | doc | file | func | kwdefaults | members\\n      | metaclass | methods | module | mro | mro_entries | name\\n      | qualname | post_init | self | signature | slots | subclasses\\n      | version | weakref | wrapped | annotations | classcell\\n      | spec | path | package | future | traceback\\n    )__\\n  )\\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.variable.magic.python\"\r\n                }\r\n            }\r\n        },\r\n        \"magic-names\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#magic-function-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#magic-variable-names\"\r\n                }\r\n            ]\r\n        },\r\n        \"illegal-names\": {\r\n            \"match\": \"(?x)\\n  \\\\b(?:\\n    (\\n      and | assert | async | await | break | class | continue | def\\n      | del | elif | else | except | finally | for | from | global\\n      | if | in | is | (?<=\\\\.)lambda | lambda(?=\\\\s*[\\\\.=])\\n      | nonlocal | not | or | pass | raise | return | try | while | with\\n      | yield\\n    ) | (\\n      as | import\\n    )\\n  )\\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.control.flow.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"keyword.control.import.python\"\r\n                }\r\n            }\r\n        },\r\n        \"special-variables\": {\r\n            \"match\": \"(?x)\\n  \\\\b (?<!\\\\.) (?:\\n    (self) | (cls)\\n  )\\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"variable.language.special.self.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"variable.language.special.cls.python\"\r\n                }\r\n            }\r\n        },\r\n        \"ellipsis\": {\r\n            \"name\": \"constant.other.ellipsis.python\",\r\n            \"match\": \"\\\\.\\\\.\\\\.\"\r\n        },\r\n        \"backticks\": {\r\n            \"name\": \"invalid.deprecated.backtick.python\",\r\n            \"begin\": \"\\\\`\",\r\n            \"end\": \"(?:\\\\`|(?<!\\\\\\\\)(\\\\n))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"illegal-operator\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"invalid.illegal.operator.python\",\r\n                    \"match\": \"&&|\\\\|\\\\||--|\\\\+\\\\+\"\r\n                },\r\n                {\r\n                    \"name\": \"invalid.illegal.operator.python\",\r\n                    \"match\": \"[?$]\"\r\n                },\r\n                {\r\n                    \"name\": \"invalid.illegal.operator.python\",\r\n                    \"comment\": \"We don't want `!` to flash when we're typing `!=`\",\r\n                    \"match\": \"!\\\\b\"\r\n                }\r\n            ]\r\n        },\r\n        \"illegal-object-name\": {\r\n            \"comment\": \"It's illegal to name class or function \\\"True\\\"\",\r\n            \"name\": \"keyword.illegal.name.python\",\r\n            \"match\": \"\\\\b(True|False|None)\\\\b\"\r\n        },\r\n        \"illegal-anno\": {\r\n            \"name\": \"invalid.illegal.annotation.python\",\r\n            \"match\": \"->\"\r\n        },\r\n        \"regexp-base-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-quantifier\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-base-common\"\r\n                }\r\n            ]\r\n        },\r\n        \"fregexp-base-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fregexp-quantifier\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-formatting-braces\"\r\n                },\r\n                {\r\n                    \"match\": \"\\\\{.*?\\\\}\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-base-common\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-formatting-braces\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"comment\": \"empty braces are illegal\",\r\n                    \"match\": \"({)(\\\\s*?)(})\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"constant.character.format.placeholder.other.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.brace.python\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"constant.character.format.placeholder.other.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"name\": \"constant.character.escape.python\",\r\n                    \"match\": \"({{|}})\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-base-common\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"support.other.match.any.regexp\",\r\n                    \"match\": \"\\\\.\"\r\n                },\r\n                {\r\n                    \"name\": \"support.other.match.begin.regexp\",\r\n                    \"match\": \"\\\\^\"\r\n                },\r\n                {\r\n                    \"name\": \"support.other.match.end.regexp\",\r\n                    \"match\": \"\\\\$\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.operator.quantifier.regexp\",\r\n                    \"match\": \"[+*?]\\\\??\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.operator.disjunction.regexp\",\r\n                    \"match\": \"\\\\|\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-sequence\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-quantifier\": {\r\n            \"name\": \"keyword.operator.quantifier.regexp\",\r\n            \"match\": \"(?x)\\n  \\\\{(\\n    \\\\d+ | \\\\d+,(\\\\d+)? | ,\\\\d+\\n  )\\\\}\\n\"\r\n        },\r\n        \"fregexp-quantifier\": {\r\n            \"name\": \"keyword.operator.quantifier.regexp\",\r\n            \"match\": \"(?x)\\n  \\\\{\\\\{(\\n    \\\\d+ | \\\\d+,(\\\\d+)? | ,\\\\d+\\n  )\\\\}\\\\}\\n\"\r\n        },\r\n        \"regexp-backreference-number\": {\r\n            \"name\": \"meta.backreference.regexp\",\r\n            \"match\": \"(\\\\\\\\[1-9]\\\\d?)\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"entity.name.tag.backreference.regexp\"\r\n                }\r\n            }\r\n        },\r\n        \"regexp-backreference\": {\r\n            \"name\": \"meta.backreference.named.regexp\",\r\n            \"match\": \"(?x)\\n  (\\\\()  (\\\\?P= \\\\w+(?:\\\\s+[[:alnum:]]+)?)  (\\\\))\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.backreference.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.backreference.regexp\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.backreference.named.end.regexp\"\r\n                }\r\n            }\r\n        },\r\n        \"regexp-flags\": {\r\n            \"name\": \"storage.modifier.flag.regexp\",\r\n            \"match\": \"\\\\(\\\\?[aiLmsux]+\\\\)\"\r\n        },\r\n        \"regexp-escape-special\": {\r\n            \"name\": \"support.other.escape.special.regexp\",\r\n            \"match\": \"\\\\\\\\([AbBdDsSwWZ])\"\r\n        },\r\n        \"regexp-escape-character\": {\r\n            \"name\": \"constant.character.escape.regexp\",\r\n            \"match\": \"(?x)\\n  \\\\\\\\ (\\n        x[0-9A-Fa-f]{2}\\n        | 0[0-7]{1,2}\\n        | [0-7]{3}\\n     )\\n\"\r\n        },\r\n        \"regexp-escape-unicode\": {\r\n            \"name\": \"constant.character.unicode.regexp\",\r\n            \"match\": \"(?x)\\n  \\\\\\\\ (\\n        u[0-9A-Fa-f]{4}\\n        | U[0-9A-Fa-f]{8}\\n     )\\n\"\r\n        },\r\n        \"regexp-escape-catchall\": {\r\n            \"name\": \"constant.character.escape.regexp\",\r\n            \"match\": \"\\\\\\\\(.|\\\\n)\"\r\n        },\r\n        \"regexp-escape-sequence\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-escape-special\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-character\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference-number\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-catchall\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-charecter-set-escapes\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"constant.character.escape.regexp\",\r\n                    \"match\": \"\\\\\\\\[abfnrtv\\\\\\\\]\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-special\"\r\n                },\r\n                {\r\n                    \"name\": \"constant.character.escape.regexp\",\r\n                    \"match\": \"\\\\\\\\([0-7]{1,3})\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-character\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-catchall\"\r\n                }\r\n            ]\r\n        },\r\n        \"codetags\": {\r\n            \"match\": \"(?:\\\\b(NOTE|XXX|HACK|FIXME|BUG|TODO)\\\\b)\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.codetag.notation.python\"\r\n                }\r\n            }\r\n        },\r\n        \"comments-base\": {\r\n            \"name\": \"comment.line.number-sign.python\",\r\n            \"begin\": \"(\\\\#)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.comment.python\"\r\n                }\r\n            },\r\n            \"end\": \"($)\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"comments-string-single-three\": {\r\n            \"name\": \"comment.line.number-sign.python\",\r\n            \"begin\": \"(\\\\#)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.comment.python\"\r\n                }\r\n            },\r\n            \"end\": \"($|(?='''))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"comments-string-double-three\": {\r\n            \"name\": \"comment.line.number-sign.python\",\r\n            \"begin\": \"(\\\\#)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.comment.python\"\r\n                }\r\n            },\r\n            \"end\": \"($|(?=\\\"\\\"\\\"))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-parentheses\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-character-set\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"match\": \"(?x)\\n  \\\\[ \\\\^? \\\\] (?! .*?\\\\])\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"meta.character.set.regexp\",\r\n                    \"begin\": \"(\\\\[)(\\\\^)?(\\\\])?\",\r\n                    \"end\": \"(\\\\]|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.begin.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"keyword.operator.negation.regexp\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"constant.character.set.regexp\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.end.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.newline.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#regexp-charecter-set-escapes\"\r\n                        },\r\n                        {\r\n                            \"name\": \"constant.character.set.regexp\",\r\n                            \"match\": \"[^\\\\n]\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-comments\": {\r\n            \"name\": \"comment.regexp\",\r\n            \"begin\": \"\\\\(\\\\?#\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.comment.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.comment.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-parentheses\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-character-set\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"match\": \"(?x)\\n  \\\\[ \\\\^? \\\\] (?! .*?\\\\])\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"meta.character.set.regexp\",\r\n                    \"begin\": \"(\\\\[)(\\\\^)?(\\\\])?\",\r\n                    \"end\": \"(\\\\]|(?=\\\\'\\\\'\\\\'))\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.begin.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"keyword.operator.negation.regexp\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"constant.character.set.regexp\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.end.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.newline.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#regexp-charecter-set-escapes\"\r\n                        },\r\n                        {\r\n                            \"name\": \"constant.character.set.regexp\",\r\n                            \"match\": \"[^\\\\n]\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-comments\": {\r\n            \"name\": \"comment.regexp\",\r\n            \"begin\": \"\\\\(\\\\?#\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.comment.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.comment.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-parentheses\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-character-set\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"match\": \"(?x)\\n  \\\\[ \\\\^? \\\\] (?! .*?\\\\])\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"meta.character.set.regexp\",\r\n                    \"begin\": \"(\\\\[)(\\\\^)?(\\\\])?\",\r\n                    \"end\": \"(\\\\]|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.begin.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"keyword.operator.negation.regexp\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"constant.character.set.regexp\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.end.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.newline.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#regexp-charecter-set-escapes\"\r\n                        },\r\n                        {\r\n                            \"name\": \"constant.character.set.regexp\",\r\n                            \"match\": \"[^\\\\n]\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-comments\": {\r\n            \"name\": \"comment.regexp\",\r\n            \"begin\": \"\\\\(\\\\?#\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.comment.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.comment.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-parentheses\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-character-set\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"match\": \"(?x)\\n  \\\\[ \\\\^? \\\\] (?! .*?\\\\])\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"meta.character.set.regexp\",\r\n                    \"begin\": \"(\\\\[)(\\\\^)?(\\\\])?\",\r\n                    \"end\": \"(\\\\]|(?=\\\"\\\"\\\"))\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.begin.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"keyword.operator.negation.regexp\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"constant.character.set.regexp\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.end.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.newline.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#regexp-charecter-set-escapes\"\r\n                        },\r\n                        {\r\n                            \"name\": \"constant.character.set.regexp\",\r\n                            \"match\": \"[^\\\\n]\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-comments\": {\r\n            \"name\": \"comment.regexp\",\r\n            \"begin\": \"\\\\(\\\\?#\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.comment.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.comment.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-single-one-line\": {\r\n            \"name\": \"string.regexp.quoted.single.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([bB]r)|(r[bB]?))(\\\\')\",\r\n            \"end\": \"(\\\\')|(?<!\\\\\\\\)(\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-single-three-line\": {\r\n            \"name\": \"string.regexp.quoted.multi.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([bB]r)|(r[bB]?))(\\\\'\\\\'\\\\')\",\r\n            \"end\": \"(\\\\'\\\\'\\\\')\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-double-one-line\": {\r\n            \"name\": \"string.regexp.quoted.single.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([bB]r)|(r[bB]?))(\\\")\",\r\n            \"end\": \"(\\\")|(?<!\\\\\\\\)(\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-double-three-line\": {\r\n            \"name\": \"string.regexp.quoted.multi.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([bB]r)|(r[bB]?))(\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\"\\\"\\\")\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fregexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-parentheses\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fregexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-parentheses\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fregexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-parentheses\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fregexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-parentheses\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"fregexp-single-one-line\": {\r\n            \"name\": \"string.interpolated.python string.regexp.quoted.single.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([fF]r)|(r[fF]?))(\\\\')\",\r\n            \"end\": \"(\\\\')|(?<!\\\\\\\\)(\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"fregexp-single-three-line\": {\r\n            \"name\": \"string.interpolated.python string.regexp.quoted.multi.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([fF]r)|(r[fF]?))(\\\\'\\\\'\\\\')\",\r\n            \"end\": \"(\\\\'\\\\'\\\\')\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"fregexp-double-one-line\": {\r\n            \"name\": \"string.interpolated.python string.regexp.quoted.single.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([fF]r)|(r[fF]?))(\\\")\",\r\n            \"end\": \"(\\\")|(?<!\\\\\\\\)(\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"fregexp-double-three-line\": {\r\n            \"name\": \"string.interpolated.python string.regexp.quoted.multi.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([fF]r)|(r[fF]?))(\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\"\\\"\\\")\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-raw-quoted-single-line\": {\r\n            \"name\": \"string.quoted.raw.single.python\",\r\n            \"begin\": \"\\\\b(([uU]R)|(R))((['\\\"]))\",\r\n            \"end\": \"(\\\\4)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-single-bad-brace1-formatting-raw\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-single-bad-brace2-formatting-raw\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-raw-guts\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-bin-quoted-single-line\": {\r\n            \"name\": \"string.quoted.binary.single.python\",\r\n            \"begin\": \"(\\\\b[bB])((['\\\"]))\",\r\n            \"end\": \"(\\\\2)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-entity\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-raw-bin-quoted-single-line\": {\r\n            \"name\": \"string.quoted.raw.binary.single.python\",\r\n            \"begin\": \"(\\\\b(?:R[bB]|[bB]R))((['\\\"]))\",\r\n            \"end\": \"(\\\\2)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-raw-bin-guts\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-quoted-single-line\": {\r\n            \"name\": \"string.quoted.single.python\",\r\n            \"begin\": \"(?:\\\\b([rR])(?=[uU]))?([uU])?((['\\\"]))\",\r\n            \"end\": \"(\\\\3)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"invalid.illegal.prefix.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-single-bad-brace1-formatting-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-single-bad-brace2-formatting-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-unicode-guts\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-single-bad-brace1-formatting-unicode\": {\r\n            \"comment\": \"template using {% ... %}\",\r\n            \"begin\": \"(?x)\\n    (?= \\\\{%\\n          ( .*? (?!(['\\\"])|((?<!\\\\\\\\)\\\\n)) )\\n        %\\\\}\\n    )\\n\",\r\n            \"end\": \"(?=(['\\\"])|((?<!\\\\\\\\)\\\\n))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#escape-sequence\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-line-continuation\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-single-bad-brace1-formatting-raw\": {\r\n            \"comment\": \"template using {% ... %}\",\r\n            \"begin\": \"(?x)\\n    (?= \\\\{%\\n          ( .*? (?!(['\\\"])|((?<!\\\\\\\\)\\\\n)) )\\n        %\\\\}\\n    )\\n\",\r\n            \"end\": \"(?=(['\\\"])|((?<!\\\\\\\\)\\\\n))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-single-bad-brace2-formatting-unicode\": {\r\n            \"comment\": \"odd format or format-like syntax\",\r\n            \"begin\": \"(?x)\\n    (?!\\\\{\\\\{)\\n    (?= \\\\{ (\\n              \\\\w*? (?!(['\\\"])|((?<!\\\\\\\\)\\\\n)) [^!:\\\\.\\\\[}\\\\w]\\n           )\\n        .*?(?!(['\\\"])|((?<!\\\\\\\\)\\\\n))\\n        \\\\}\\n    )\\n\",\r\n            \"end\": \"(?=(['\\\"])|((?<!\\\\\\\\)\\\\n))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-entity\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-single-bad-brace2-formatting-raw\": {\r\n            \"comment\": \"odd format or format-like syntax\",\r\n            \"begin\": \"(?x)\\n    (?!\\\\{\\\\{)\\n    (?= \\\\{ (\\n              \\\\w*? (?!(['\\\"])|((?<!\\\\\\\\)\\\\n)) [^!:\\\\.\\\\[}\\\\w]\\n           )\\n        .*?(?!(['\\\"])|((?<!\\\\\\\\)\\\\n))\\n        \\\\}\\n    )\\n\",\r\n            \"end\": \"(?=(['\\\"])|((?<!\\\\\\\\)\\\\n))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-raw-quoted-multi-line\": {\r\n            \"name\": \"string.quoted.raw.multi.python\",\r\n            \"begin\": \"\\\\b(([uU]R)|(R))('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\4)\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-multi-bad-brace1-formatting-raw\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-multi-bad-brace2-formatting-raw\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-raw-guts\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-bin-quoted-multi-line\": {\r\n            \"name\": \"string.quoted.binary.multi.python\",\r\n            \"begin\": \"(\\\\b[bB])('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\2)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-entity\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-raw-bin-quoted-multi-line\": {\r\n            \"name\": \"string.quoted.raw.binary.multi.python\",\r\n            \"begin\": \"(\\\\b(?:R[bB]|[bB]R))('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\2)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-raw-bin-guts\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-quoted-multi-line\": {\r\n            \"name\": \"string.quoted.multi.python\",\r\n            \"begin\": \"(?:\\\\b([rR])(?=[uU]))?([uU])?('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\3)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"invalid.illegal.prefix.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-multi-bad-brace1-formatting-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-multi-bad-brace2-formatting-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-unicode-guts\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-multi-bad-brace1-formatting-unicode\": {\r\n            \"comment\": \"template using {% ... %}\",\r\n            \"begin\": \"(?x)\\n    (?= \\\\{%\\n          ( .*? (?!'''|\\\"\\\"\\\") )\\n        %\\\\}\\n    )\\n\",\r\n            \"end\": \"(?='''|\\\"\\\"\\\")\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#escape-sequence\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-line-continuation\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-multi-bad-brace1-formatting-raw\": {\r\n            \"comment\": \"template using {% ... %}\",\r\n            \"begin\": \"(?x)\\n    (?= \\\\{%\\n          ( .*? (?!'''|\\\"\\\"\\\") )\\n        %\\\\}\\n    )\\n\",\r\n            \"end\": \"(?='''|\\\"\\\"\\\")\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-multi-bad-brace2-formatting-unicode\": {\r\n            \"comment\": \"odd format or format-like syntax\",\r\n            \"begin\": \"(?x)\\n    (?!\\\\{\\\\{)\\n    (?= \\\\{ (\\n              \\\\w*? (?!'''|\\\"\\\"\\\") [^!:\\\\.\\\\[}\\\\w]\\n           )\\n        .*?(?!'''|\\\"\\\"\\\")\\n        \\\\}\\n    )\\n\",\r\n            \"end\": \"(?='''|\\\"\\\"\\\")\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-entity\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-multi-bad-brace2-formatting-raw\": {\r\n            \"comment\": \"odd format or format-like syntax\",\r\n            \"begin\": \"(?x)\\n    (?!\\\\{\\\\{)\\n    (?= \\\\{ (\\n              \\\\w*? (?!'''|\\\"\\\"\\\") [^!:\\\\.\\\\[}\\\\w]\\n           )\\n        .*?(?!'''|\\\"\\\"\\\")\\n        \\\\}\\n    )\\n\",\r\n            \"end\": \"(?='''|\\\"\\\"\\\")\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-fnorm-quoted-single-line\": {\r\n            \"name\": \"meta.fstring.python\",\r\n            \"begin\": \"(\\\\b[fF])([bBuU])?((['\\\"]))\",\r\n            \"end\": \"(\\\\3)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"string.interpolated.python string.quoted.single.python storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python string.interpolated.python string.quoted.single.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python string.interpolated.python string.quoted.single.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-guts\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-illegal-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-single-core\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-normf-quoted-single-line\": {\r\n            \"name\": \"meta.fstring.python\",\r\n            \"begin\": \"(\\\\b[bBuU])([fF])((['\\\"]))\",\r\n            \"end\": \"(\\\\3)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"invalid.illegal.prefix.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"string.interpolated.python string.quoted.single.python storage.type.string.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python string.quoted.single.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python string.interpolated.python string.quoted.single.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-guts\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-illegal-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-single-core\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-raw-quoted-single-line\": {\r\n            \"name\": \"meta.fstring.python\",\r\n            \"begin\": \"(\\\\b(?:[R][fF]|[fF][R]))((['\\\"]))\",\r\n            \"end\": \"(\\\\2)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"string.interpolated.python string.quoted.raw.single.python storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python string.quoted.raw.single.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python string.interpolated.python string.quoted.raw.single.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-raw-guts\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-illegal-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-raw-single-core\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-single-core\": {\r\n            \"name\": \"string.interpolated.python string.quoted.single.python\",\r\n            \"match\": \"(?x)\\n  (.+?)\\n    (\\n      (?# .* and .*? in multi-line match need special handling of\\n        newlines otherwise SublimeText and Atom will match slightly\\n        differently.\\n\\n        The guard for newlines has to be separate from the\\n        lookahead because of special $ matching rule.)\\n      ($\\\\n?)\\n      |\\n      (?=[\\\\\\\\\\\\}\\\\{]|(['\\\"])|((?<!\\\\\\\\)\\\\n))\\n    )\\n  (?# due to how multiline regexps are matched we need a special case\\n    for matching a newline character)\\n  | \\\\n\\n\"\r\n        },\r\n        \"fstring-raw-single-core\": {\r\n            \"name\": \"string.interpolated.python string.quoted.raw.single.python\",\r\n            \"match\": \"(?x)\\n  (.+?)\\n    (\\n      (?# .* and .*? in multi-line match need special handling of\\n        newlines otherwise SublimeText and Atom will match slightly\\n        differently.\\n\\n        The guard for newlines has to be separate from the\\n        lookahead because of special $ matching rule.)\\n      ($\\\\n?)\\n      |\\n      (?=[\\\\\\\\\\\\}\\\\{]|(['\\\"])|((?<!\\\\\\\\)\\\\n))\\n    )\\n  (?# due to how multiline regexps are matched we need a special case\\n    for matching a newline character)\\n  | \\\\n\\n\"\r\n        },\r\n        \"fstring-single-brace\": {\r\n            \"comment\": \"value interpolation using { ... }\",\r\n            \"begin\": \"(\\\\{)\",\r\n            \"end\": \"(?x)\\n  (\\\\})|(?=\\\\n)\\n\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-terminator-single\"\r\n                },\r\n                {\r\n                    \"include\": \"#f-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-terminator-single\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(![rsa])(?=})\"\r\n                },\r\n                {\r\n                    \"match\": \"(?x)\\n  (![rsa])?\\n    ( : \\\\w? [<>=^]? [-+ ]? \\\\#?\\n      \\\\d* ,? (\\\\.\\\\d+)? [bcdeEfFgGnosxX%]? )(?=})\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-terminator-single-tail\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-terminator-single-tail\": {\r\n            \"begin\": \"(![rsa])?(:)(?=.*?{)\",\r\n            \"end\": \"(?=})|(?=\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.format.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"storage.type.format.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-illegal-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-single-brace\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"([bcdeEfFgGnosxX%])(?=})\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\.\\\\d+)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(,)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\d+)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\#)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"([-+ ])\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"([<>=^])\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\w)\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-fnorm-quoted-multi-line\": {\r\n            \"name\": \"meta.fstring.python\",\r\n            \"begin\": \"(\\\\b[fF])([bBuU])?('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\3)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"string.interpolated.python string.quoted.multi.python storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python string.interpolated.python string.quoted.multi.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python string.interpolated.python string.quoted.multi.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-guts\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-illegal-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-multi-core\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-normf-quoted-multi-line\": {\r\n            \"name\": \"meta.fstring.python\",\r\n            \"begin\": \"(\\\\b[bBuU])([fF])('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\3)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"invalid.illegal.prefix.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"string.interpolated.python string.quoted.multi.python storage.type.string.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python string.quoted.multi.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python string.interpolated.python string.quoted.multi.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-guts\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-illegal-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-multi-core\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-raw-quoted-multi-line\": {\r\n            \"name\": \"meta.fstring.python\",\r\n            \"begin\": \"(\\\\b(?:[R][fF]|[fF][R]))('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\2)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"string.interpolated.python string.quoted.raw.multi.python storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python string.quoted.raw.multi.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python string.interpolated.python string.quoted.raw.multi.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-raw-guts\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-illegal-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-raw-multi-core\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-multi-core\": {\r\n            \"name\": \"string.interpolated.python string.quoted.multi.python\",\r\n            \"match\": \"(?x)\\n  (.+?)\\n    (\\n      (?# .* and .*? in multi-line match need special handling of\\n        newlines otherwise SublimeText and Atom will match slightly\\n        differently.\\n\\n        The guard for newlines has to be separate from the\\n        lookahead because of special $ matching rule.)\\n      ($\\\\n?)\\n      |\\n      (?=[\\\\\\\\\\\\}\\\\{]|'''|\\\"\\\"\\\")\\n    )\\n  (?# due to how multiline regexps are matched we need a special case\\n    for matching a newline character)\\n  | \\\\n\\n\"\r\n        },\r\n        \"fstring-raw-multi-core\": {\r\n            \"name\": \"string.interpolated.python string.quoted.raw.multi.python\",\r\n            \"match\": \"(?x)\\n  (.+?)\\n    (\\n      (?# .* and .*? in multi-line match need special handling of\\n        newlines otherwise SublimeText and Atom will match slightly\\n        differently.\\n\\n        The guard for newlines has to be separate from the\\n        lookahead because of special $ matching rule.)\\n      ($\\\\n?)\\n      |\\n      (?=[\\\\\\\\\\\\}\\\\{]|'''|\\\"\\\"\\\")\\n    )\\n  (?# due to how multiline regexps are matched we need a special case\\n    for matching a newline character)\\n  | \\\\n\\n\"\r\n        },\r\n        \"fstring-multi-brace\": {\r\n            \"comment\": \"value interpolation using { ... }\",\r\n            \"begin\": \"(\\\\{)\",\r\n            \"end\": \"(?x)\\n  (\\\\})\\n\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-terminator-multi\"\r\n                },\r\n                {\r\n                    \"include\": \"#f-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-terminator-multi\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(![rsa])(?=})\"\r\n                },\r\n                {\r\n                    \"match\": \"(?x)\\n  (![rsa])?\\n    ( : \\\\w? [<>=^]? [-+ ]? \\\\#?\\n      \\\\d* ,? (\\\\.\\\\d+)? [bcdeEfFgGnosxX%]? )(?=})\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-terminator-multi-tail\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-terminator-multi-tail\": {\r\n            \"begin\": \"(![rsa])?(:)(?=.*?{)\",\r\n            \"end\": \"(?=})\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.format.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"storage.type.format.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-illegal-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-multi-brace\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"([bcdeEfFgGnosxX%])(?=})\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\.\\\\d+)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(,)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\d+)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\#)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"([-+ ])\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"([<>=^])\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\w)\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}\r\n"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.editor_loaded",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_response",
            "payload": {
                "css": "\n:root {\n    --code-comment-color: #008000;\n    --code-numeric-color: #09885a;\n    --code-string-color: #a31515;\n    --code-variable-color: #001080;\n    --code-type-color: #267f99;\n    --code-font-family: Consolas, 'Courier New', monospace;\n    --code-font-size: 14px;\n}\n\n\n    :root {\n        --override-widget-background: #f3f3f3;\n        --override-foreground: #000000;\n        --override-background: #FFFFFF;\n        --override-selection-background: #add6ff;\n        --override-watermark-color: rgba(66, 66, 66, 0.75);\n        --override-tabs-background: #f3f3f3;\n        --override-progress-background: #0066bf;\n        --override-badge-background: #c4c4c4;\n        --override-lineHighlightBorder: #eeeeee;\n        --override-peek-background: #f2f8fc;\n    }\n\n",
                "theme": "Default Light+"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_response",
            "payload": {
                "theme": {
                    "base": "vs",
                    "inherit": true,
                    "rules": [
                        {
                            "token": "punctuation.definition.comment",
                            "foreground": "#008000"
                        },
                        {
                            "token": "punctuation.definition.string",
                            "foreground": "#a31515"
                        }
                    ],
                    "colors": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "send_info",
            "payload": {
                "cellCount": 9,
                "undoCount": 0,
                "redoCount": 0
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_response",
            "payload": {
                "css": "\n:root {\n    --code-comment-color: #008000;\n    --code-numeric-color: #09885a;\n    --code-string-color: #a31515;\n    --code-variable-color: #001080;\n    --code-type-color: #267f99;\n    --code-font-family: Consolas, 'Courier New', monospace;\n    --code-font-size: 14px;\n}\n\n\n    :root {\n        --override-widget-background: #f3f3f3;\n        --override-foreground: #000000;\n        --override-background: #FFFFFF;\n        --override-selection-background: #add6ff;\n        --override-watermark-color: rgba(66, 66, 66, 0.75);\n        --override-tabs-background: #f3f3f3;\n        --override-progress-background: #0066bf;\n        --override-badge-background: #c4c4c4;\n        --override-lineHighlightBorder: #eeeeee;\n        --override-peek-background: #f2f8fc;\n    }\n\n",
                "theme": "Default Light+"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_response",
            "payload": {
                "theme": {
                    "base": "vs",
                    "inherit": true,
                    "rules": [
                        {
                            "token": "punctuation.definition.comment",
                            "foreground": "#008000"
                        },
                        {
                            "token": "punctuation.definition.string",
                            "foreground": "#a31515"
                        }
                    ],
                    "colors": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_css_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_response",
            "payload": {
                "css": "\n:root {\n    --code-comment-color: #008000;\n    --code-numeric-color: #09885a;\n    --code-string-color: #a31515;\n    --code-variable-color: #001080;\n    --code-type-color: #267f99;\n    --code-font-family: Consolas, 'Courier New', monospace;\n    --code-font-size: 14px;\n}\n\n\n    :root {\n        --override-widget-background: #f3f3f3;\n        --override-foreground: #000000;\n        --override-background: #FFFFFF;\n        --override-selection-background: #add6ff;\n        --override-watermark-color: rgba(66, 66, 66, 0.75);\n        --override-tabs-background: #f3f3f3;\n        --override-progress-background: #0066bf;\n        --override-badge-background: #c4c4c4;\n        --override-lineHighlightBorder: #eeeeee;\n        --override-peek-background: #f2f8fc;\n    }\n\n",
                "theme": "Default Light+"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_response",
            "payload": {
                "theme": {
                    "base": "vs",
                    "inherit": true,
                    "rules": [
                        {
                            "token": "punctuation.definition.comment",
                            "foreground": "#008000"
                        },
                        {
                            "token": "punctuation.definition.string",
                            "foreground": "#a31515"
                        }
                    ],
                    "colors": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_css_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_response",
            "payload": {
                "css": "\n:root {\n    --code-comment-color: #008000;\n    --code-numeric-color: #09885a;\n    --code-string-color: #a31515;\n    --code-variable-color: #001080;\n    --code-type-color: #267f99;\n    --code-font-family: Consolas, 'Courier New', monospace;\n    --code-font-size: 14px;\n}\n\n\n    :root {\n        --override-widget-background: #f3f3f3;\n        --override-foreground: #000000;\n        --override-background: #FFFFFF;\n        --override-selection-background: #add6ff;\n        --override-watermark-color: rgba(66, 66, 66, 0.75);\n        --override-tabs-background: #f3f3f3;\n        --override-progress-background: #0066bf;\n        --override-badge-background: #c4c4c4;\n        --override-lineHighlightBorder: #eeeeee;\n        --override-peek-background: #f2f8fc;\n    }\n\n",
                "theme": "Default Light+"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_response",
            "payload": {
                "theme": {
                    "base": "vs",
                    "inherit": true,
                    "rules": [
                        {
                            "token": "punctuation.definition.comment",
                            "foreground": "#008000"
                        },
                        {
                            "token": "punctuation.definition.string",
                            "foreground": "#a31515"
                        }
                    ],
                    "colors": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_css_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_response",
            "payload": {
                "css": "\n:root {\n    --code-comment-color: #008000;\n    --code-numeric-color: #09885a;\n    --code-string-color: #a31515;\n    --code-variable-color: #001080;\n    --code-type-color: #267f99;\n    --code-font-family: Consolas, 'Courier New', monospace;\n    --code-font-size: 14px;\n}\n\n\n    :root {\n        --override-widget-background: #f3f3f3;\n        --override-foreground: #000000;\n        --override-background: #FFFFFF;\n        --override-selection-background: #add6ff;\n        --override-watermark-color: rgba(66, 66, 66, 0.75);\n        --override-tabs-background: #f3f3f3;\n        --override-progress-background: #0066bf;\n        --override-badge-background: #c4c4c4;\n        --override-lineHighlightBorder: #eeeeee;\n        --override-peek-background: #f2f8fc;\n    }\n\n",
                "theme": "Default Light+"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_response",
            "payload": {
                "theme": {
                    "base": "vs",
                    "inherit": true,
                    "rules": [
                        {
                            "token": "punctuation.definition.comment",
                            "foreground": "#008000"
                        },
                        {
                            "token": "punctuation.definition.string",
                            "foreground": "#a31515"
                        }
                    ],
                    "colors": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_loc_init",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "settings_updated"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_settings",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_loc_init",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_loc_init",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "rendered_execution",
            "payload": {
                "ids": [
                    "NotebookImport#0",
                    "NotebookImport#1",
                    "NotebookImport#2",
                    "NotebookImport#3",
                    "NotebookImport#4",
                    "NotebookImport#5",
                    "NotebookImport#6",
                    "NotebookImport#7",
                    "NotebookImport#8"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_load_all_cells",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_settings",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_settings",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_loc_init",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_loc_init",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_load_all_cells",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_settings",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_settings",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_css_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_monaco_theme_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "load_all_cells_complete",
            "payload": {
                "cells": [
                    {
                        "id": "NotebookImport#0",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "markdown",
                            "metadata": {},
                            "source": [
                                "## Intall pythreejs\n",
                                "pip install pythreejs"
                            ],
                            "execution_count": null,
                            "outputs": []
                        }
                    },
                    {
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 11,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from pythreejs import *\n",
                                "from IPython.display import display\n",
                                "from math import pi\n"
                            ]
                        }
                    },
                    {
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 12,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "# Reduce repo churn for examples with embedded state:\n",
                                "from pythreejs._example_helper import use_example_model_ids\n",
                                "use_example_model_ids()"
                            ]
                        }
                    },
                    {
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 13,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        }
                    },
                    {
                        "id": "NotebookImport#4",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 14,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "view_width = 600\n",
                                "view_height = 400"
                            ]
                        }
                    },
                    {
                        "id": "NotebookImport#5",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 15,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "sphere = Mesh(\n",
                                "    SphereBufferGeometry(1, 32, 16),\n",
                                "    MeshStandardMaterial(color='red')\n",
                                ")"
                            ]
                        }
                    },
                    {
                        "id": "NotebookImport#6",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 16,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "cube = Mesh(\n",
                                "    BoxBufferGeometry(1, 1, 1),\n",
                                "    MeshPhysicalMaterial(color='green'),\n",
                                "    position=[2, 0, 4]\n",
                                ")\n"
                            ]
                        }
                    },
                    {
                        "id": "NotebookImport#7",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 17,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "key_light = DirectionalLight(position=[0, 10, 10])\n",
                                "ambient_light = AmbientLight()"
                            ]
                        }
                    },
                    {
                        "id": "NotebookImport#8",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 18,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "f = \"\"\"\n",
                                "function f(origu, origv, out) {\n",
                                "    // scale u and v to the ranges I want: [0, 2*pi]\n",
                                "    var u = 2*Math.PI*origu;\n",
                                "    var v = 2*Math.PI*origv;\n",
                                "\n",
                                "    var x = Math.sin(u);\n",
                                "    var y = Math.cos(v);\n",
                                "    var z = Math.cos(u+v);\n",
                                "\n",
                                "    out.set(x,y,z)\n",
                                "}\n",
                                "\"\"\"\n",
                                "surf_g = ParametricGeometry(func=f, slices=16, stacks=16);\n",
                                "\n",
                                "surf1 = Mesh(geometry=surf_g,\n",
                                "             material=MeshLambertMaterial(color='green', side='FrontSide'))\n",
                                "surf2 = Mesh(geometry=surf_g,\n",
                                "             material=MeshLambertMaterial(color='yellow', side='BackSide'))\n",
                                "surf = Group(children=[surf1, surf2])\n",
                                "\n",
                                "camera2 = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "scene2 = Scene(children=[surf, camera2,\n",
                                "                         DirectionalLight(position=[3, 5, 1], intensity=0.6),\n",
                                "                         AmbientLight(intensity=0.5)])\n",
                                "renderer2 = Renderer(camera=camera2, scene=scene2,\n",
                                "                     controls=[OrbitControls(controlling=camera2)],\n",
                                "                     width=view_width, height=view_height)\n",
                                "display(renderer2)"
                            ]
                        }
                    }
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.loaded_all_cells",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_load_onigasm_assembly_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_load_tmlanguage_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.code_created",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.code_created",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.code_created",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.code_created",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.code_created",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.code_created",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.code_created",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.code_created",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_monaco_ready",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_css_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_monaco_theme_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_css_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_monaco_theme_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_css_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_monaco_theme_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_css_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_monaco_theme_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_css_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_monaco_theme_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "send_info",
            "payload": {
                "cellCount": 9,
                "undoCount": 0,
                "redoCount": 0,
                "selectedCell": "NotebookImport#2"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "reexecute_cells",
            "payload": {
                "cellIds": [
                    "NotebookImport#1"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "native_command",
            "payload": {
                "command": 14,
                "source": "mouse"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell_and_advance",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.send_command",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": ""
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "notebook_execution_activated",
            "payload": "file:///c%3A/Users/RCHIOD~1.RED/AppData/Local/Temp/tmp-290881x03GmrOnzzU.ipynb"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_kernelOptions",
            "payload": {
                "clientId": "3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6",
                "id": "0213d5a9-e48b-472a-b27b-8d30aca7aab5",
                "model": {
                    "name": "python3",
                    "id": "0213d5a9-e48b-472a-b27b-8d30aca7aab5"
                },
                "userName": ""
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_mirror_execute",
            "payload": {
                "id": "747aca6b-914b-44bb-b637-bc4a209c50dc",
                "msg": {
                    "buffers": [],
                    "channel": "shell",
                    "content": {
                        "silent": false,
                        "store_history": false,
                        "user_expressions": {},
                        "allow_stdin": true,
                        "stop_on_error": false,
                        "code": "import os\nimport sys\n%cd \"c:\\Users\\RCHIOD~1.RED\\AppData\\Local\\Temp\"\nif os.getcwd() not in sys.path:\n    sys.path.insert(0, os.getcwd())"
                    },
                    "header": {
                        "date": "2020-04-03T18:24:24.462Z",
                        "msg_id": "747aca6b-914b-44bb-b637-bc4a209c50dc",
                        "msg_type": "execute_request",
                        "session": "3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6",
                        "username": "",
                        "version": "5.2"
                    },
                    "metadata": {},
                    "parent_header": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_registerCommTarget",
            "payload": "jupyter.widget"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_registerCommTarget",
            "payload": "jupyter.widget"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "747aca6b-914b-44bb-b637-bc4a209c50dc"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": ""
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_notebook_execution_activated",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "bd744639-2708-4586-b578-e9727c559369",
                "data": "{\"header\": {\"msg_id\": \"598d0ed0-e510a3f8c5029e66503cb0d4\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:25.063465Z\", \"version\": \"5.3\"}, \"msg_id\": \"598d0ed0-e510a3f8c5029e66503cb0d4\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:24.462000Z\", \"msg_id\": \"747aca6b-914b-44bb-b637-bc4a209c50dc\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "bd744639-2708-4586-b578-e9727c559369"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "9f221f8f-319a-4c04-b2db-2d70f7e87d15",
                "data": "{\"header\": {\"msg_id\": \"a891742e-776ac7d4bfe69578967a03ba\", \"msg_type\": \"execute_input\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:25.063465Z\", \"version\": \"5.3\"}, \"msg_id\": \"a891742e-776ac7d4bfe69578967a03ba\", \"msg_type\": \"execute_input\", \"parent_header\": {\"date\": \"2020-04-03T18:24:24.462000Z\", \"msg_id\": \"747aca6b-914b-44bb-b637-bc4a209c50dc\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"code\": \"import os\\nimport sys\\n%cd \\\"c:\\\\Users\\\\RCHIOD~1.RED\\\\AppData\\\\Local\\\\Temp\\\"\\nif os.getcwd() not in sys.path:\\n    sys.path.insert(0, os.getcwd())\", \"execution_count\": 1}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "9f221f8f-319a-4c04-b2db-2d70f7e87d15"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "3ae626c2-f48d-4bce-a1ba-180abe45fb95",
                "data": "{\"header\": {\"msg_id\": \"19f92b11-a24b8fd1742c3082124664ec\", \"msg_type\": \"stream\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:25.067465Z\", \"version\": \"5.3\"}, \"msg_id\": \"19f92b11-a24b8fd1742c3082124664ec\", \"msg_type\": \"stream\", \"parent_header\": {\"date\": \"2020-04-03T18:24:24.462000Z\", \"msg_id\": \"747aca6b-914b-44bb-b637-bc4a209c50dc\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"name\": \"stdout\", \"text\": \"c:\\\\Users\\\\RCHIOD~1.RED\\\\AppData\\\\Local\\\\Temp\\n\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "3ae626c2-f48d-4bce-a1ba-180abe45fb95"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "1101671c-3904-49a9-a9a7-50217e07f47a",
                "data": "{\"header\": {\"msg_id\": \"c2238a0e-bd290ba47fb417b3e95b7251\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:25.071465Z\", \"version\": \"5.3\"}, \"msg_id\": \"c2238a0e-bd290ba47fb417b3e95b7251\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:24.462000Z\", \"msg_id\": \"747aca6b-914b-44bb-b637-bc4a209c50dc\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "1101671c-3904-49a9-a9a7-50217e07f47a"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "43fafc7f-721f-46db-a919-f78f54f4b92f",
                "data": "{\"header\": {\"msg_id\": \"3252106b-58efb3925a911dfe7de4c2af\", \"msg_type\": \"execute_reply\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:25.071465Z\", \"version\": \"5.3\"}, \"msg_id\": \"3252106b-58efb3925a911dfe7de4c2af\", \"msg_type\": \"execute_reply\", \"parent_header\": {\"date\": \"2020-04-03T18:24:24.462000Z\", \"msg_id\": \"747aca6b-914b-44bb-b637-bc4a209c50dc\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"started\": \"2020-04-03T18:24:25.063465Z\", \"dependencies_met\": true, \"engine\": \"b19117ff-eeaf-4216-9c1d-6f854b18f83c\", \"status\": \"ok\"}, \"content\": {\"status\": \"ok\", \"execution_count\": 0, \"user_expressions\": {}, \"payload\": []}, \"buffers\": [], \"channel\": \"shell\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "43fafc7f-721f-46db-a919-f78f54f4b92f"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "start_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from pythreejs import *\n",
                        "from IPython.display import display\n",
                        "from math import pi\n",
                        ""
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 0
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_mirror_execute",
            "payload": {
                "id": "dfb3d2b0-24df-4275-a358-d8e85c0cc526",
                "msg": {
                    "buffers": [],
                    "channel": "shell",
                    "content": {
                        "silent": false,
                        "store_history": true,
                        "user_expressions": {},
                        "allow_stdin": true,
                        "stop_on_error": false,
                        "code": "from pythreejs import *\nfrom IPython.display import display\nfrom math import pi\n"
                    },
                    "header": {
                        "date": "2020-04-03T18:24:27.590Z",
                        "msg_id": "dfb3d2b0-24df-4275-a358-d8e85c0cc526",
                        "msg_type": "execute_request",
                        "session": "3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6",
                        "username": "",
                        "version": "5.2"
                    },
                    "metadata": {},
                    "parent_header": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "dfb3d2b0-24df-4275-a358-d8e85c0cc526"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "94512135-243e-4f00-88f5-912704aee0fc",
                "data": "{\"header\": {\"msg_id\": \"b667fe30-2c32af054d40717e4cae142f\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:28.112859Z\", \"version\": \"5.3\"}, \"msg_id\": \"b667fe30-2c32af054d40717e4cae142f\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:27.590000Z\", \"msg_id\": \"dfb3d2b0-24df-4275-a358-d8e85c0cc526\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_dirty",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_dirty",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "start_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from pythreejs import *\n",
                                "from IPython.display import display\n",
                                "from math import pi\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 0
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_start_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "94512135-243e-4f00-88f5-912704aee0fc"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "66d13958-376b-491b-aac2-c16d0f383f01",
                "data": "{\"header\": {\"msg_id\": \"ae98091c-272a0c4c73a19e3e3251bb92\", \"msg_type\": \"execute_input\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:28.112859Z\", \"version\": \"5.3\"}, \"msg_id\": \"ae98091c-272a0c4c73a19e3e3251bb92\", \"msg_type\": \"execute_input\", \"parent_header\": {\"date\": \"2020-04-03T18:24:27.590000Z\", \"msg_id\": \"dfb3d2b0-24df-4275-a358-d8e85c0cc526\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"code\": \"from pythreejs import *\\nfrom IPython.display import display\\nfrom math import pi\\n\", \"execution_count\": 1}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from pythreejs import *\n",
                        "from IPython.display import display\n",
                        "from math import pi\n",
                        ""
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "66d13958-376b-491b-aac2-c16d0f383f01"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "6514b597-5b4f-45cb-829f-3acdfc66a927",
                "data": "{\"header\": {\"msg_id\": \"42bca636-40b5c439b9c16c3a2b3a943a\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:28.394763Z\", \"version\": \"5.3\"}, \"msg_id\": \"42bca636-40b5c439b9c16c3a2b3a943a\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:27.590000Z\", \"msg_id\": \"dfb3d2b0-24df-4275-a358-d8e85c0cc526\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 1,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from pythreejs import *\n",
                        "from IPython.display import display\n",
                        "from math import pi\n",
                        ""
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from pythreejs import *\n",
                                "from IPython.display import display\n",
                                "from math import pi\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "6514b597-5b4f-45cb-829f-3acdfc66a927"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "edf5d888-9fac-4960-9ca8-6715171ce319",
                "data": "{\"header\": {\"msg_id\": \"cf88f194-fd0a97d79651f104071ea524\", \"msg_type\": \"execute_reply\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:28.394763Z\", \"version\": \"5.3\"}, \"msg_id\": \"cf88f194-fd0a97d79651f104071ea524\", \"msg_type\": \"execute_reply\", \"parent_header\": {\"date\": \"2020-04-03T18:24:27.590000Z\", \"msg_id\": \"dfb3d2b0-24df-4275-a358-d8e85c0cc526\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"started\": \"2020-04-03T18:24:28.112859Z\", \"dependencies_met\": true, \"engine\": \"b19117ff-eeaf-4216-9c1d-6f854b18f83c\", \"status\": \"ok\"}, \"content\": {\"status\": \"ok\", \"execution_count\": 1, \"user_expressions\": {}, \"payload\": []}, \"buffers\": [], \"channel\": \"shell\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 1,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from pythreejs import *\n",
                        "from IPython.display import display\n",
                        "from math import pi\n",
                        ""
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from pythreejs import *\n",
                                "from IPython.display import display\n",
                                "from math import pi\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "edf5d888-9fac-4960-9ca8-6715171ce319"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 1,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from pythreejs import *\n",
                        "from IPython.display import display\n",
                        "from math import pi\n",
                        ""
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "finish_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 1,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from pythreejs import *\n",
                        "from IPython.display import display\n",
                        "from math import pi\n",
                        ""
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 2
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "stop_progress"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from pythreejs import *\n",
                                "from IPython.display import display\n",
                                "from math import pi\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from pythreejs import *\n",
                                "from IPython.display import display\n",
                                "from math import pi\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_dirty",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "finish_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from pythreejs import *\n",
                                "from IPython.display import display\n",
                                "from math import pi\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "rendered_execution",
            "payload": {
                "ids": [
                    "NotebookImport#1"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_finish_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_stop_progress",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "send_info",
            "payload": {
                "cellCount": 9,
                "undoCount": 0,
                "redoCount": 0,
                "selectedCell": "NotebookImport#3"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "reexecute_cells",
            "payload": {
                "cellIds": [
                    "NotebookImport#2"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "start_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "# Reduce repo churn for examples with embedded state:\n",
                        "from pythreejs._example_helper import use_example_model_ids\n",
                        "use_example_model_ids()"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 0
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_mirror_execute",
            "payload": {
                "id": "b641042d-ac0b-4eb3-b6e1-5e04aca2fd80",
                "msg": {
                    "buffers": [],
                    "channel": "shell",
                    "content": {
                        "silent": false,
                        "store_history": true,
                        "user_expressions": {},
                        "allow_stdin": true,
                        "stop_on_error": false,
                        "code": "# Reduce repo churn for examples with embedded state:\nfrom pythreejs._example_helper import use_example_model_ids\nuse_example_model_ids()"
                    },
                    "header": {
                        "date": "2020-04-03T18:24:30.707Z",
                        "msg_id": "b641042d-ac0b-4eb3-b6e1-5e04aca2fd80",
                        "msg_type": "execute_request",
                        "session": "3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6",
                        "username": "",
                        "version": "5.2"
                    },
                    "metadata": {},
                    "parent_header": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "native_command",
            "payload": {
                "command": 14,
                "source": "mouse"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell_and_advance",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.send_command",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "b641042d-ac0b-4eb3-b6e1-5e04aca2fd80"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "start_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "# Reduce repo churn for examples with embedded state:\n",
                                "from pythreejs._example_helper import use_example_model_ids\n",
                                "use_example_model_ids()"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 0
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_start_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "bcdfb4ef-dbda-49a8-9b29-5b9c9393b4d2",
                "data": "{\"header\": {\"msg_id\": \"a6c36398-5425ed81c34e25cc460f1d08\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:31.213830Z\", \"version\": \"5.3\"}, \"msg_id\": \"a6c36398-5425ed81c34e25cc460f1d08\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:30.707000Z\", \"msg_id\": \"b641042d-ac0b-4eb3-b6e1-5e04aca2fd80\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "bcdfb4ef-dbda-49a8-9b29-5b9c9393b4d2"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "4a6cc179-9fed-4333-a02a-4b6abf4f57cc",
                "data": "{\"header\": {\"msg_id\": \"17d55e4a-a5b52b4c6fd1181162404ab9\", \"msg_type\": \"execute_input\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:31.213830Z\", \"version\": \"5.3\"}, \"msg_id\": \"17d55e4a-a5b52b4c6fd1181162404ab9\", \"msg_type\": \"execute_input\", \"parent_header\": {\"date\": \"2020-04-03T18:24:30.707000Z\", \"msg_id\": \"b641042d-ac0b-4eb3-b6e1-5e04aca2fd80\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"code\": \"# Reduce repo churn for examples with embedded state:\\nfrom pythreejs._example_helper import use_example_model_ids\\nuse_example_model_ids()\", \"execution_count\": 2}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "# Reduce repo churn for examples with embedded state:\n",
                        "from pythreejs._example_helper import use_example_model_ids\n",
                        "use_example_model_ids()"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "4a6cc179-9fed-4333-a02a-4b6abf4f57cc"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "625ef064-558d-458b-ab12-32491a3296aa",
                "data": "{\"header\": {\"msg_id\": \"cc228209-e6f19d5390643d93f60b7805\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:31.216830Z\", \"version\": \"5.3\"}, \"msg_id\": \"cc228209-e6f19d5390643d93f60b7805\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:30.707000Z\", \"msg_id\": \"b641042d-ac0b-4eb3-b6e1-5e04aca2fd80\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 2,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "# Reduce repo churn for examples with embedded state:\n",
                        "from pythreejs._example_helper import use_example_model_ids\n",
                        "use_example_model_ids()"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "# Reduce repo churn for examples with embedded state:\n",
                                "from pythreejs._example_helper import use_example_model_ids\n",
                                "use_example_model_ids()"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "625ef064-558d-458b-ab12-32491a3296aa"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "ca934507-f6c7-4eb1-8394-a089add5bdb9",
                "data": "{\"header\": {\"msg_id\": \"64a89987-4da5611a5731e3685d107a97\", \"msg_type\": \"execute_reply\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:31.216830Z\", \"version\": \"5.3\"}, \"msg_id\": \"64a89987-4da5611a5731e3685d107a97\", \"msg_type\": \"execute_reply\", \"parent_header\": {\"date\": \"2020-04-03T18:24:30.707000Z\", \"msg_id\": \"b641042d-ac0b-4eb3-b6e1-5e04aca2fd80\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"started\": \"2020-04-03T18:24:31.213830Z\", \"dependencies_met\": true, \"engine\": \"b19117ff-eeaf-4216-9c1d-6f854b18f83c\", \"status\": \"ok\"}, \"content\": {\"status\": \"ok\", \"execution_count\": 2, \"user_expressions\": {}, \"payload\": []}, \"buffers\": [], \"channel\": \"shell\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 2,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "# Reduce repo churn for examples with embedded state:\n",
                        "from pythreejs._example_helper import use_example_model_ids\n",
                        "use_example_model_ids()"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "# Reduce repo churn for examples with embedded state:\n",
                                "from pythreejs._example_helper import use_example_model_ids\n",
                                "use_example_model_ids()"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "ca934507-f6c7-4eb1-8394-a089add5bdb9"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 2,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "# Reduce repo churn for examples with embedded state:\n",
                        "from pythreejs._example_helper import use_example_model_ids\n",
                        "use_example_model_ids()"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "finish_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 2,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "# Reduce repo churn for examples with embedded state:\n",
                        "from pythreejs._example_helper import use_example_model_ids\n",
                        "use_example_model_ids()"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 2
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "stop_progress"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "# Reduce repo churn for examples with embedded state:\n",
                                "from pythreejs._example_helper import use_example_model_ids\n",
                                "use_example_model_ids()"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "# Reduce repo churn for examples with embedded state:\n",
                                "from pythreejs._example_helper import use_example_model_ids\n",
                                "use_example_model_ids()"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_dirty",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "finish_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "# Reduce repo churn for examples with embedded state:\n",
                                "from pythreejs._example_helper import use_example_model_ids\n",
                                "use_example_model_ids()"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "rendered_execution",
            "payload": {
                "ids": [
                    "NotebookImport#2"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_finish_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_stop_progress",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "send_info",
            "payload": {
                "cellCount": 9,
                "undoCount": 0,
                "redoCount": 0,
                "selectedCell": "NotebookImport#4"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "reexecute_cells",
            "payload": {
                "cellIds": [
                    "NotebookImport#3"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "start_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "BoxGeometry(\n",
                        "    width=5,\n",
                        "    height=10,\n",
                        "    depth=15,\n",
                        "    widthSegments=5,\n",
                        "    heightSegments=10,\n",
                        "    depthSegments=15)"
                    ]
                },
                "id": "NotebookImport#3",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 0
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_mirror_execute",
            "payload": {
                "id": "1aa9bf60-e4ba-4911-9930-d1ab9c48a72c",
                "msg": {
                    "buffers": [],
                    "channel": "shell",
                    "content": {
                        "silent": false,
                        "store_history": true,
                        "user_expressions": {},
                        "allow_stdin": true,
                        "stop_on_error": false,
                        "code": "BoxGeometry(\n    width=5,\n    height=10,\n    depth=15,\n    widthSegments=5,\n    heightSegments=10,\n    depthSegments=15)"
                    },
                    "header": {
                        "date": "2020-04-03T18:24:33.796Z",
                        "msg_id": "1aa9bf60-e4ba-4911-9930-d1ab9c48a72c",
                        "msg_type": "execute_request",
                        "session": "3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6",
                        "username": "",
                        "version": "5.2"
                    },
                    "metadata": {},
                    "parent_header": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "native_command",
            "payload": {
                "command": 14,
                "source": "mouse"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell_and_advance",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.send_command",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "1aa9bf60-e4ba-4911-9930-d1ab9c48a72c"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "start_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        },
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 0
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "29a7f1a7-8ac5-42ec-b731-e63781406372",
                "data": "{\"header\": {\"msg_id\": \"b8e600e1-935a44168f3d3f884bf49167\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:34.303522Z\", \"version\": \"5.3\"}, \"msg_id\": \"b8e600e1-935a44168f3d3f884bf49167\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:33.796000Z\", \"msg_id\": \"1aa9bf60-e4ba-4911-9930-d1ab9c48a72c\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_start_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "29a7f1a7-8ac5-42ec-b731-e63781406372"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "922f9668-2a95-43cf-aa4d-b351db1accea",
                "data": "{\"header\": {\"msg_id\": \"7c47a9b8-dc094a27639e1842a3e6bc51\", \"msg_type\": \"execute_input\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:34.304518Z\", \"version\": \"5.3\"}, \"msg_id\": \"7c47a9b8-dc094a27639e1842a3e6bc51\", \"msg_type\": \"execute_input\", \"parent_header\": {\"date\": \"2020-04-03T18:24:33.796000Z\", \"msg_id\": \"1aa9bf60-e4ba-4911-9930-d1ab9c48a72c\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"code\": \"BoxGeometry(\\n    width=5,\\n    height=10,\\n    depth=15,\\n    widthSegments=5,\\n    heightSegments=10,\\n    depthSegments=15)\", \"execution_count\": 3}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "BoxGeometry(\n",
                        "    width=5,\n",
                        "    height=10,\n",
                        "    depth=15,\n",
                        "    widthSegments=5,\n",
                        "    heightSegments=10,\n",
                        "    depthSegments=15)"
                    ]
                },
                "id": "NotebookImport#3",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "922f9668-2a95-43cf-aa4d-b351db1accea"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "60191016-43ef-4546-a4f0-852180a97f99",
                "data": "{\"header\": {\"msg_id\": \"2f5564ee-580f875800602e16059325e8\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:34.305521Z\", \"version\": \"5.3\"}, \"msg_id\": \"2f5564ee-580f875800602e16059325e8\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:24:33.796000Z\", \"msg_id\": \"1aa9bf60-e4ba-4911-9930-d1ab9c48a72c\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"jupyter-threejs\", \"_model_module_version\": \"^2.1.0\", \"_model_name\": \"BoxGeometryModel\", \"_view_count\": null, \"_view_module\": null, \"_view_module_version\": \"\", \"_view_name\": null, \"depth\": 15.0, \"depthSegments\": 15, \"height\": 10.0, \"heightSegments\": 10, \"name\": \"\", \"type\": \"BoxGeometry\", \"width\": 5.0, \"widthSegments\": 5}, \"buffer_paths\": []}, \"comm_id\": \"pythree_example_model_001\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 3,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "BoxGeometry(\n",
                        "    width=5,\n",
                        "    height=10,\n",
                        "    depth=15,\n",
                        "    widthSegments=5,\n",
                        "    heightSegments=10,\n",
                        "    depthSegments=15)"
                    ]
                },
                "id": "NotebookImport#3",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        },
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "60191016-43ef-4546-a4f0-852180a97f99"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "892d3913-d895-47b4-b95e-0ab51b2aecdd",
                "data": "{\"header\": {\"msg_id\": \"7df42b24-ef938eb4e3beaa770646b6f9\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:34.308494Z\", \"version\": \"5.3\"}, \"msg_id\": \"7df42b24-ef938eb4e3beaa770646b6f9\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:24:33.796000Z\", \"msg_id\": \"1aa9bf60-e4ba-4911-9930-d1ab9c48a72c\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"@jupyter-widgets/base\", \"_model_module_version\": \"1.2.0\", \"_model_name\": \"LayoutModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/base\", \"_view_module_version\": \"1.2.0\", \"_view_name\": \"LayoutView\", \"align_content\": null, \"align_items\": null, \"align_self\": null, \"border\": null, \"bottom\": null, \"display\": null, \"flex\": null, \"flex_flow\": null, \"grid_area\": null, \"grid_auto_columns\": null, \"grid_auto_flow\": null, \"grid_auto_rows\": null, \"grid_column\": null, \"grid_gap\": null, \"grid_row\": null, \"grid_template_areas\": null, \"grid_template_columns\": null, \"grid_template_rows\": null, \"height\": null, \"justify_content\": null, \"justify_items\": null, \"left\": null, \"margin\": null, \"max_height\": null, \"max_width\": null, \"min_height\": null, \"min_width\": null, \"object_fit\": null, \"object_position\": null, \"order\": null, \"overflow\": null, \"overflow_x\": null, \"overflow_y\": null, \"padding\": null, \"right\": null, \"top\": null, \"visibility\": null, \"width\": null}, \"buffer_paths\": []}, \"comm_id\": \"pythree_example_model_003\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 3,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "BoxGeometry(\n",
                        "    width=5,\n",
                        "    height=10,\n",
                        "    depth=15,\n",
                        "    widthSegments=5,\n",
                        "    heightSegments=10,\n",
                        "    depthSegments=15)"
                    ]
                },
                "id": "NotebookImport#3",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 3,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        },
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "892d3913-d895-47b4-b95e-0ab51b2aecdd"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "3420c7e8-d0b8-45e2-bf5a-eb0f4e7f599e",
                "data": "{\"header\": {\"msg_id\": \"08fc97b1-a31aa6ef5d53e97134f77d8e\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:34.309522Z\", \"version\": \"5.3\"}, \"msg_id\": \"08fc97b1-a31aa6ef5d53e97134f77d8e\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:24:33.796000Z\", \"msg_id\": \"1aa9bf60-e4ba-4911-9930-d1ab9c48a72c\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"jupyter-threejs\", \"_model_module_version\": \"^2.1.0\", \"_model_name\": \"WebGLShadowMapModel\", \"_view_count\": null, \"_view_module\": null, \"_view_module_version\": \"\", \"_view_name\": null, \"enabled\": false, \"type\": \"PCFShadowMap\"}, \"buffer_paths\": []}, \"comm_id\": \"pythree_example_model_004\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 3,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "BoxGeometry(\n",
                        "    width=5,\n",
                        "    height=10,\n",
                        "    depth=15,\n",
                        "    widthSegments=5,\n",
                        "    heightSegments=10,\n",
                        "    depthSegments=15)"
                    ]
                },
                "id": "NotebookImport#3",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 3,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        },
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "3420c7e8-d0b8-45e2-bf5a-eb0f4e7f599e"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "6c5e5c8b-5578-45b8-9899-7dd49fbecc3b",
                "data": "{\"header\": {\"msg_id\": \"b112dbbf-8303c8c52319bcd6c9c26d93\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:34.310522Z\", \"version\": \"5.3\"}, \"msg_id\": \"b112dbbf-8303c8c52319bcd6c9c26d93\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:24:33.796000Z\", \"msg_id\": \"1aa9bf60-e4ba-4911-9930-d1ab9c48a72c\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_alpha\": false, \"_antialias\": false, \"_dom_classes\": [], \"_flat\": false, \"_height\": 200, \"_model_module\": \"jupyter-threejs\", \"_model_module_version\": \"^2.1.0\", \"_model_name\": \"PreviewModel\", \"_view_count\": null, \"_view_module\": \"jupyter-threejs\", \"_view_module_version\": \"^2.1.0\", \"_view_name\": \"PreviewView\", \"_webgl_version\": 2, \"_width\": 200, \"_wire\": false, \"autoClear\": true, \"autoClearColor\": true, \"autoClearDepth\": true, \"autoClearStencil\": true, \"child\": \"IPY_MODEL_pythree_example_model_001\", \"clearColor\": \"#000000\", \"clearOpacity\": 1.0, \"clippingPlanes\": [], \"gammaFactor\": 2.0, \"gammaInput\": false, \"gammaOutput\": false, \"layout\": \"IPY_MODEL_pythree_example_model_003\", \"localClippingEnabled\": false, \"maxMorphNormals\": 4, \"maxMorphTargets\": 8, \"physicallyCorrectLights\": false, \"shadowMap\": \"IPY_MODEL_pythree_example_model_004\", \"sortObject\": true, \"toneMapping\": \"LinearToneMapping\", \"toneMappingExposure\": 1.0, \"toneMappingWhitePoint\": 1.0}, \"buffer_paths\": []}, \"comm_id\": \"pythree_example_model_002\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 3,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "BoxGeometry(\n",
                        "    width=5,\n",
                        "    height=10,\n",
                        "    depth=15,\n",
                        "    widthSegments=5,\n",
                        "    heightSegments=10,\n",
                        "    depthSegments=15)"
                    ]
                },
                "id": "NotebookImport#3",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 3,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        },
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "6c5e5c8b-5578-45b8-9899-7dd49fbecc3b"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "e14e4460-8f75-4ed5-af70-29dc85842f88",
                "data": "{\"header\": {\"msg_id\": \"47d70972-b032fe78f7ed8ace920078df\", \"msg_type\": \"display_data\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:34.312002Z\", \"version\": \"5.3\"}, \"msg_id\": \"47d70972-b032fe78f7ed8ace920078df\", \"msg_type\": \"display_data\", \"parent_header\": {\"date\": \"2020-04-03T18:24:33.796000Z\", \"msg_id\": \"1aa9bf60-e4ba-4911-9930-d1ab9c48a72c\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"data\": {\"text/plain\": \"Preview(child=BoxGeometry(depth=15.0, depthSegments=15, height=10.0, heightSegments=10, width=5.0, widthSegmen\\u2026\", \"application/vnd.jupyter.widget-view+json\": {\"version_major\": 2, \"version_minor\": 0, \"model_id\": \"pythree_example_model_002\"}}, \"metadata\": {}, \"transient\": {}}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 3,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "BoxGeometry(\n",
                        "    width=5,\n",
                        "    height=10,\n",
                        "    depth=15,\n",
                        "    widthSegments=5,\n",
                        "    heightSegments=10,\n",
                        "    depthSegments=15)"
                    ]
                },
                "id": "NotebookImport#3",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 3,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        },
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "e14e4460-8f75-4ed5-af70-29dc85842f88"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "3dd9a771-d31c-429b-ac81-0f6898ad3d19",
                "data": "{\"header\": {\"msg_id\": \"4337cdaf-5310a4718d6d597354160fb8\", \"msg_type\": \"execute_reply\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:34.313525Z\", \"version\": \"5.3\"}, \"msg_id\": \"4337cdaf-5310a4718d6d597354160fb8\", \"msg_type\": \"execute_reply\", \"parent_header\": {\"date\": \"2020-04-03T18:24:33.796000Z\", \"msg_id\": \"1aa9bf60-e4ba-4911-9930-d1ab9c48a72c\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"started\": \"2020-04-03T18:24:34.304518Z\", \"dependencies_met\": true, \"engine\": \"b19117ff-eeaf-4216-9c1d-6f854b18f83c\", \"status\": \"ok\"}, \"content\": {\"status\": \"ok\", \"execution_count\": 3, \"user_expressions\": {}, \"payload\": []}, \"buffers\": [], \"channel\": \"shell\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 3,
                    "metadata": {},
                    "outputs": [
                        {
                            "output_type": "display_data",
                            "data": {
                                "text/plain": "Preview(child=BoxGeometry(depth=15.0, depthSegments=15, height=10.0, heightSegments=10, width=5.0, widthSegmenâ€¦",
                                "application/vnd.jupyter.widget-view+json": {
                                    "version_major": 2,
                                    "version_minor": 0,
                                    "model_id": "pythree_example_model_002"
                                }
                            },
                            "metadata": {},
                            "transient": {}
                        }
                    ],
                    "source": [
                        "BoxGeometry(\n",
                        "    width=5,\n",
                        "    height=10,\n",
                        "    depth=15,\n",
                        "    widthSegments=5,\n",
                        "    heightSegments=10,\n",
                        "    depthSegments=15)"
                    ]
                },
                "id": "NotebookImport#3",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 3,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        },
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "3dd9a771-d31c-429b-ac81-0f6898ad3d19"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 3,
                    "metadata": {},
                    "outputs": [
                        {
                            "output_type": "display_data",
                            "data": {
                                "text/plain": "Preview(child=BoxGeometry(depth=15.0, depthSegments=15, height=10.0, heightSegments=10, width=5.0, widthSegmenâ€¦",
                                "application/vnd.jupyter.widget-view+json": {
                                    "version_major": 2,
                                    "version_minor": 0,
                                    "model_id": "pythree_example_model_002"
                                }
                            },
                            "metadata": {},
                            "transient": {}
                        }
                    ],
                    "source": [
                        "BoxGeometry(\n",
                        "    width=5,\n",
                        "    height=10,\n",
                        "    depth=15,\n",
                        "    widthSegments=5,\n",
                        "    heightSegments=10,\n",
                        "    depthSegments=15)"
                    ]
                },
                "id": "NotebookImport#3",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "d610468e-16b2-4876-8a2a-12f04e50c351",
                "data": "{\"header\": {\"msg_id\": \"b52410a4-fb4aea91adbf12bed0f56842\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:34.313525Z\", \"version\": \"5.3\"}, \"msg_id\": \"b52410a4-fb4aea91adbf12bed0f56842\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:33.796000Z\", \"msg_id\": \"1aa9bf60-e4ba-4911-9930-d1ab9c48a72c\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 3,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "text/plain": "Preview(child=BoxGeometry(depth=15.0, depthSegments=15, height=10.0, heightSegments=10, width=5.0, widthSegmenâ€¦",
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "pythree_example_model_002"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        },
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "d610468e-16b2-4876-8a2a-12f04e50c351"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 3,
                    "metadata": {},
                    "outputs": [
                        {
                            "output_type": "display_data",
                            "data": {
                                "text/plain": "Preview(child=BoxGeometry(depth=15.0, depthSegments=15, height=10.0, heightSegments=10, width=5.0, widthSegmenâ€¦",
                                "application/vnd.jupyter.widget-view+json": {
                                    "version_major": 2,
                                    "version_minor": 0,
                                    "model_id": "pythree_example_model_002"
                                }
                            },
                            "metadata": {},
                            "transient": {}
                        }
                    ],
                    "source": [
                        "BoxGeometry(\n",
                        "    width=5,\n",
                        "    height=10,\n",
                        "    depth=15,\n",
                        "    widthSegments=5,\n",
                        "    heightSegments=10,\n",
                        "    depthSegments=15)"
                    ]
                },
                "id": "NotebookImport#3",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "finish_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 3,
                    "metadata": {},
                    "outputs": [
                        {
                            "output_type": "display_data",
                            "data": {
                                "text/plain": "Preview(child=BoxGeometry(depth=15.0, depthSegments=15, height=10.0, heightSegments=10, width=5.0, widthSegmenâ€¦",
                                "application/vnd.jupyter.widget-view+json": {
                                    "version_major": 2,
                                    "version_minor": 0,
                                    "model_id": "pythree_example_model_002"
                                }
                            },
                            "metadata": {},
                            "transient": {}
                        }
                    ],
                    "source": [
                        "BoxGeometry(\n",
                        "    width=5,\n",
                        "    height=10,\n",
                        "    depth=15,\n",
                        "    widthSegments=5,\n",
                        "    heightSegments=10,\n",
                        "    depthSegments=15)"
                    ]
                },
                "id": "NotebookImport#3",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 2
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "stop_progress"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 3,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "text/plain": "Preview(child=BoxGeometry(depth=15.0, depthSegments=15, height=10.0, heightSegments=10, width=5.0, widthSegmenâ€¦",
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "pythree_example_model_002"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        },
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 3,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "text/plain": "Preview(child=BoxGeometry(depth=15.0, depthSegments=15, height=10.0, heightSegments=10, width=5.0, widthSegmenâ€¦",
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "pythree_example_model_002"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        },
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_dirty",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "finish_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 3,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "text/plain": "Preview(child=BoxGeometry(depth=15.0, depthSegments=15, height=10.0, heightSegments=10, width=5.0, widthSegmenâ€¦",
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "pythree_example_model_002"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "BoxGeometry(\n",
                                "    width=5,\n",
                                "    height=10,\n",
                                "    depth=15,\n",
                                "    widthSegments=5,\n",
                                "    heightSegments=10,\n",
                                "    depthSegments=15)"
                            ]
                        },
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "rendered_execution",
            "payload": {
                "ids": [
                    "NotebookImport#3"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_finish_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_stop_progress",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "send_info",
            "payload": {
                "cellCount": 9,
                "undoCount": 0,
                "redoCount": 0,
                "selectedCell": "NotebookImport#5"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "reexecute_cells",
            "payload": {
                "cellIds": [
                    "NotebookImport#4"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "start_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "view_width = 600\n",
                        "view_height = 400"
                    ]
                },
                "id": "NotebookImport#4",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 0
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_mirror_execute",
            "payload": {
                "id": "800bf5b4-7ef3-48a9-a8a1-248c4cf8b973",
                "msg": {
                    "buffers": [],
                    "channel": "shell",
                    "content": {
                        "silent": false,
                        "store_history": true,
                        "user_expressions": {},
                        "allow_stdin": true,
                        "stop_on_error": false,
                        "code": "view_width = 600\nview_height = 400"
                    },
                    "header": {
                        "date": "2020-04-03T18:24:39.420Z",
                        "msg_id": "800bf5b4-7ef3-48a9-a8a1-248c4cf8b973",
                        "msg_type": "execute_request",
                        "session": "3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6",
                        "username": "",
                        "version": "5.2"
                    },
                    "metadata": {},
                    "parent_header": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "native_command",
            "payload": {
                "command": 14,
                "source": "mouse"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell_and_advance",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.send_command",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "800bf5b4-7ef3-48a9-a8a1-248c4cf8b973"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "start_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "view_width = 600\n",
                                "view_height = 400"
                            ]
                        },
                        "id": "NotebookImport#4",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 0
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "84c0d0a8-b45e-49f0-b7b7-25c75e1e61fb",
                "data": "{\"header\": {\"msg_id\": \"46053a1b-1af07075b51b2764b62ad22c\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:39.930062Z\", \"version\": \"5.3\"}, \"msg_id\": \"46053a1b-1af07075b51b2764b62ad22c\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:39.420000Z\", \"msg_id\": \"800bf5b4-7ef3-48a9-a8a1-248c4cf8b973\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_start_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "84c0d0a8-b45e-49f0-b7b7-25c75e1e61fb"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "8065eb06-eafc-4ecd-a500-287318e10d8d",
                "data": "{\"header\": {\"msg_id\": \"aad9ad60-0fd0fb04b48940f27c9f4be7\", \"msg_type\": \"execute_input\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:39.930062Z\", \"version\": \"5.3\"}, \"msg_id\": \"aad9ad60-0fd0fb04b48940f27c9f4be7\", \"msg_type\": \"execute_input\", \"parent_header\": {\"date\": \"2020-04-03T18:24:39.420000Z\", \"msg_id\": \"800bf5b4-7ef3-48a9-a8a1-248c4cf8b973\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"code\": \"view_width = 600\\nview_height = 400\", \"execution_count\": 4}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "view_width = 600\n",
                        "view_height = 400"
                    ]
                },
                "id": "NotebookImport#4",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "8065eb06-eafc-4ecd-a500-287318e10d8d"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "87711793-ccbd-40a4-94bf-a4d08e98d843",
                "data": "{\"header\": {\"msg_id\": \"f886c0de-ed1f8c7ac16457d20b9e7476\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:39.934065Z\", \"version\": \"5.3\"}, \"msg_id\": \"f886c0de-ed1f8c7ac16457d20b9e7476\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:39.420000Z\", \"msg_id\": \"800bf5b4-7ef3-48a9-a8a1-248c4cf8b973\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 4,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "view_width = 600\n",
                        "view_height = 400"
                    ]
                },
                "id": "NotebookImport#4",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "view_width = 600\n",
                                "view_height = 400"
                            ]
                        },
                        "id": "NotebookImport#4",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "87711793-ccbd-40a4-94bf-a4d08e98d843"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "88361bc5-fb6a-4847-966f-c2f152ee1ae2",
                "data": "{\"header\": {\"msg_id\": \"7e9ce23a-d863fb2173f6c31072a44cff\", \"msg_type\": \"execute_reply\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:39.934065Z\", \"version\": \"5.3\"}, \"msg_id\": \"7e9ce23a-d863fb2173f6c31072a44cff\", \"msg_type\": \"execute_reply\", \"parent_header\": {\"date\": \"2020-04-03T18:24:39.420000Z\", \"msg_id\": \"800bf5b4-7ef3-48a9-a8a1-248c4cf8b973\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"started\": \"2020-04-03T18:24:39.930062Z\", \"dependencies_met\": true, \"engine\": \"b19117ff-eeaf-4216-9c1d-6f854b18f83c\", \"status\": \"ok\"}, \"content\": {\"status\": \"ok\", \"execution_count\": 4, \"user_expressions\": {}, \"payload\": []}, \"buffers\": [], \"channel\": \"shell\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 4,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "view_width = 600\n",
                        "view_height = 400"
                    ]
                },
                "id": "NotebookImport#4",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 4,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "view_width = 600\n",
                                "view_height = 400"
                            ]
                        },
                        "id": "NotebookImport#4",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "88361bc5-fb6a-4847-966f-c2f152ee1ae2"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 4,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "view_width = 600\n",
                        "view_height = 400"
                    ]
                },
                "id": "NotebookImport#4",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "finish_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 4,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "view_width = 600\n",
                        "view_height = 400"
                    ]
                },
                "id": "NotebookImport#4",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 2
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "stop_progress"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 4,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "view_width = 600\n",
                                "view_height = 400"
                            ]
                        },
                        "id": "NotebookImport#4",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 4,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "view_width = 600\n",
                                "view_height = 400"
                            ]
                        },
                        "id": "NotebookImport#4",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_dirty",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "finish_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 4,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "view_width = 600\n",
                                "view_height = 400"
                            ]
                        },
                        "id": "NotebookImport#4",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "rendered_execution",
            "payload": {
                "ids": [
                    "NotebookImport#4"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_finish_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_stop_progress",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "send_info",
            "payload": {
                "cellCount": 9,
                "undoCount": 0,
                "redoCount": 0,
                "selectedCell": "NotebookImport#6"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "reexecute_cells",
            "payload": {
                "cellIds": [
                    "NotebookImport#5"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "start_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "sphere = Mesh(\n",
                        "    SphereBufferGeometry(1, 32, 16),\n",
                        "    MeshStandardMaterial(color='red')\n",
                        ")"
                    ]
                },
                "id": "NotebookImport#5",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 0
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_mirror_execute",
            "payload": {
                "id": "8bc01ce6-f3ee-4cf9-a3d1-d5cae944f471",
                "msg": {
                    "buffers": [],
                    "channel": "shell",
                    "content": {
                        "silent": false,
                        "store_history": true,
                        "user_expressions": {},
                        "allow_stdin": true,
                        "stop_on_error": false,
                        "code": "sphere = Mesh(\n    SphereBufferGeometry(1, 32, 16),\n    MeshStandardMaterial(color='red')\n)"
                    },
                    "header": {
                        "date": "2020-04-03T18:24:42.542Z",
                        "msg_id": "8bc01ce6-f3ee-4cf9-a3d1-d5cae944f471",
                        "msg_type": "execute_request",
                        "session": "3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6",
                        "username": "",
                        "version": "5.2"
                    },
                    "metadata": {},
                    "parent_header": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "native_command",
            "payload": {
                "command": 14,
                "source": "mouse"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell_and_advance",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.send_command",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "8bc01ce6-f3ee-4cf9-a3d1-d5cae944f471"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "start_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "sphere = Mesh(\n",
                                "    SphereBufferGeometry(1, 32, 16),\n",
                                "    MeshStandardMaterial(color='red')\n",
                                ")"
                            ]
                        },
                        "id": "NotebookImport#5",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 0
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_start_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "c68d1a0b-0a15-43ae-9edc-fd162aa711d1",
                "data": "{\"header\": {\"msg_id\": \"87a52535-e547b32ffcded709d8d4f8c9\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:43.050344Z\", \"version\": \"5.3\"}, \"msg_id\": \"87a52535-e547b32ffcded709d8d4f8c9\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:42.542000Z\", \"msg_id\": \"8bc01ce6-f3ee-4cf9-a3d1-d5cae944f471\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "c68d1a0b-0a15-43ae-9edc-fd162aa711d1"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "f23a62e6-22a9-4a92-9367-154725f5422d",
                "data": "{\"header\": {\"msg_id\": \"015a8477-1a5192ab696a4d1fff948077\", \"msg_type\": \"execute_input\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:43.050344Z\", \"version\": \"5.3\"}, \"msg_id\": \"015a8477-1a5192ab696a4d1fff948077\", \"msg_type\": \"execute_input\", \"parent_header\": {\"date\": \"2020-04-03T18:24:42.542000Z\", \"msg_id\": \"8bc01ce6-f3ee-4cf9-a3d1-d5cae944f471\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"code\": \"sphere = Mesh(\\n    SphereBufferGeometry(1, 32, 16),\\n    MeshStandardMaterial(color='red')\\n)\", \"execution_count\": 5}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "sphere = Mesh(\n",
                        "    SphereBufferGeometry(1, 32, 16),\n",
                        "    MeshStandardMaterial(color='red')\n",
                        ")"
                    ]
                },
                "id": "NotebookImport#5",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "f23a62e6-22a9-4a92-9367-154725f5422d"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "28ff99b8-c306-4de0-a516-6c412ea74072",
                "data": "{\"header\": {\"msg_id\": \"f0145317-b464369cf5454a928f0be0c0\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:43.052342Z\", \"version\": \"5.3\"}, \"msg_id\": \"f0145317-b464369cf5454a928f0be0c0\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:24:42.542000Z\", \"msg_id\": \"8bc01ce6-f3ee-4cf9-a3d1-d5cae944f471\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"jupyter-threejs\", \"_model_module_version\": \"^2.1.0\", \"_model_name\": \"SphereBufferGeometryModel\", \"_view_count\": null, \"_view_module\": null, \"_view_module_version\": \"\", \"_view_name\": null, \"heightSegments\": 16, \"name\": \"\", \"phiLength\": 6.283185307179586, \"phiStart\": 0.0, \"radius\": 1.0, \"thetaLength\": 3.141592653589793, \"thetaStart\": 0.0, \"type\": \"SphereBufferGeometry\", \"widthSegments\": 32}, \"buffer_paths\": []}, \"comm_id\": \"pythree_example_model_005\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 5,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "sphere = Mesh(\n",
                        "    SphereBufferGeometry(1, 32, 16),\n",
                        "    MeshStandardMaterial(color='red')\n",
                        ")"
                    ]
                },
                "id": "NotebookImport#5",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "sphere = Mesh(\n",
                                "    SphereBufferGeometry(1, 32, 16),\n",
                                "    MeshStandardMaterial(color='red')\n",
                                ")"
                            ]
                        },
                        "id": "NotebookImport#5",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "28ff99b8-c306-4de0-a516-6c412ea74072"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "b1e7b42b-543a-4457-ac41-a47d18033ba9",
                "data": "{\"header\": {\"msg_id\": \"aad2175a-3d58ad36722fdab3f530126d\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:43.054343Z\", \"version\": \"5.3\"}, \"msg_id\": \"aad2175a-3d58ad36722fdab3f530126d\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:24:42.542000Z\", \"msg_id\": \"8bc01ce6-f3ee-4cf9-a3d1-d5cae944f471\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"jupyter-threejs\", \"_model_module_version\": \"^2.1.0\", \"_model_name\": \"MeshStandardMaterialModel\", \"_view_count\": null, \"_view_module\": null, \"_view_module_version\": \"\", \"_view_name\": null, \"alphaMap\": null, \"alphaTest\": 0.0, \"aoMap\": null, \"aoMapIntensity\": 1.0, \"blendDst\": \"OneMinusSrcAlphaFactor\", \"blendDstAlpha\": 0.0, \"blendEquation\": \"AddEquation\", \"blendEquationAlpha\": 0.0, \"blendSrc\": \"SrcAlphaFactor\", \"blendSrcAlpha\": 0.0, \"blending\": \"NormalBlending\", \"bumpMap\": null, \"bumpScale\": 1.0, \"clipIntersection\": false, \"clipShadows\": false, \"clippingPlanes\": [], \"color\": \"red\", \"colorWrite\": true, \"defines\": {\"STANDARD\": \"\"}, \"depthFunc\": \"LessEqualDepth\", \"depthTest\": true, \"depthWrite\": true, \"displacementBias\": 0.0, \"displacementMap\": null, \"displacementScale\": 1.0, \"dithering\": false, \"emissive\": \"#000000\", \"emissiveIntensity\": 1.0, \"emissiveMap\": null, \"envMap\": null, \"envMapIntensity\": 1.0, \"flatShading\": false, \"fog\": true, \"lightMap\": null, \"lightMapIntensity\": 1.0, \"lights\": true, \"map\": null, \"metalness\": 0.5, \"metalnessMap\": null, \"morphNormals\": false, \"morphTargets\": false, \"name\": \"\", \"normalMap\": null, \"normalScale\": [1.0, 1.0], \"opacity\": 1.0, \"overdraw\": 0.0, \"polygonOffset\": false, \"polygonOffsetFactor\": 0.0, \"polygonOffsetUnits\": 0.0, \"precision\": null, \"premultipliedAlpha\": false, \"refractionRatio\": 0.98, \"roughness\": 0.5, \"roughnessMap\": null, \"shadowSide\": null, \"side\": \"FrontSide\", \"skinning\": false, \"transparent\": false, \"type\": \"MeshStandardMaterial\", \"vertexColors\": \"NoColors\", \"visible\": true, \"wireframe\": false, \"wireframeLinecap\": \"round\", \"wireframeLinejoin\": \"round\", \"wireframeLinewidth\": 1.0}, \"buffer_paths\": []}, \"comm_id\": \"pythree_example_model_006\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 5,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "sphere = Mesh(\n",
                        "    SphereBufferGeometry(1, 32, 16),\n",
                        "    MeshStandardMaterial(color='red')\n",
                        ")"
                    ]
                },
                "id": "NotebookImport#5",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 5,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "sphere = Mesh(\n",
                                "    SphereBufferGeometry(1, 32, 16),\n",
                                "    MeshStandardMaterial(color='red')\n",
                                ")"
                            ]
                        },
                        "id": "NotebookImport#5",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "b1e7b42b-543a-4457-ac41-a47d18033ba9"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "d01a8858-61ec-4fda-88ee-f52fb816de20",
                "data": "{\"header\": {\"msg_id\": \"010590b9-366cf5941e63bd90b8820c58\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:43.056343Z\", \"version\": \"5.3\"}, \"msg_id\": \"010590b9-366cf5941e63bd90b8820c58\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:24:42.542000Z\", \"msg_id\": \"8bc01ce6-f3ee-4cf9-a3d1-d5cae944f471\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"jupyter-threejs\", \"_model_module_version\": \"^2.1.0\", \"_model_name\": \"MeshModel\", \"_view_count\": null, \"_view_module\": null, \"_view_module_version\": \"\", \"_view_name\": null, \"castShadow\": false, \"children\": [], \"drawMode\": \"TrianglesDrawMode\", \"frustumCulled\": true, \"geometry\": \"IPY_MODEL_pythree_example_model_005\", \"material\": \"IPY_MODEL_pythree_example_model_006\", \"matrix\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"matrixAutoUpdate\": true, \"matrixWorld\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"matrixWorldNeedsUpdate\": false, \"modelViewMatrix\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"morphTargetInfluences\": [], \"name\": \"\", \"normalMatrix\": [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], \"position\": [0.0, 0.0, 0.0], \"quaternion\": [0.0, 0.0, 0.0, 1.0], \"receiveShadow\": false, \"renderOrder\": 0, \"rotation\": [0.0, 0.0, 0.0, \"XYZ\"], \"scale\": [1.0, 1.0, 1.0], \"type\": \"Mesh\", \"up\": [0.0, 1.0, 0.0], \"visible\": true}, \"buffer_paths\": []}, \"comm_id\": \"pythree_example_model_007\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 5,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "sphere = Mesh(\n",
                        "    SphereBufferGeometry(1, 32, 16),\n",
                        "    MeshStandardMaterial(color='red')\n",
                        ")"
                    ]
                },
                "id": "NotebookImport#5",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 5,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "sphere = Mesh(\n",
                                "    SphereBufferGeometry(1, 32, 16),\n",
                                "    MeshStandardMaterial(color='red')\n",
                                ")"
                            ]
                        },
                        "id": "NotebookImport#5",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "d01a8858-61ec-4fda-88ee-f52fb816de20"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "4f00869b-90c7-4bcc-ac69-cb1d687a76e0",
                "data": "{\"header\": {\"msg_id\": \"998ec2d5-f710c91fd1acc5d40704a6dc\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:43.060344Z\", \"version\": \"5.3\"}, \"msg_id\": \"998ec2d5-f710c91fd1acc5d40704a6dc\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:42.542000Z\", \"msg_id\": \"8bc01ce6-f3ee-4cf9-a3d1-d5cae944f471\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 5,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "sphere = Mesh(\n",
                        "    SphereBufferGeometry(1, 32, 16),\n",
                        "    MeshStandardMaterial(color='red')\n",
                        ")"
                    ]
                },
                "id": "NotebookImport#5",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 5,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "sphere = Mesh(\n",
                                "    SphereBufferGeometry(1, 32, 16),\n",
                                "    MeshStandardMaterial(color='red')\n",
                                ")"
                            ]
                        },
                        "id": "NotebookImport#5",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": "{\"buffers\":[],\"channel\":\"shell\",\"content\":{\"comm_id\":\"pythree_example_model_007\",\"data\":{\"method\":\"update\",\"state\":{\"morphTargetInfluences\":[]},\"buffer_paths\":[]}},\"header\":{\"date\":\"2020-04-03T18:24:45.598Z\",\"msg_id\":\"c4e13729-f69e-4867-828b-e18795438d15\",\"msg_type\":\"comm_msg\",\"session\":\"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\",\"username\":\"\",\"version\":\"5.2\"},\"metadata\":{},\"parent_header\":{}}"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "4f00869b-90c7-4bcc-ac69-cb1d687a76e0"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "aa757cc0-986b-4e35-becf-743445c9a2f7",
                "data": "{\"header\": {\"msg_id\": \"93a48fb6-38ca61c7796b4a28bc1b84e6\", \"msg_type\": \"execute_reply\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:43.060344Z\", \"version\": \"5.3\"}, \"msg_id\": \"93a48fb6-38ca61c7796b4a28bc1b84e6\", \"msg_type\": \"execute_reply\", \"parent_header\": {\"date\": \"2020-04-03T18:24:42.542000Z\", \"msg_id\": \"8bc01ce6-f3ee-4cf9-a3d1-d5cae944f471\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"started\": \"2020-04-03T18:24:43.050344Z\", \"dependencies_met\": true, \"engine\": \"b19117ff-eeaf-4216-9c1d-6f854b18f83c\", \"status\": \"ok\"}, \"content\": {\"status\": \"ok\", \"execution_count\": 5, \"user_expressions\": {}, \"payload\": []}, \"buffers\": [], \"channel\": \"shell\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 5,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "sphere = Mesh(\n",
                        "    SphereBufferGeometry(1, 32, 16),\n",
                        "    MeshStandardMaterial(color='red')\n",
                        ")"
                    ]
                },
                "id": "NotebookImport#5",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 5,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "sphere = Mesh(\n",
                                "    SphereBufferGeometry(1, 32, 16),\n",
                                "    MeshStandardMaterial(color='red')\n",
                                ")"
                            ]
                        },
                        "id": "NotebookImport#5",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "aa757cc0-986b-4e35-becf-743445c9a2f7"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 5,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "sphere = Mesh(\n",
                        "    SphereBufferGeometry(1, 32, 16),\n",
                        "    MeshStandardMaterial(color='red')\n",
                        ")"
                    ]
                },
                "id": "NotebookImport#5",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "a1337f1b-b7fc-4b83-b3e8-9532e8283b3a",
                "data": "{\"header\": {\"msg_id\": \"5148f603-bac8c6cdf4973d32e93f8c84\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:45.624908Z\", \"version\": \"5.3\"}, \"msg_id\": \"5148f603-bac8c6cdf4973d32e93f8c84\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:45.598000Z\", \"msg_id\": \"c4e13729-f69e-4867-828b-e18795438d15\", \"msg_type\": \"comm_msg\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "finish_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 5,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "sphere = Mesh(\n",
                        "    SphereBufferGeometry(1, 32, 16),\n",
                        "    MeshStandardMaterial(color='red')\n",
                        ")"
                    ]
                },
                "id": "NotebookImport#5",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 2
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "stop_progress"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 5,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "sphere = Mesh(\n",
                                "    SphereBufferGeometry(1, 32, 16),\n",
                                "    MeshStandardMaterial(color='red')\n",
                                ")"
                            ]
                        },
                        "id": "NotebookImport#5",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "a1337f1b-b7fc-4b83-b3e8-9532e8283b3a"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "4562fcc3-cce2-4332-8649-84eb2a9e5d9f",
                "data": "{\"header\": {\"msg_id\": \"4c6f18d7-5d7716dec11b914b96a6ca17\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:45.625909Z\", \"version\": \"5.3\"}, \"msg_id\": \"4c6f18d7-5d7716dec11b914b96a6ca17\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:45.598000Z\", \"msg_id\": \"c4e13729-f69e-4867-828b-e18795438d15\", \"msg_type\": \"comm_msg\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 5,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "sphere = Mesh(\n",
                                "    SphereBufferGeometry(1, 32, 16),\n",
                                "    MeshStandardMaterial(color='red')\n",
                                ")"
                            ]
                        },
                        "id": "NotebookImport#5",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_dirty",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "finish_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 5,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "sphere = Mesh(\n",
                                "    SphereBufferGeometry(1, 32, 16),\n",
                                "    MeshStandardMaterial(color='red')\n",
                                ")"
                            ]
                        },
                        "id": "NotebookImport#5",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "rendered_execution",
            "payload": {
                "ids": [
                    "NotebookImport#5"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_finish_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_stop_progress",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "send_info",
            "payload": {
                "cellCount": 9,
                "undoCount": 0,
                "redoCount": 0,
                "selectedCell": "NotebookImport#7"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "reexecute_cells",
            "payload": {
                "cellIds": [
                    "NotebookImport#6"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "start_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "cube = Mesh(\n",
                        "    BoxBufferGeometry(1, 1, 1),\n",
                        "    MeshPhysicalMaterial(color='green'),\n",
                        "    position=[2, 0, 4]\n",
                        ")\n",
                        ""
                    ]
                },
                "id": "NotebookImport#6",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 0
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_mirror_execute",
            "payload": {
                "id": "d8798e70-077b-4d39-973b-1dfed81c126f",
                "msg": {
                    "buffers": [],
                    "channel": "shell",
                    "content": {
                        "silent": false,
                        "store_history": true,
                        "user_expressions": {},
                        "allow_stdin": true,
                        "stop_on_error": false,
                        "code": "cube = Mesh(\n    BoxBufferGeometry(1, 1, 1),\n    MeshPhysicalMaterial(color='green'),\n    position=[2, 0, 4]\n)\n"
                    },
                    "header": {
                        "date": "2020-04-03T18:24:47.191Z",
                        "msg_id": "d8798e70-077b-4d39-973b-1dfed81c126f",
                        "msg_type": "execute_request",
                        "session": "3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6",
                        "username": "",
                        "version": "5.2"
                    },
                    "metadata": {},
                    "parent_header": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "native_command",
            "payload": {
                "command": 14,
                "source": "mouse"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell_and_advance",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.send_command",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "4562fcc3-cce2-4332-8649-84eb2a9e5d9f"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "d8798e70-077b-4d39-973b-1dfed81c126f"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "start_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "cube = Mesh(\n",
                                "    BoxBufferGeometry(1, 1, 1),\n",
                                "    MeshPhysicalMaterial(color='green'),\n",
                                "    position=[2, 0, 4]\n",
                                ")\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#6",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 0
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_start_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "c6499e50-b4e5-4a97-bc76-bdc86d546acf",
                "data": "{\"header\": {\"msg_id\": \"9c90fac6-b03d2eff9af2392b0420848d\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:47.698785Z\", \"version\": \"5.3\"}, \"msg_id\": \"9c90fac6-b03d2eff9af2392b0420848d\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:47.191000Z\", \"msg_id\": \"d8798e70-077b-4d39-973b-1dfed81c126f\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "c6499e50-b4e5-4a97-bc76-bdc86d546acf"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "a1a5db79-c4e5-47bc-9285-d0cb272ea2a9",
                "data": "{\"header\": {\"msg_id\": \"06495ab1-39021534eccfb5ca77351e87\", \"msg_type\": \"execute_input\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:47.699787Z\", \"version\": \"5.3\"}, \"msg_id\": \"06495ab1-39021534eccfb5ca77351e87\", \"msg_type\": \"execute_input\", \"parent_header\": {\"date\": \"2020-04-03T18:24:47.191000Z\", \"msg_id\": \"d8798e70-077b-4d39-973b-1dfed81c126f\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"code\": \"cube = Mesh(\\n    BoxBufferGeometry(1, 1, 1),\\n    MeshPhysicalMaterial(color='green'),\\n    position=[2, 0, 4]\\n)\\n\", \"execution_count\": 6}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "cube = Mesh(\n",
                        "    BoxBufferGeometry(1, 1, 1),\n",
                        "    MeshPhysicalMaterial(color='green'),\n",
                        "    position=[2, 0, 4]\n",
                        ")\n",
                        ""
                    ]
                },
                "id": "NotebookImport#6",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "a1a5db79-c4e5-47bc-9285-d0cb272ea2a9"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "f1eb4bd8-0b05-4e81-882b-61828e013c2d",
                "data": "{\"header\": {\"msg_id\": \"604aa298-de36eca76aaade5858e784c2\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:47.701755Z\", \"version\": \"5.3\"}, \"msg_id\": \"604aa298-de36eca76aaade5858e784c2\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:24:47.191000Z\", \"msg_id\": \"d8798e70-077b-4d39-973b-1dfed81c126f\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"jupyter-threejs\", \"_model_module_version\": \"^2.1.0\", \"_model_name\": \"BoxBufferGeometryModel\", \"_view_count\": null, \"_view_module\": null, \"_view_module_version\": \"\", \"_view_name\": null, \"depth\": 1.0, \"depthSegments\": 1, \"height\": 1.0, \"heightSegments\": 1, \"name\": \"\", \"type\": \"BoxBufferGeometry\", \"width\": 1.0, \"widthSegments\": 1}, \"buffer_paths\": []}, \"comm_id\": \"pythree_example_model_008\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 6,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "cube = Mesh(\n",
                        "    BoxBufferGeometry(1, 1, 1),\n",
                        "    MeshPhysicalMaterial(color='green'),\n",
                        "    position=[2, 0, 4]\n",
                        ")\n",
                        ""
                    ]
                },
                "id": "NotebookImport#6",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "cube = Mesh(\n",
                                "    BoxBufferGeometry(1, 1, 1),\n",
                                "    MeshPhysicalMaterial(color='green'),\n",
                                "    position=[2, 0, 4]\n",
                                ")\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#6",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "f1eb4bd8-0b05-4e81-882b-61828e013c2d"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "2e1f4018-2c4a-41ce-b1f2-97ad621c881c",
                "data": "{\"header\": {\"msg_id\": \"e2c9e073-d7effc6bead57df8fd96e823\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:47.703784Z\", \"version\": \"5.3\"}, \"msg_id\": \"e2c9e073-d7effc6bead57df8fd96e823\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:24:47.191000Z\", \"msg_id\": \"d8798e70-077b-4d39-973b-1dfed81c126f\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"jupyter-threejs\", \"_model_module_version\": \"^2.1.0\", \"_model_name\": \"MeshPhysicalMaterialModel\", \"_view_count\": null, \"_view_module\": null, \"_view_module_version\": \"\", \"_view_name\": null, \"alphaMap\": null, \"alphaTest\": 0.0, \"aoMap\": null, \"aoMapIntensity\": 1.0, \"blendDst\": \"OneMinusSrcAlphaFactor\", \"blendDstAlpha\": 0.0, \"blendEquation\": \"AddEquation\", \"blendEquationAlpha\": 0.0, \"blendSrc\": \"SrcAlphaFactor\", \"blendSrcAlpha\": 0.0, \"blending\": \"NormalBlending\", \"bumpMap\": null, \"bumpScale\": 1.0, \"clearCoat\": 0.0, \"clearCoatRoughness\": 0.0, \"clipIntersection\": false, \"clipShadows\": false, \"clippingPlanes\": [], \"color\": \"green\", \"colorWrite\": true, \"defines\": {\"PHYSICAL\": \"\"}, \"depthFunc\": \"LessEqualDepth\", \"depthTest\": true, \"depthWrite\": true, \"displacementBias\": 0.0, \"displacementMap\": null, \"displacementScale\": 1.0, \"dithering\": false, \"emissive\": \"#000000\", \"emissiveIntensity\": 1.0, \"emissiveMap\": null, \"envMap\": null, \"envMapIntensity\": 1.0, \"flatShading\": false, \"fog\": true, \"lightMap\": null, \"lightMapIntensity\": 1.0, \"lights\": true, \"map\": null, \"metalness\": 0.5, \"metalnessMap\": null, \"morphNormals\": false, \"morphTargets\": false, \"name\": \"\", \"normalMap\": null, \"normalScale\": [1.0, 1.0], \"opacity\": 1.0, \"overdraw\": 0.0, \"polygonOffset\": false, \"polygonOffsetFactor\": 0.0, \"polygonOffsetUnits\": 0.0, \"precision\": null, \"premultipliedAlpha\": false, \"reflectivity\": 0.5, \"refractionRatio\": 0.98, \"roughness\": 0.5, \"roughnessMap\": null, \"shadowSide\": null, \"side\": \"FrontSide\", \"skinning\": false, \"transparent\": false, \"type\": \"MeshPhysicalMaterial\", \"vertexColors\": \"NoColors\", \"visible\": true, \"wireframe\": false, \"wireframeLinecap\": \"round\", \"wireframeLinejoin\": \"round\", \"wireframeLinewidth\": 1.0}, \"buffer_paths\": []}, \"comm_id\": \"pythree_example_model_009\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 6,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "cube = Mesh(\n",
                        "    BoxBufferGeometry(1, 1, 1),\n",
                        "    MeshPhysicalMaterial(color='green'),\n",
                        "    position=[2, 0, 4]\n",
                        ")\n",
                        ""
                    ]
                },
                "id": "NotebookImport#6",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 6,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "cube = Mesh(\n",
                                "    BoxBufferGeometry(1, 1, 1),\n",
                                "    MeshPhysicalMaterial(color='green'),\n",
                                "    position=[2, 0, 4]\n",
                                ")\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#6",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "2e1f4018-2c4a-41ce-b1f2-97ad621c881c"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "23176308-e63c-4037-88c7-ce8b255f941d",
                "data": "{\"header\": {\"msg_id\": \"7d18f480-90794a691c46f673979d96f9\", \"msg_type\": \"execute_reply\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:47.707785Z\", \"version\": \"5.3\"}, \"msg_id\": \"7d18f480-90794a691c46f673979d96f9\", \"msg_type\": \"execute_reply\", \"parent_header\": {\"date\": \"2020-04-03T18:24:47.191000Z\", \"msg_id\": \"d8798e70-077b-4d39-973b-1dfed81c126f\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"started\": \"2020-04-03T18:24:47.699787Z\", \"dependencies_met\": true, \"engine\": \"b19117ff-eeaf-4216-9c1d-6f854b18f83c\", \"status\": \"ok\"}, \"content\": {\"status\": \"ok\", \"execution_count\": 6, \"user_expressions\": {}, \"payload\": []}, \"buffers\": [], \"channel\": \"shell\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 6,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "cube = Mesh(\n",
                        "    BoxBufferGeometry(1, 1, 1),\n",
                        "    MeshPhysicalMaterial(color='green'),\n",
                        "    position=[2, 0, 4]\n",
                        ")\n",
                        ""
                    ]
                },
                "id": "NotebookImport#6",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 6,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "cube = Mesh(\n",
                                "    BoxBufferGeometry(1, 1, 1),\n",
                                "    MeshPhysicalMaterial(color='green'),\n",
                                "    position=[2, 0, 4]\n",
                                ")\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#6",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "23176308-e63c-4037-88c7-ce8b255f941d"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 6,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "cube = Mesh(\n",
                        "    BoxBufferGeometry(1, 1, 1),\n",
                        "    MeshPhysicalMaterial(color='green'),\n",
                        "    position=[2, 0, 4]\n",
                        ")\n",
                        ""
                    ]
                },
                "id": "NotebookImport#6",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "376d9ccd-acf5-4e26-ab8d-b7c0391cc11a",
                "data": "{\"header\": {\"msg_id\": \"7b5a35b1-d3e1fa7059fe5daf5bde278f\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:47.705784Z\", \"version\": \"5.3\"}, \"msg_id\": \"7b5a35b1-d3e1fa7059fe5daf5bde278f\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:24:47.191000Z\", \"msg_id\": \"d8798e70-077b-4d39-973b-1dfed81c126f\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"jupyter-threejs\", \"_model_module_version\": \"^2.1.0\", \"_model_name\": \"MeshModel\", \"_view_count\": null, \"_view_module\": null, \"_view_module_version\": \"\", \"_view_name\": null, \"castShadow\": false, \"children\": [], \"drawMode\": \"TrianglesDrawMode\", \"frustumCulled\": true, \"geometry\": \"IPY_MODEL_pythree_example_model_008\", \"material\": \"IPY_MODEL_pythree_example_model_009\", \"matrix\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"matrixAutoUpdate\": true, \"matrixWorld\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"matrixWorldNeedsUpdate\": false, \"modelViewMatrix\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"morphTargetInfluences\": [], \"name\": \"\", \"normalMatrix\": [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], \"position\": [2.0, 0.0, 4.0], \"quaternion\": [0.0, 0.0, 0.0, 1.0], \"receiveShadow\": false, \"renderOrder\": 0, \"rotation\": [0.0, 0.0, 0.0, \"XYZ\"], \"scale\": [1.0, 1.0, 1.0], \"type\": \"Mesh\", \"up\": [0.0, 1.0, 0.0], \"visible\": true}, \"buffer_paths\": []}, \"comm_id\": \"pythree_example_model_010\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 6,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "cube = Mesh(\n",
                                "    BoxBufferGeometry(1, 1, 1),\n",
                                "    MeshPhysicalMaterial(color='green'),\n",
                                "    position=[2, 0, 4]\n",
                                ")\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#6",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "376d9ccd-acf5-4e26-ab8d-b7c0391cc11a"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "8282faa4-727f-492d-9d16-e6f8463de644",
                "data": "{\"header\": {\"msg_id\": \"b3310010-03e69e7ff11530220a418192\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:47.707785Z\", \"version\": \"5.3\"}, \"msg_id\": \"b3310010-03e69e7ff11530220a418192\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:47.191000Z\", \"msg_id\": \"d8798e70-077b-4d39-973b-1dfed81c126f\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 6,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "cube = Mesh(\n",
                        "    BoxBufferGeometry(1, 1, 1),\n",
                        "    MeshPhysicalMaterial(color='green'),\n",
                        "    position=[2, 0, 4]\n",
                        ")\n",
                        ""
                    ]
                },
                "id": "NotebookImport#6",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 6,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "cube = Mesh(\n",
                                "    BoxBufferGeometry(1, 1, 1),\n",
                                "    MeshPhysicalMaterial(color='green'),\n",
                                "    position=[2, 0, 4]\n",
                                ")\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#6",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": "{\"buffers\":[],\"channel\":\"shell\",\"content\":{\"comm_id\":\"pythree_example_model_010\",\"data\":{\"method\":\"update\",\"state\":{\"morphTargetInfluences\":[]},\"buffer_paths\":[]}},\"header\":{\"date\":\"2020-04-03T18:24:50.732Z\",\"msg_id\":\"cf48eff7-e6a2-4129-a85b-3af1eff1bd25\",\"msg_type\":\"comm_msg\",\"session\":\"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\",\"username\":\"\",\"version\":\"5.2\"},\"metadata\":{},\"parent_header\":{}}"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "8282faa4-727f-492d-9d16-e6f8463de644"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "9da28df5-5513-4eea-890a-28763010ef3c",
                "data": "{\"header\": {\"msg_id\": \"230342da-41dc0c6ab6465f0e43ca4a8c\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:50.735478Z\", \"version\": \"5.3\"}, \"msg_id\": \"230342da-41dc0c6ab6465f0e43ca4a8c\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:50.732000Z\", \"msg_id\": \"cf48eff7-e6a2-4129-a85b-3af1eff1bd25\", \"msg_type\": \"comm_msg\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 6,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "cube = Mesh(\n",
                        "    BoxBufferGeometry(1, 1, 1),\n",
                        "    MeshPhysicalMaterial(color='green'),\n",
                        "    position=[2, 0, 4]\n",
                        ")\n",
                        ""
                    ]
                },
                "id": "NotebookImport#6",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "finish_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 6,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "cube = Mesh(\n",
                        "    BoxBufferGeometry(1, 1, 1),\n",
                        "    MeshPhysicalMaterial(color='green'),\n",
                        "    position=[2, 0, 4]\n",
                        ")\n",
                        ""
                    ]
                },
                "id": "NotebookImport#6",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 2
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "stop_progress"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 6,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "cube = Mesh(\n",
                                "    BoxBufferGeometry(1, 1, 1),\n",
                                "    MeshPhysicalMaterial(color='green'),\n",
                                "    position=[2, 0, 4]\n",
                                ")\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#6",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "9da28df5-5513-4eea-890a-28763010ef3c"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "5dacc43e-f234-4f7c-b754-02ef7d2b14eb",
                "data": "{\"header\": {\"msg_id\": \"b4ef9efc-675b7f9051c587f365297800\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:50.735478Z\", \"version\": \"5.3\"}, \"msg_id\": \"b4ef9efc-675b7f9051c587f365297800\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:50.732000Z\", \"msg_id\": \"cf48eff7-e6a2-4129-a85b-3af1eff1bd25\", \"msg_type\": \"comm_msg\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 6,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "cube = Mesh(\n",
                                "    BoxBufferGeometry(1, 1, 1),\n",
                                "    MeshPhysicalMaterial(color='green'),\n",
                                "    position=[2, 0, 4]\n",
                                ")\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#6",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_dirty",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "finish_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 6,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "cube = Mesh(\n",
                                "    BoxBufferGeometry(1, 1, 1),\n",
                                "    MeshPhysicalMaterial(color='green'),\n",
                                "    position=[2, 0, 4]\n",
                                ")\n",
                                ""
                            ]
                        },
                        "id": "NotebookImport#6",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "rendered_execution",
            "payload": {
                "ids": [
                    "NotebookImport#6"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_finish_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_stop_progress",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "send_info",
            "payload": {
                "cellCount": 9,
                "undoCount": 0,
                "redoCount": 0,
                "selectedCell": "NotebookImport#8"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "reexecute_cells",
            "payload": {
                "cellIds": [
                    "NotebookImport#7"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "start_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                        "key_light = DirectionalLight(position=[0, 10, 10])\n",
                        "ambient_light = AmbientLight()"
                    ]
                },
                "id": "NotebookImport#7",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 0
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_mirror_execute",
            "payload": {
                "id": "202bfa1a-258a-4c0c-b029-7c224464a85d",
                "msg": {
                    "buffers": [],
                    "channel": "shell",
                    "content": {
                        "silent": false,
                        "store_history": true,
                        "user_expressions": {},
                        "allow_stdin": true,
                        "stop_on_error": false,
                        "code": "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\nkey_light = DirectionalLight(position=[0, 10, 10])\nambient_light = AmbientLight()"
                    },
                    "header": {
                        "date": "2020-04-03T18:24:51.805Z",
                        "msg_id": "202bfa1a-258a-4c0c-b029-7c224464a85d",
                        "msg_type": "execute_request",
                        "session": "3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6",
                        "username": "",
                        "version": "5.2"
                    },
                    "metadata": {},
                    "parent_header": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "native_command",
            "payload": {
                "command": 14,
                "source": "mouse"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell_and_advance",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.send_command",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "5dacc43e-f234-4f7c-b754-02ef7d2b14eb"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": "{\"buffers\":[],\"channel\":\"shell\",\"content\":{\"comm_id\":\"pythree_example_model_010\",\"data\":{\"method\":\"update\",\"state\":{\"matrix\":[1,0,0,0,0,1,0,0,0,0,1,0,2,0,4,1]},\"buffer_paths\":[]}},\"header\":{\"date\":\"2020-04-03T18:24:52.238Z\",\"msg_id\":\"a55d312f-56ce-4b71-91ab-3adb5c0efc26\",\"msg_type\":\"comm_msg\",\"session\":\"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\",\"username\":\"\",\"version\":\"5.2\"},\"metadata\":{},\"parent_header\":{}}"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "0733de8b-1eb6-48e4-9f9a-6267b2e8c65b",
                "data": "{\"header\": {\"msg_id\": \"7bfb21c6-95129b6d787d2ddb356d4402\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:52.244035Z\", \"version\": \"5.3\"}, \"msg_id\": \"7bfb21c6-95129b6d787d2ddb356d4402\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:52.238000Z\", \"msg_id\": \"a55d312f-56ce-4b71-91ab-3adb5c0efc26\", \"msg_type\": \"comm_msg\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "202bfa1a-258a-4c0c-b029-7c224464a85d"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "start_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "key_light = DirectionalLight(position=[0, 10, 10])\n",
                                "ambient_light = AmbientLight()"
                            ]
                        },
                        "id": "NotebookImport#7",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 0
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_start_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "0733de8b-1eb6-48e4-9f9a-6267b2e8c65b"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "dcece814-f8a1-4aef-be57-efaa512f1aa1",
                "data": "{\"header\": {\"msg_id\": \"570aafea-5994a854f3e7d2d23161d9bb\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:52.245006Z\", \"version\": \"5.3\"}, \"msg_id\": \"570aafea-5994a854f3e7d2d23161d9bb\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:52.238000Z\", \"msg_id\": \"a55d312f-56ce-4b71-91ab-3adb5c0efc26\", \"msg_type\": \"comm_msg\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "dcece814-f8a1-4aef-be57-efaa512f1aa1"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "aa994b74-299a-41e9-9210-f30923047cc4",
                "data": "{\"header\": {\"msg_id\": \"3c511e3e-64e037f448c91a73c3d61013\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:52.318006Z\", \"version\": \"5.3\"}, \"msg_id\": \"3c511e3e-64e037f448c91a73c3d61013\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:51.805000Z\", \"msg_id\": \"202bfa1a-258a-4c0c-b029-7c224464a85d\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "aa994b74-299a-41e9-9210-f30923047cc4"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "5dd20e78-317f-425f-8af8-d4e43fec55ad",
                "data": "{\"header\": {\"msg_id\": \"6fc83fe3-663d42d952b28c9b1f1de364\", \"msg_type\": \"execute_input\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:52.318006Z\", \"version\": \"5.3\"}, \"msg_id\": \"6fc83fe3-663d42d952b28c9b1f1de364\", \"msg_type\": \"execute_input\", \"parent_header\": {\"date\": \"2020-04-03T18:24:51.805000Z\", \"msg_id\": \"202bfa1a-258a-4c0c-b029-7c224464a85d\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"code\": \"camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\\nkey_light = DirectionalLight(position=[0, 10, 10])\\nambient_light = AmbientLight()\", \"execution_count\": 7}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                        "key_light = DirectionalLight(position=[0, 10, 10])\n",
                        "ambient_light = AmbientLight()"
                    ]
                },
                "id": "NotebookImport#7",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "5dd20e78-317f-425f-8af8-d4e43fec55ad"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "4db0cc3c-fe8f-4133-8dea-c028dc8449ab",
                "data": "{\"header\": {\"msg_id\": \"6112dda9-f6660e73a9a93f69239951a3\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:52.323039Z\", \"version\": \"5.3\"}, \"msg_id\": \"6112dda9-f6660e73a9a93f69239951a3\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:24:51.805000Z\", \"msg_id\": \"202bfa1a-258a-4c0c-b029-7c224464a85d\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"jupyter-threejs\", \"_model_module_version\": \"^2.1.0\", \"_model_name\": \"PerspectiveCameraModel\", \"_view_count\": null, \"_view_module\": null, \"_view_module_version\": \"\", \"_view_name\": null, \"aspect\": 1.5, \"castShadow\": false, \"children\": [], \"far\": 2000.0, \"focus\": 10.0, \"fov\": 50.0, \"frustumCulled\": true, \"matrix\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"matrixAutoUpdate\": true, \"matrixWorld\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"matrixWorldInverse\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"matrixWorldNeedsUpdate\": false, \"modelViewMatrix\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"name\": \"\", \"near\": 0.1, \"normalMatrix\": [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], \"position\": [10.0, 6.0, 10.0], \"projectionMatrix\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"quaternion\": [0.0, 0.0, 0.0, 1.0], \"receiveShadow\": false, \"renderOrder\": 0, \"rotation\": [0.0, 0.0, 0.0, \"XYZ\"], \"scale\": [1.0, 1.0, 1.0], \"type\": \"PerspectiveCamera\", \"up\": [0.0, 1.0, 0.0], \"visible\": true, \"zoom\": 1.0}, \"buffer_paths\": []}, \"comm_id\": \"pythree_example_model_011\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 7,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                        "key_light = DirectionalLight(position=[0, 10, 10])\n",
                        "ambient_light = AmbientLight()"
                    ]
                },
                "id": "NotebookImport#7",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "key_light = DirectionalLight(position=[0, 10, 10])\n",
                                "ambient_light = AmbientLight()"
                            ]
                        },
                        "id": "NotebookImport#7",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "4db0cc3c-fe8f-4133-8dea-c028dc8449ab"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "f6c6129a-1be0-4e17-a7ca-182f7fd42fae",
                "data": "{\"header\": {\"msg_id\": \"c96dfbce-1bb362dcf0d6bbcabfec9e1f\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:52.325005Z\", \"version\": \"5.3\"}, \"msg_id\": \"c96dfbce-1bb362dcf0d6bbcabfec9e1f\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:24:51.805000Z\", \"msg_id\": \"202bfa1a-258a-4c0c-b029-7c224464a85d\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"jupyter-threejs\", \"_model_module_version\": \"^2.1.0\", \"_model_name\": \"DirectionalLightModel\", \"_view_count\": null, \"_view_module\": null, \"_view_module_version\": \"\", \"_view_name\": null, \"castShadow\": false, \"children\": [], \"color\": \"#ffffff\", \"frustumCulled\": true, \"intensity\": 1.0, \"matrix\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"matrixAutoUpdate\": true, \"matrixWorld\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"matrixWorldNeedsUpdate\": false, \"modelViewMatrix\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"name\": \"\", \"normalMatrix\": [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], \"position\": [0.0, 10.0, 10.0], \"quaternion\": [0.0, 0.0, 0.0, 1.0], \"receiveShadow\": false, \"renderOrder\": 0, \"rotation\": [0.0, 0.0, 0.0, \"XYZ\"], \"scale\": [1.0, 1.0, 1.0], \"shadow\": \"uninitialized\", \"target\": \"uninitialized\", \"type\": \"DirectionalLight\", \"up\": [0.0, 1.0, 0.0], \"visible\": true}, \"buffer_paths\": []}, \"comm_id\": \"pythree_example_model_012\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 7,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                        "key_light = DirectionalLight(position=[0, 10, 10])\n",
                        "ambient_light = AmbientLight()"
                    ]
                },
                "id": "NotebookImport#7",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 7,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "key_light = DirectionalLight(position=[0, 10, 10])\n",
                                "ambient_light = AmbientLight()"
                            ]
                        },
                        "id": "NotebookImport#7",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": "{\"buffers\":[],\"channel\":\"shell\",\"content\":{\"comm_id\":\"pythree_example_model_011\",\"data\":{\"method\":\"update\",\"state\":{\"projectionMatrix\":[1.4296712803397058,0,0,0,0,2.1445069205095586,0,0,0,0,-1.00010000500025,-1,0,0,-0.200010000500025,0]},\"buffer_paths\":[]}},\"header\":{\"date\":\"2020-04-03T18:24:54.881Z\",\"msg_id\":\"13f0fc21-146c-49d6-bef5-0cb7527f3239\",\"msg_type\":\"comm_msg\",\"session\":\"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\",\"username\":\"\",\"version\":\"5.2\"},\"metadata\":{},\"parent_header\":{}}"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "f6c6129a-1be0-4e17-a7ca-182f7fd42fae"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "2cc2f70e-8e7c-4a1d-9697-8866cfb6a4e4",
                "data": "{\"header\": {\"msg_id\": \"9f0e36fb-5265277668900430c44947f1\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:52.328038Z\", \"version\": \"5.3\"}, \"msg_id\": \"9f0e36fb-5265277668900430c44947f1\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:24:51.805000Z\", \"msg_id\": \"202bfa1a-258a-4c0c-b029-7c224464a85d\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"jupyter-threejs\", \"_model_module_version\": \"^2.1.0\", \"_model_name\": \"AmbientLightModel\", \"_view_count\": null, \"_view_module\": null, \"_view_module_version\": \"\", \"_view_name\": null, \"castShadow\": false, \"children\": [], \"color\": \"#ffffff\", \"frustumCulled\": true, \"intensity\": 1.0, \"matrix\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"matrixAutoUpdate\": true, \"matrixWorld\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"matrixWorldNeedsUpdate\": false, \"modelViewMatrix\": [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0], \"name\": \"\", \"normalMatrix\": [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0], \"position\": [0.0, 0.0, 0.0], \"quaternion\": [0.0, 0.0, 0.0, 1.0], \"receiveShadow\": false, \"renderOrder\": 0, \"rotation\": [0.0, 0.0, 0.0, \"XYZ\"], \"scale\": [1.0, 1.0, 1.0], \"type\": \"AmbientLight\", \"up\": [0.0, 1.0, 0.0], \"visible\": true}, \"buffer_paths\": []}, \"comm_id\": \"pythree_example_model_013\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 7,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                        "key_light = DirectionalLight(position=[0, 10, 10])\n",
                        "ambient_light = AmbientLight()"
                    ]
                },
                "id": "NotebookImport#7",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 7,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "key_light = DirectionalLight(position=[0, 10, 10])\n",
                                "ambient_light = AmbientLight()"
                            ]
                        },
                        "id": "NotebookImport#7",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": "{\"buffers\":[],\"channel\":\"shell\",\"content\":{\"comm_id\":\"cce94f02-e6b6-4f3e-b901-7c905bdc421f\",\"target_name\":\"jupyter.widget\",\"data\":{\"state\":{\"_model_name\":\"Object3DModel\",\"_model_module\":\"jupyter-threejs\",\"_model_module_version\":\"^2.1.0\",\"_view_name\":null,\"_view_module\":null,\"_view_module_version\":\"\"},\"buffer_paths\":[]}},\"header\":{\"date\":\"2020-04-03T18:24:55.293Z\",\"msg_id\":\"c7069aef-895d-433e-b81a-d07c8f5d1073\",\"msg_type\":\"comm_open\",\"session\":\"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\",\"username\":\"\",\"version\":\"5.2\"},\"metadata\":{\"version\":\"2.0.0\"},\"parent_header\":{}}"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": "{\"buffers\":[],\"channel\":\"shell\",\"content\":{\"comm_id\":\"04f10b7a-9750-4a30-b834-cacd3b95bb40\",\"target_name\":\"jupyter.widget\",\"data\":{\"state\":{\"projectionMatrix\":[0.2,0,0,0,0,0.2,0,0,0,0,-0.004004004004004004,0,0,0,-1.002002002002002,1],\"left\":-5,\"right\":5,\"top\":5,\"bottom\":-5,\"near\":0.5,\"far\":500,\"_model_name\":\"OrthographicCameraModel\",\"_model_module\":\"jupyter-threejs\",\"_model_module_version\":\"^2.1.0\",\"_view_name\":null,\"_view_module\":null,\"_view_module_version\":\"\"},\"buffer_paths\":[]}},\"header\":{\"date\":\"2020-04-03T18:24:55.294Z\",\"msg_id\":\"335478e3-1325-4aba-b069-5a9a4cd607e3\",\"msg_type\":\"comm_open\",\"session\":\"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\",\"username\":\"\",\"version\":\"5.2\"},\"metadata\":{\"version\":\"2.0.0\"},\"parent_header\":{}}"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": "{\"buffers\":[],\"channel\":\"shell\",\"content\":{\"comm_id\":\"e23117a4-c16a-4e3d-aa79-89f16582d24f\",\"target_name\":\"jupyter.widget\",\"data\":{\"state\":{\"camera\":\"IPY_MODEL_04f10b7a-9750-4a30-b834-cacd3b95bb40\",\"_model_name\":\"DirectionalLightShadowModel\",\"_model_module\":\"jupyter-threejs\",\"_model_module_version\":\"^2.1.0\",\"_view_name\":null,\"_view_module\":null,\"_view_module_version\":\"\"},\"buffer_paths\":[]}},\"header\":{\"date\":\"2020-04-03T18:24:55.294Z\",\"msg_id\":\"054c9536-0d7c-4703-af0b-11d93b4e028e\",\"msg_type\":\"comm_open\",\"session\":\"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\",\"username\":\"\",\"version\":\"5.2\"},\"metadata\":{\"version\":\"2.0.0\"},\"parent_header\":{}}"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": "{\"buffers\":[],\"channel\":\"shell\",\"content\":{\"comm_id\":\"pythree_example_model_012\",\"data\":{\"method\":\"update\",\"state\":{\"matrixWorldNeedsUpdate\":true,\"target\":\"IPY_MODEL_cce94f02-e6b6-4f3e-b901-7c905bdc421f\",\"shadow\":\"IPY_MODEL_e23117a4-c16a-4e3d-aa79-89f16582d24f\"},\"buffer_paths\":[]}},\"header\":{\"date\":\"2020-04-03T18:24:55.295Z\",\"msg_id\":\"542ef5c7-17ab-4bc1-9594-f52b5f9032e5\",\"msg_type\":\"comm_msg\",\"session\":\"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\",\"username\":\"\",\"version\":\"5.2\"},\"metadata\":{},\"parent_header\":{}}"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "2cc2f70e-8e7c-4a1d-9697-8866cfb6a4e4"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "45c51ae8-e823-4f18-b490-65ba8349af85",
                "data": "{\"header\": {\"msg_id\": \"4fd9ccdc-16a41a6b7de45094579c8030\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:52.331035Z\", \"version\": \"5.3\"}, \"msg_id\": \"4fd9ccdc-16a41a6b7de45094579c8030\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:51.805000Z\", \"msg_id\": \"202bfa1a-258a-4c0c-b029-7c224464a85d\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 7,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                        "key_light = DirectionalLight(position=[0, 10, 10])\n",
                        "ambient_light = AmbientLight()"
                    ]
                },
                "id": "NotebookImport#7",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 7,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "key_light = DirectionalLight(position=[0, 10, 10])\n",
                                "ambient_light = AmbientLight()"
                            ]
                        },
                        "id": "NotebookImport#7",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "45c51ae8-e823-4f18-b490-65ba8349af85"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "7ef6999a-d452-4bee-88a5-826618e9e92f",
                "data": "{\"header\": {\"msg_id\": \"eebd0236-846c33e4727f8467ae05b3f6\", \"msg_type\": \"execute_reply\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:52.331035Z\", \"version\": \"5.3\"}, \"msg_id\": \"eebd0236-846c33e4727f8467ae05b3f6\", \"msg_type\": \"execute_reply\", \"parent_header\": {\"date\": \"2020-04-03T18:24:51.805000Z\", \"msg_id\": \"202bfa1a-258a-4c0c-b029-7c224464a85d\", \"msg_type\": \"execute_request\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"started\": \"2020-04-03T18:24:52.318006Z\", \"dependencies_met\": true, \"engine\": \"b19117ff-eeaf-4216-9c1d-6f854b18f83c\", \"status\": \"ok\"}, \"content\": {\"status\": \"ok\", \"execution_count\": 7, \"user_expressions\": {}, \"payload\": []}, \"buffers\": [], \"channel\": \"shell\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 7,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                        "key_light = DirectionalLight(position=[0, 10, 10])\n",
                        "ambient_light = AmbientLight()"
                    ]
                },
                "id": "NotebookImport#7",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 7,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "key_light = DirectionalLight(position=[0, 10, 10])\n",
                                "ambient_light = AmbientLight()"
                            ]
                        },
                        "id": "NotebookImport#7",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "7ef6999a-d452-4bee-88a5-826618e9e92f"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 7,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                        "key_light = DirectionalLight(position=[0, 10, 10])\n",
                        "ambient_light = AmbientLight()"
                    ]
                },
                "id": "NotebookImport#7",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "5a3c6069-3447-4bcd-b0c0-f2c13d7e2945",
                "data": "{\"header\": {\"msg_id\": \"18010fc1-d89bb55a21ee8a0bc8380177\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:54.889417Z\", \"version\": \"5.3\"}, \"msg_id\": \"18010fc1-d89bb55a21ee8a0bc8380177\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:54.881000Z\", \"msg_id\": \"13f0fc21-146c-49d6-bef5-0cb7527f3239\", \"msg_type\": \"comm_msg\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "finish_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 7,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                        "key_light = DirectionalLight(position=[0, 10, 10])\n",
                        "ambient_light = AmbientLight()"
                    ]
                },
                "id": "NotebookImport#7",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 2
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "stop_progress"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 7,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "key_light = DirectionalLight(position=[0, 10, 10])\n",
                                "ambient_light = AmbientLight()"
                            ]
                        },
                        "id": "NotebookImport#7",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "5a3c6069-3447-4bcd-b0c0-f2c13d7e2945"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "c6a148dd-df13-4953-a688-de7d63833cfe",
                "data": "{\"header\": {\"msg_id\": \"e9a8292c-687f843545ce603c9178f842\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"25283d5f-e3f5457acc4b4412858d620f\", \"date\": \"2020-04-03T18:24:54.890415Z\", \"version\": \"5.3\"}, \"msg_id\": \"e9a8292c-687f843545ce603c9178f842\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:24:54.881000Z\", \"msg_id\": \"13f0fc21-146c-49d6-bef5-0cb7527f3239\", \"msg_type\": \"comm_msg\", \"session\": \"3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 7,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "key_light = DirectionalLight(position=[0, 10, 10])\n",
                                "ambient_light = AmbientLight()"
                            ]
                        },
                        "id": "NotebookImport#7",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_dirty",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "finish_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 7,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "camera = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                                "key_light = DirectionalLight(position=[0, 10, 10])\n",
                                "ambient_light = AmbientLight()"
                            ]
                        },
                        "id": "NotebookImport#7",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "rendered_execution",
            "payload": {
                "ids": [
                    "NotebookImport#7"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_finish_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_stop_progress",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "reexecute_cells",
            "payload": {
                "cellIds": [
                    "NotebookImport#8"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "start_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "f = \"\"\"\n",
                        "function f(origu, origv, out) {\n",
                        "    // scale u and v to the ranges I want: [0, 2*pi]\n",
                        "    var u = 2*Math.PI*origu;\n",
                        "    var v = 2*Math.PI*origv;\n",
                        "\n",
                        "    var x = Math.sin(u);\n",
                        "    var y = Math.cos(v);\n",
                        "    var z = Math.cos(u+v);\n",
                        "\n",
                        "    out.set(x,y,z)\n",
                        "}\n",
                        "\"\"\"\n",
                        "surf_g = ParametricGeometry(func=f, slices=16, stacks=16);\n",
                        "\n",
                        "surf1 = Mesh(geometry=surf_g,\n",
                        "             material=MeshLambertMaterial(color='green', side='FrontSide'))\n",
                        "surf2 = Mesh(geometry=surf_g,\n",
                        "             material=MeshLambertMaterial(color='yellow', side='BackSide'))\n",
                        "surf = Group(children=[surf1, surf2])\n",
                        "\n",
                        "camera2 = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\n",
                        "scene2 = Scene(children=[surf, camera2,\n",
                        "                         DirectionalLight(position=[3, 5, 1], intensity=0.6),\n",
                        "                         AmbientLight(intensity=0.5)])\n",
                        "renderer2 = Renderer(camera=camera2, scene=scene2,\n",
                        "                     controls=[OrbitControls(controlling=camera2)],\n",
                        "                     width=view_width, height=view_height)\n",
                        "display(renderer2)"
                    ]
                },
                "id": "NotebookImport#8",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 0
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_mirror_execute",
            "payload": {
                "id": "2d99625b-8146-460a-acb3-5c2340ef0d25",
                "msg": {
                    "buffers": [],
                    "channel": "shell",
                    "content": {
                        "silent": false,
                        "store_history": true,
                        "user_expressions": {},
                        "allow_stdin": true,
                        "stop_on_error": false,
                        "code": "f = \"\"\"\nfunction f(origu, origv, out) {\n    // scale u and v to the ranges I want: [0, 2*pi]\n    var u = 2*Math.PI*origu;\n    var v = 2*Math.PI*origv;\n\n    var x = Math.sin(u);\n    var y = Math.cos(v);\n    var z = Math.cos(u+v);\n\n    out.set(x,y,z)\n}\n\"\"\"\nsurf_g = ParametricGeometry(func=f, slices=16, stacks=16);\n\nsurf1 = Mesh(geometry=surf_g,\n             material=MeshLambertMaterial(color='green', side='FrontSide'))\nsurf2 = Mesh(geometry=surf_g,\n             material=MeshLambertMaterial(color='yellow', side='BackSide'))\nsurf = Group(children=[surf1, surf2])\n\ncamera2 = PerspectiveCamera( position=[10, 6, 10], aspect=view_width/view_height)\nscene2 = Scene(children=[surf, camera2,\n                         DirectionalLight(position=[3, 5, 1], intensity=0.6),\n                         AmbientLight(intensity=0.5)])\nrenderer2 = Renderer(camera=camera2, scene=scene2,\n                     controls=[OrbitControls(controlling=camera2)],\n                     width=view_width, height=view_height)\ndisplay(renderer2)"
                    },
                    "header": {
                        "date": "2020-04-03T18:24:57.345Z",
                        "msg_id": "2d99625b-8146-460a-acb3-5c2340ef0d25",
                        "msg_type": "execute_request",
                        "session": "3999d3ec-c75c-4eb5-9a1d-48f5fc8989c6",
                        "username": "",
                        "version": "5.2"
                    },
                    "metadata": {},
                    "parent_header": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "send_info",
            "payload": {
                "cellCount": 10,
                "undoCount": 1,
                "redoCount": 0,
                "selectedCell": "NotebookImport#8"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_model",
            "payload": {
                "source": "user",
                "kind": "insert",
                "newDirty": true,
                "oldDirty": true,
                "index": 9,
                "cell": {
                    "data": {
                        "cell_type": "code",
                        "execution_count": null,
                        "metadata": {},
                        "outputs": [],
                        "source": []
                    },
                    "id": "2bf80bc8-4dd4-4a8b-a35a-ff576c481c83",
                    "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                    "line": 0,
                    "state": 2
                },
                "codeCellAboveId": "NotebookImport#8"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "send_info",
            "payload": {
                "cellCount": 10,
                "undoCount": 1,
                "redoCount": 0,
                "selectedCell": "2bf80bc8-4dd4-4a8b-a35a-ff576c481c83"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "native_command",
            "payload": {
                "command": 14,
                "source": "mouse"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell_and_advance",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "action.insert_below",
                "payload": {
                    "data": {
                        "cellId": "NotebookImport#8",
                        "newCellId": "2bf80bc8-4dd4-4a8b-a35a-ff576c481c83"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "rendered_execution",
            "payload": {
                "ids": [
                    "2bf80bc8-4dd4-4a8b-a35a-ff576c481c83"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.insert_below",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "focused_cell_editor",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.focus_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.send_command",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.code_created",
            "payload": {}
        },
        "type": "fromUI"
    }
]
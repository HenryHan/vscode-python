[
    {
        "payload": {
            "type": "loc_init",
            "payload": "{}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_settings",
            "payload": "{\"allowImportFromNotebook\":true,\"jupyterLaunchTimeout\":20000,\"jupyterLaunchRetries\":3,\"enabled\":true,\"jupyterServerURI\":\"local\",\"notebookFileRoot\":\"${fileDirname}\",\"changeDirOnImportExport\":false,\"useDefaultConfigForJupyter\":true,\"jupyterInterruptTimeout\":10000,\"searchForJupyter\":true,\"showCellInputCode\":true,\"collapseCellInputCodeByDefault\":true,\"allowInput\":true,\"maxOutputSize\":400,\"errorBackgroundColor\":\"#FFFFFF\",\"sendSelectionToInteractiveWindow\":false,\"codeRegularExpression\":\"^(#\\\\s*%%|#\\\\s*\\\\<codecell\\\\>|#\\\\s*In\\\\[\\\\d*?\\\\]|#\\\\s*In\\\\[ \\\\])\",\"markdownRegularExpression\":\"^(#\\\\s*%%\\\\s*\\\\[markdown\\\\]|#\\\\s*\\\\<markdowncell\\\\>)\",\"variableExplorerExclude\":\"module;function;builtin_function_or_method\",\"liveShareConnectionTimeout\":100,\"enablePlotViewer\":true,\"stopOnFirstLineWhileDebugging\":true,\"stopOnError\":true,\"addGotoCodeLenses\":true,\"enableCellCodeLens\":true,\"runStartupCommands\":\"\",\"debugJustMyCode\":true,\"variableQueries\":[],\"jupyterCommandLineArguments\":[],\"disableJupyterAutoStart\":true,\"extraSettings\":{\"editor\":{\"cursor\":\"line\",\"cursorBlink\":\"blink\",\"autoClosingBrackets\":\"languageDefined\",\"autoClosingQuotes\":\"languageDefined\",\"autoSurround\":\"languageDefined\",\"autoIndent\":false,\"fontLigatures\":false,\"scrollBeyondLastLine\":true,\"verticalScrollbarSize\":14,\"horizontalScrollbarSize\":10,\"fontSize\":14,\"fontFamily\":\"Consolas, 'Courier New', monospace\"},\"theme\":\"Default Light+\"},\"intellisenseOptions\":{\"quickSuggestions\":{\"other\":true,\"comments\":false,\"strings\":false},\"acceptSuggestionOnEnter\":\"on\",\"quickSuggestionsDelay\":10,\"suggestOnTriggerCharacters\":true,\"tabCompletion\":\"on\",\"suggestLocalityBonus\":true,\"suggestSelection\":\"recentlyUsed\",\"wordBasedSuggestions\":true,\"parameterHintsEnabled\":true}}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "loc_init",
            "payload": "{}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "loc_init",
            "payload": "{}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "load_all_cells",
            "payload": {
                "cells": [
                    {
                        "id": "NotebookImport#0",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "markdown",
                            "metadata": {},
                            "source": [
                                "# Prerequisites\n",
                                "pip install beakerx"
                            ]
                        }
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "4192613b8e8a400f8f1099299750f173"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "e3c83a0f0db348ac998202152e2cdfec"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "import random\n",
                                "from beakerx import *\n",
                                "dataH4 = []\n",
                                "\n",
                                "for x in range(1, 1100000):\n",
                                "  dataH4.append(random.gauss(0, 1))\n",
                                "\n",
                                "Histogram(data= dataH4, binCount= 10000)"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 27,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from beakerx import *\n",
                                "f5 = EasyForm(\"form5\")\n",
                                "f5.addTextArea(\"field name\", value = \"5initial value5\")\n",
                                "f5"
                            ]
                        }
                    }
                ]
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_settings",
            "payload": "{\"allowImportFromNotebook\":true,\"jupyterLaunchTimeout\":20000,\"jupyterLaunchRetries\":3,\"enabled\":true,\"jupyterServerURI\":\"local\",\"notebookFileRoot\":\"${fileDirname}\",\"changeDirOnImportExport\":false,\"useDefaultConfigForJupyter\":true,\"jupyterInterruptTimeout\":10000,\"searchForJupyter\":true,\"showCellInputCode\":true,\"collapseCellInputCodeByDefault\":true,\"allowInput\":true,\"maxOutputSize\":400,\"errorBackgroundColor\":\"#FFFFFF\",\"sendSelectionToInteractiveWindow\":false,\"codeRegularExpression\":\"^(#\\\\s*%%|#\\\\s*\\\\<codecell\\\\>|#\\\\s*In\\\\[\\\\d*?\\\\]|#\\\\s*In\\\\[ \\\\])\",\"markdownRegularExpression\":\"^(#\\\\s*%%\\\\s*\\\\[markdown\\\\]|#\\\\s*\\\\<markdowncell\\\\>)\",\"variableExplorerExclude\":\"module;function;builtin_function_or_method\",\"liveShareConnectionTimeout\":100,\"enablePlotViewer\":true,\"stopOnFirstLineWhileDebugging\":true,\"stopOnError\":true,\"addGotoCodeLenses\":true,\"enableCellCodeLens\":true,\"runStartupCommands\":\"\",\"debugJustMyCode\":true,\"variableQueries\":[],\"jupyterCommandLineArguments\":[],\"disableJupyterAutoStart\":true,\"extraSettings\":{\"editor\":{\"cursor\":\"line\",\"cursorBlink\":\"blink\",\"autoClosingBrackets\":\"languageDefined\",\"autoClosingQuotes\":\"languageDefined\",\"autoSurround\":\"languageDefined\",\"autoIndent\":false,\"fontLigatures\":false,\"scrollBeyondLastLine\":true,\"verticalScrollbarSize\":14,\"horizontalScrollbarSize\":10,\"fontSize\":14,\"fontFamily\":\"Consolas, 'Courier New', monospace\"},\"theme\":\"Default Light+\"},\"intellisenseOptions\":{\"quickSuggestions\":{\"other\":true,\"comments\":false,\"strings\":false},\"acceptSuggestionOnEnter\":\"on\",\"quickSuggestionsDelay\":10,\"suggestOnTriggerCharacters\":true,\"tabCompletion\":\"on\",\"suggestLocalityBonus\":true,\"suggestSelection\":\"recentlyUsed\",\"wordBasedSuggestions\":true,\"parameterHintsEnabled\":true}}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_settings",
            "payload": "{\"allowImportFromNotebook\":true,\"jupyterLaunchTimeout\":20000,\"jupyterLaunchRetries\":3,\"enabled\":true,\"jupyterServerURI\":\"local\",\"notebookFileRoot\":\"${fileDirname}\",\"changeDirOnImportExport\":false,\"useDefaultConfigForJupyter\":true,\"jupyterInterruptTimeout\":10000,\"searchForJupyter\":true,\"showCellInputCode\":true,\"collapseCellInputCodeByDefault\":true,\"allowInput\":true,\"maxOutputSize\":400,\"errorBackgroundColor\":\"#FFFFFF\",\"sendSelectionToInteractiveWindow\":false,\"codeRegularExpression\":\"^(#\\\\s*%%|#\\\\s*\\\\<codecell\\\\>|#\\\\s*In\\\\[\\\\d*?\\\\]|#\\\\s*In\\\\[ \\\\])\",\"markdownRegularExpression\":\"^(#\\\\s*%%\\\\s*\\\\[markdown\\\\]|#\\\\s*\\\\<markdowncell\\\\>)\",\"variableExplorerExclude\":\"module;function;builtin_function_or_method\",\"liveShareConnectionTimeout\":100,\"enablePlotViewer\":true,\"stopOnFirstLineWhileDebugging\":true,\"stopOnError\":true,\"addGotoCodeLenses\":true,\"enableCellCodeLens\":true,\"runStartupCommands\":\"\",\"debugJustMyCode\":true,\"variableQueries\":[],\"jupyterCommandLineArguments\":[],\"disableJupyterAutoStart\":true,\"extraSettings\":{\"editor\":{\"cursor\":\"line\",\"cursorBlink\":\"blink\",\"autoClosingBrackets\":\"languageDefined\",\"autoClosingQuotes\":\"languageDefined\",\"autoSurround\":\"languageDefined\",\"autoIndent\":false,\"fontLigatures\":false,\"scrollBeyondLastLine\":true,\"verticalScrollbarSize\":14,\"horizontalScrollbarSize\":10,\"fontSize\":14,\"fontFamily\":\"Consolas, 'Courier New', monospace\"},\"theme\":\"Default Light+\"},\"intellisenseOptions\":{\"quickSuggestions\":{\"other\":true,\"comments\":false,\"strings\":false},\"acceptSuggestionOnEnter\":\"on\",\"quickSuggestionsDelay\":10,\"suggestOnTriggerCharacters\":true,\"tabCompletion\":\"on\",\"suggestLocalityBonus\":true,\"suggestSelection\":\"recentlyUsed\",\"wordBasedSuggestions\":true,\"parameterHintsEnabled\":true}}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_Ready"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "started"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "loc_init",
            "payload": "{}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "loc_init",
            "payload": "{}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "load_all_cells",
            "payload": {
                "cells": [
                    {
                        "id": "NotebookImport#0",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "markdown",
                            "metadata": {},
                            "source": [
                                "# Prerequisites\n",
                                "pip install beakerx"
                            ]
                        }
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "4192613b8e8a400f8f1099299750f173"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "e3c83a0f0db348ac998202152e2cdfec"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "import random\n",
                                "from beakerx import *\n",
                                "dataH4 = []\n",
                                "\n",
                                "for x in range(1, 1100000):\n",
                                "  dataH4.append(random.gauss(0, 1))\n",
                                "\n",
                                "Histogram(data= dataH4, binCount= 10000)"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    {
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 27,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from beakerx import *\n",
                                "f5 = EasyForm(\"form5\")\n",
                                "f5.addTextArea(\"field name\", value = \"5initial value5\")\n",
                                "f5"
                            ]
                        }
                    }
                ]
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_settings",
            "payload": "{\"allowImportFromNotebook\":true,\"jupyterLaunchTimeout\":20000,\"jupyterLaunchRetries\":3,\"enabled\":true,\"jupyterServerURI\":\"local\",\"notebookFileRoot\":\"${fileDirname}\",\"changeDirOnImportExport\":false,\"useDefaultConfigForJupyter\":true,\"jupyterInterruptTimeout\":10000,\"searchForJupyter\":true,\"showCellInputCode\":true,\"collapseCellInputCodeByDefault\":true,\"allowInput\":true,\"maxOutputSize\":400,\"errorBackgroundColor\":\"#FFFFFF\",\"sendSelectionToInteractiveWindow\":false,\"codeRegularExpression\":\"^(#\\\\s*%%|#\\\\s*\\\\<codecell\\\\>|#\\\\s*In\\\\[\\\\d*?\\\\]|#\\\\s*In\\\\[ \\\\])\",\"markdownRegularExpression\":\"^(#\\\\s*%%\\\\s*\\\\[markdown\\\\]|#\\\\s*\\\\<markdowncell\\\\>)\",\"variableExplorerExclude\":\"module;function;builtin_function_or_method\",\"liveShareConnectionTimeout\":100,\"enablePlotViewer\":true,\"stopOnFirstLineWhileDebugging\":true,\"stopOnError\":true,\"addGotoCodeLenses\":true,\"enableCellCodeLens\":true,\"runStartupCommands\":\"\",\"debugJustMyCode\":true,\"variableQueries\":[],\"jupyterCommandLineArguments\":[],\"disableJupyterAutoStart\":true,\"extraSettings\":{\"editor\":{\"cursor\":\"line\",\"cursorBlink\":\"blink\",\"autoClosingBrackets\":\"languageDefined\",\"autoClosingQuotes\":\"languageDefined\",\"autoSurround\":\"languageDefined\",\"autoIndent\":false,\"fontLigatures\":false,\"scrollBeyondLastLine\":true,\"verticalScrollbarSize\":14,\"horizontalScrollbarSize\":10,\"fontSize\":14,\"fontFamily\":\"Consolas, 'Courier New', monospace\"},\"theme\":\"Default Light+\"},\"intellisenseOptions\":{\"quickSuggestions\":{\"other\":true,\"comments\":false,\"strings\":false},\"acceptSuggestionOnEnter\":\"on\",\"quickSuggestionsDelay\":10,\"suggestOnTriggerCharacters\":true,\"tabCompletion\":\"on\",\"suggestLocalityBonus\":true,\"suggestSelection\":\"recentlyUsed\",\"wordBasedSuggestions\":true,\"parameterHintsEnabled\":true}}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_settings",
            "payload": "{\"allowImportFromNotebook\":true,\"jupyterLaunchTimeout\":20000,\"jupyterLaunchRetries\":3,\"enabled\":true,\"jupyterServerURI\":\"local\",\"notebookFileRoot\":\"${fileDirname}\",\"changeDirOnImportExport\":false,\"useDefaultConfigForJupyter\":true,\"jupyterInterruptTimeout\":10000,\"searchForJupyter\":true,\"showCellInputCode\":true,\"collapseCellInputCodeByDefault\":true,\"allowInput\":true,\"maxOutputSize\":400,\"errorBackgroundColor\":\"#FFFFFF\",\"sendSelectionToInteractiveWindow\":false,\"codeRegularExpression\":\"^(#\\\\s*%%|#\\\\s*\\\\<codecell\\\\>|#\\\\s*In\\\\[\\\\d*?\\\\]|#\\\\s*In\\\\[ \\\\])\",\"markdownRegularExpression\":\"^(#\\\\s*%%\\\\s*\\\\[markdown\\\\]|#\\\\s*\\\\<markdowncell\\\\>)\",\"variableExplorerExclude\":\"module;function;builtin_function_or_method\",\"liveShareConnectionTimeout\":100,\"enablePlotViewer\":true,\"stopOnFirstLineWhileDebugging\":true,\"stopOnError\":true,\"addGotoCodeLenses\":true,\"enableCellCodeLens\":true,\"runStartupCommands\":\"\",\"debugJustMyCode\":true,\"variableQueries\":[],\"jupyterCommandLineArguments\":[],\"disableJupyterAutoStart\":true,\"extraSettings\":{\"editor\":{\"cursor\":\"line\",\"cursorBlink\":\"blink\",\"autoClosingBrackets\":\"languageDefined\",\"autoClosingQuotes\":\"languageDefined\",\"autoSurround\":\"languageDefined\",\"autoIndent\":false,\"fontLigatures\":false,\"scrollBeyondLastLine\":true,\"verticalScrollbarSize\":14,\"horizontalScrollbarSize\":10,\"fontSize\":14,\"fontFamily\":\"Consolas, 'Courier New', monospace\"},\"theme\":\"Default Light+\"},\"intellisenseOptions\":{\"quickSuggestions\":{\"other\":true,\"comments\":false,\"strings\":false},\"acceptSuggestionOnEnter\":\"on\",\"quickSuggestionsDelay\":10,\"suggestOnTriggerCharacters\":true,\"tabCompletion\":\"on\",\"suggestLocalityBonus\":true,\"suggestSelection\":\"recentlyUsed\",\"wordBasedSuggestions\":true,\"parameterHintsEnabled\":true}}"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_css_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_response",
            "payload": {
                "css": "\n:root {\n    --code-comment-color: #008000;\n    --code-numeric-color: #09885a;\n    --code-string-color: #a31515;\n    --code-variable-color: #001080;\n    --code-type-color: #267f99;\n    --code-font-family: Consolas, 'Courier New', monospace;\n    --code-font-size: 14px;\n}\n\n\n    :root {\n        --override-widget-background: #f3f3f3;\n        --override-foreground: #000000;\n        --override-background: #FFFFFF;\n        --override-selection-background: #add6ff;\n        --override-watermark-color: rgba(66, 66, 66, 0.75);\n        --override-tabs-background: #f3f3f3;\n        --override-progress-background: #0066bf;\n        --override-badge-background: #c4c4c4;\n        --override-lineHighlightBorder: #eeeeee;\n        --override-peek-background: #f2f8fc;\n    }\n\n",
                "theme": "Default Light+"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_response",
            "payload": {
                "theme": {
                    "base": "vs",
                    "inherit": true,
                    "rules": [
                        {
                            "token": "punctuation.definition.comment",
                            "foreground": "#008000"
                        },
                        {
                            "token": "punctuation.definition.string",
                            "foreground": "#a31515"
                        }
                    ],
                    "colors": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "load_onigasm_assembly_request"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "load_tmlanguage_request"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "load_onigasm_assembly_response",
            "payload": "<BLAH>"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "load_tmlanguage_response",
            "payload": "{\r\n    \"information_for_contributors\": [\r\n        \"This file has been converted from https://github.com/MagicStack/MagicPython/blob/master/grammars/MagicPython.tmLanguage\",\r\n        \"If you want to provide a fix or improvement, please create a pull request against the original repository.\",\r\n        \"Once accepted there, we are happy to receive an update request.\"\r\n    ],\r\n    \"version\": \"https://github.com/MagicStack/MagicPython/commit/8ff35b3e5fcde471fae62a57ea1ae1c7cd34c9fc\",\r\n    \"name\": \"MagicPython\",\r\n    \"scopeName\": \"source.python\",\r\n    \"patterns\": [\r\n        {\r\n            \"include\": \"#statement\"\r\n        },\r\n        {\r\n            \"include\": \"#expression\"\r\n        }\r\n    ],\r\n    \"repository\": {\r\n        \"impossible\": {\r\n            \"comment\": \"This is a special rule that should be used where no match is desired. It is not a good idea to match something like '1{0}' because in some cases that can result in infinite loops in token generation. So the rule instead matches and impossible expression to allow a match to fail and move to the next token.\",\r\n            \"match\": \"$.^\"\r\n        },\r\n        \"statement\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#import\"\r\n                },\r\n                {\r\n                    \"include\": \"#class-declaration\"\r\n                },\r\n                {\r\n                    \"include\": \"#function-declaration\"\r\n                },\r\n                {\r\n                    \"include\": \"#statement-keyword\"\r\n                },\r\n                {\r\n                    \"include\": \"#assignment-operator\"\r\n                },\r\n                {\r\n                    \"include\": \"#decorator\"\r\n                },\r\n                {\r\n                    \"include\": \"#docstring-statement\"\r\n                },\r\n                {\r\n                    \"include\": \"#semicolon\"\r\n                }\r\n            ]\r\n        },\r\n        \"semicolon\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"invalid.deprecated.semicolon.python\",\r\n                    \"match\": \"\\\\;$\"\r\n                }\r\n            ]\r\n        },\r\n        \"comments\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"comment.line.number-sign.python\",\r\n                    \"contentName\": \"meta.typehint.comment.python\",\r\n                    \"begin\": \"(?x)\\n  (?:\\n    \\\\# \\\\s* (type:)\\n    \\\\s*+ (?# we want `\\\\s*+` which is possessive quantifier since\\n             we do not actually want to backtrack when matching\\n             whitespace here)\\n    (?! $ | \\\\#)\\n  )\\n\",\r\n                    \"end\": \"(?:$|(?=\\\\#))\",\r\n                    \"beginCaptures\": {\r\n                        \"0\": {\r\n                            \"name\": \"meta.typehint.comment.python\"\r\n                        },\r\n                        \"1\": {\r\n                            \"name\": \"comment.typehint.directive.notation.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"name\": \"comment.typehint.ignore.notation.python\",\r\n                            \"match\": \"(?x)\\n  \\\\G ignore\\n  (?= \\\\s* (?: $ | \\\\#))\\n\"\r\n                        },\r\n                        {\r\n                            \"name\": \"comment.typehint.type.notation.python\",\r\n                            \"match\": \"(?x)\\n  (?<!\\\\.)\\\\b(\\n    bool | bytes | float | int | object | str\\n    | List | Dict | Iterable | Sequence | Set\\n    | FrozenSet | Callable | Union | Tuple\\n    | Any | None\\n  )\\\\b\\n\"\r\n                        },\r\n                        {\r\n                            \"name\": \"comment.typehint.punctuation.notation.python\",\r\n                            \"match\": \"([\\\\[\\\\]\\\\(\\\\),\\\\.\\\\=\\\\*]|(->))\"\r\n                        },\r\n                        {\r\n                            \"name\": \"comment.typehint.variable.notation.python\",\r\n                            \"match\": \"([[:alpha:]_]\\\\w*)\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"include\": \"#comments-base\"\r\n                }\r\n            ]\r\n        },\r\n        \"docstring-statement\": {\r\n            \"begin\": \"^(?=\\\\s*[rR]?(\\\\'\\\\'\\\\'|\\\\\\\"\\\\\\\"\\\\\\\"|\\\\'|\\\\\\\"))\",\r\n            \"comment\": \"the string either terminates correctly or by the beginning of a new line (this is for single line docstrings that aren't terminated) AND it's not followed by another docstring\",\r\n            \"end\": \"((?<=\\\\1)|^)(?!\\\\s*[rR]?(\\\\'\\\\'\\\\'|\\\\\\\"\\\\\\\"\\\\\\\"|\\\\'|\\\\\\\"))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#docstring\"\r\n                }\r\n            ]\r\n        },\r\n        \"docstring\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"string.quoted.docstring.multi.python\",\r\n                    \"begin\": \"(\\\\'\\\\'\\\\'|\\\\\\\"\\\\\\\"\\\\\\\")\",\r\n                    \"end\": \"(\\\\1)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.string.begin.python\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.string.end.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#docstring-prompt\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#codetags\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#docstring-guts-unicode\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"string.quoted.docstring.raw.multi.python\",\r\n                    \"begin\": \"([rR])(\\\\'\\\\'\\\\'|\\\\\\\"\\\\\\\"\\\\\\\")\",\r\n                    \"end\": \"(\\\\2)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.string.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"punctuation.definition.string.begin.python\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.string.end.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#string-consume-escape\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#docstring-prompt\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#codetags\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"string.quoted.docstring.single.python\",\r\n                    \"begin\": \"(\\\\'|\\\\\\\")\",\r\n                    \"end\": \"(\\\\1)|(\\\\n)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.string.begin.python\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.string.end.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.newline.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#codetags\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#docstring-guts-unicode\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"string.quoted.docstring.raw.single.python\",\r\n                    \"begin\": \"([rR])(\\\\'|\\\\\\\")\",\r\n                    \"end\": \"(\\\\2)|(\\\\n)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.string.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"punctuation.definition.string.begin.python\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.string.end.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.newline.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#string-consume-escape\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#codetags\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"docstring-guts-unicode\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#escape-sequence\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-line-continuation\"\r\n                }\r\n            ]\r\n        },\r\n        \"docstring-prompt\": {\r\n            \"match\": \"(?x)\\n  (?:\\n    (?:^|\\\\G) \\\\s* (?# '\\\\G' is necessary for ST)\\n    ((?:>>>|\\\\.\\\\.\\\\.) \\\\s) (?=\\\\s*\\\\S)\\n  )\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.control.flow.python\"\r\n                }\r\n            }\r\n        },\r\n        \"statement-keyword\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"storage.type.function.python\",\r\n                    \"match\": \"\\\\b((async\\\\s+)?\\\\s*def)\\\\b\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.control.flow.python\",\r\n                    \"comment\": \"if `as` is eventually followed by `:` or line continuation\\nit's probably control flow like:\\n    with foo as bar, \\\\\\n         Foo as Bar:\\n      try:\\n        do_stuff()\\n      except Exception as e:\\n        pass\\n\",\r\n                    \"match\": \"\\\\b(?<!\\\\.)as\\\\b(?=.*[:\\\\\\\\])\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.control.import.python\",\r\n                    \"comment\": \"other legal use of `as` is in an import\",\r\n                    \"match\": \"\\\\b(?<!\\\\.)as\\\\b\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.control.flow.python\",\r\n                    \"match\": \"(?x)\\n  \\\\b(?<!\\\\.)(\\n    async | continue | del | assert | break | finally | for\\n    | from | elif | else | if | except | pass | raise\\n    | return | try | while | with\\n  )\\\\b\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.modifier.declaration.python\",\r\n                    \"match\": \"(?x)\\n  \\\\b(?<!\\\\.)(\\n    global | nonlocal\\n  )\\\\b\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.class.python\",\r\n                    \"match\": \"\\\\b(?<!\\\\.)(class)\\\\b\"\r\n                }\r\n            ]\r\n        },\r\n        \"expression-bare\": {\r\n            \"comment\": \"valid Python expressions w/o comments and line continuation\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#backticks\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-anno\"\r\n                },\r\n                {\r\n                    \"include\": \"#literal\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp\"\r\n                },\r\n                {\r\n                    \"include\": \"#string\"\r\n                },\r\n                {\r\n                    \"include\": \"#lambda\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-operator\"\r\n                },\r\n                {\r\n                    \"include\": \"#operator\"\r\n                },\r\n                {\r\n                    \"include\": \"#curly-braces\"\r\n                },\r\n                {\r\n                    \"include\": \"#item-access\"\r\n                },\r\n                {\r\n                    \"include\": \"#list\"\r\n                },\r\n                {\r\n                    \"include\": \"#round-braces\"\r\n                },\r\n                {\r\n                    \"include\": \"#function-call\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-functions\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-types\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-exceptions\"\r\n                },\r\n                {\r\n                    \"include\": \"#magic-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#special-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#special-variables\"\r\n                },\r\n                {\r\n                    \"include\": \"#ellipsis\"\r\n                },\r\n                {\r\n                    \"include\": \"#punctuation\"\r\n                },\r\n                {\r\n                    \"include\": \"#line-continuation\"\r\n                }\r\n            ]\r\n        },\r\n        \"expression-base\": {\r\n            \"comment\": \"valid Python expressions with comments and line continuation\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#expression-bare\"\r\n                },\r\n                {\r\n                    \"include\": \"#line-continuation\"\r\n                }\r\n            ]\r\n        },\r\n        \"expression\": {\r\n            \"comment\": \"All valid Python expressions\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression-base\"\r\n                },\r\n                {\r\n                    \"include\": \"#member-access\"\r\n                },\r\n                {\r\n                    \"comment\": \"Tokenize identifiers to help linters\",\r\n                    \"match\": \"(?x) \\\\b ([[:alpha:]_]\\\\w*) \\\\b\"\r\n                }\r\n            ]\r\n        },\r\n        \"member-access\": {\r\n            \"begin\": \"(\\\\.)\\\\s*(?!\\\\.)\",\r\n            \"end\": \"(?x)\\n  # stop when you've just read non-whitespace followed by non-word\\n  # i.e. when finished reading an identifier or function call\\n  (?<=\\\\S)(?=\\\\W) |\\n  # stop when seeing the start of something that's not a word,\\n  # i.e. when seeing a non-identifier\\n  (^|(?<=\\\\s))(?=[^\\\\\\\\\\\\w\\\\s]) |\\n  $\\n\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.separator.period.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#function-call\"\r\n                },\r\n                {\r\n                    \"include\": \"#member-access-base\"\r\n                }\r\n            ]\r\n        },\r\n        \"member-access-base\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#magic-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-object-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#special-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#line-continuation\"\r\n                },\r\n                {\r\n                    \"include\": \"#item-access\"\r\n                }\r\n            ]\r\n        },\r\n        \"special-names\": {\r\n            \"name\": \"constant.other.caps.python\",\r\n            \"match\": \"(?x)\\n  \\\\b\\n    # we want to see \\\"enough\\\", meaning 2 or more upper-case\\n    # letters in the beginning of the constant\\n    #\\n    # for more details refer to:\\n    #   https://github.com/MagicStack/MagicPython/issues/42\\n    (\\n      _* [[:upper:]] [_\\\\d]* [[:upper:]]\\n    )\\n    [[:upper:]\\\\d]* (_\\\\w*)?\\n  \\\\b\\n\"\r\n        },\r\n        \"curly-braces\": {\r\n            \"begin\": \"\\\\{\",\r\n            \"end\": \"\\\\}\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.definition.dict.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.definition.dict.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"punctuation.separator.dict.python\",\r\n                    \"match\": \":\"\r\n                },\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"list\": {\r\n            \"begin\": \"\\\\[\",\r\n            \"end\": \"\\\\]\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.definition.list.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.definition.list.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"round-braces\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"\\\\)\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.parenthesis.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.parenthesis.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"line-continuation\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"match\": \"(\\\\\\\\)\\\\s*(\\\\S.*$\\\\n?)\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.separator.continuation.line.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.line.continuation.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"begin\": \"(\\\\\\\\)\\\\s*$\\\\n?\",\r\n                    \"end\": \"(?x)\\n  (?=^\\\\s*$)\\n  |\\n  (?! (\\\\s* [rR]? (\\\\'\\\\'\\\\'|\\\\\\\"\\\\\\\"\\\\\\\"|\\\\'|\\\\\\\"))\\n      |\\n      (\\\\G $)  (?# '\\\\G' is necessary for ST)\\n  )\\n\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.separator.continuation.line.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#regexp\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#string\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"assignment-operator\": {\r\n            \"name\": \"keyword.operator.assignment.python\",\r\n            \"match\": \"(?x)\\n     <<= | >>= | //= | \\\\*\\\\*=\\n    | \\\\+= | -= | /= | @=\\n    | \\\\*= | %= | ~= | \\\\^= | &= | \\\\|=\\n    | =(?!=)\\n\"\r\n        },\r\n        \"operator\": {\r\n            \"match\": \"(?x)\\n    \\\\b(?<!\\\\.)\\n      (?:\\n        (and | or | not | in | is)                         (?# 1)\\n        |\\n        (for | if | else | await | (?:yield(?:\\\\s+from)?))  (?# 2)\\n      )\\n    (?!\\\\s*:)\\\\b\\n\\n    | (<< | >> | & | \\\\| | \\\\^ | ~)                          (?# 3)\\n\\n    | (\\\\*\\\\* | \\\\* | \\\\+ | - | % | // | / | @)                (?# 4)\\n\\n    | (!= | == | >= | <= | < | >)                          (?# 5)\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.logical.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"keyword.control.flow.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"keyword.operator.bitwise.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"keyword.operator.arithmetic.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"keyword.operator.comparison.python\"\r\n                }\r\n            }\r\n        },\r\n        \"punctuation\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"punctuation.separator.colon.python\",\r\n                    \"match\": \":\"\r\n                },\r\n                {\r\n                    \"name\": \"punctuation.separator.element.python\",\r\n                    \"match\": \",\"\r\n                }\r\n            ]\r\n        },\r\n        \"literal\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"constant.language.python\",\r\n                    \"match\": \"\\\\b(True|False|None|NotImplemented|Ellipsis)\\\\b\"\r\n                },\r\n                {\r\n                    \"include\": \"#number\"\r\n                }\r\n            ]\r\n        },\r\n        \"number\": {\r\n            \"name\": \"constant.numeric.python\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#number-float\"\r\n                },\r\n                {\r\n                    \"include\": \"#number-dec\"\r\n                },\r\n                {\r\n                    \"include\": \"#number-hex\"\r\n                },\r\n                {\r\n                    \"include\": \"#number-oct\"\r\n                },\r\n                {\r\n                    \"include\": \"#number-bin\"\r\n                },\r\n                {\r\n                    \"include\": \"#number-long\"\r\n                },\r\n                {\r\n                    \"name\": \"invalid.illegal.name.python\",\r\n                    \"match\": \"\\\\b[0-9]+\\\\w+\"\r\n                }\r\n            ]\r\n        },\r\n        \"number-float\": {\r\n            \"name\": \"constant.numeric.float.python\",\r\n            \"match\": \"(?x)\\n  (?<! \\\\w)(?:\\n    (?:\\n      \\\\.[0-9](?: _?[0-9] )*\\n      |\\n      [0-9](?: _?[0-9] )* \\\\. [0-9](?: _?[0-9] )*\\n      |\\n      [0-9](?: _?[0-9] )* \\\\.\\n    ) (?: [eE][+-]?[0-9](?: _?[0-9] )* )?\\n    |\\n    [0-9](?: _?[0-9] )* (?: [eE][+-]?[0-9](?: _?[0-9] )* )\\n  )([jJ])?\\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.imaginary.number.python\"\r\n                }\r\n            }\r\n        },\r\n        \"number-dec\": {\r\n            \"name\": \"constant.numeric.dec.python\",\r\n            \"match\": \"(?x)\\n  (?<![\\\\w\\\\.])(?:\\n      [1-9](?: _?[0-9] )*\\n      |\\n      0+\\n      |\\n      [0-9](?: _?[0-9] )* ([jJ])\\n      |\\n      0 ([0-9]+)(?![eE\\\\.])\\n  )\\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.imaginary.number.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.dec.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"invalid.illegal.dec.python\"\r\n                }\r\n            }\r\n        },\r\n        \"number-hex\": {\r\n            \"name\": \"constant.numeric.hex.python\",\r\n            \"match\": \"(?x)\\n  (?<![\\\\w\\\\.])\\n    (0[xX]) (_?[0-9a-fA-F])+\\n  \\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.number.python\"\r\n                }\r\n            }\r\n        },\r\n        \"number-oct\": {\r\n            \"name\": \"constant.numeric.oct.python\",\r\n            \"match\": \"(?x)\\n  (?<![\\\\w\\\\.])\\n    (0[oO]) (_?[0-7])+\\n  \\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.number.python\"\r\n                }\r\n            }\r\n        },\r\n        \"number-bin\": {\r\n            \"name\": \"constant.numeric.bin.python\",\r\n            \"match\": \"(?x)\\n  (?<![\\\\w\\\\.])\\n    (0[bB]) (_?[01])+\\n  \\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.number.python\"\r\n                }\r\n            }\r\n        },\r\n        \"number-long\": {\r\n            \"name\": \"constant.numeric.bin.python\",\r\n            \"comment\": \"this is to support python2 syntax for long ints\",\r\n            \"match\": \"(?x)\\n  (?<![\\\\w\\\\.])\\n    ([1-9][0-9]* | 0) ([lL])\\n  \\\\b\\n\",\r\n            \"captures\": {\r\n                \"2\": {\r\n                    \"name\": \"storage.type.number.python\"\r\n                }\r\n            }\r\n        },\r\n        \"regexp\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-single-three-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-double-three-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-single-one-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-double-one-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fregexp-single-three-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fregexp-double-three-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fregexp-single-one-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fregexp-double-one-line\"\r\n                }\r\n            ]\r\n        },\r\n        \"string\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-quoted-single-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-bin-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-bin-quoted-single-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-raw-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-raw-quoted-single-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-raw-bin-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-raw-bin-quoted-single-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-fnorm-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-fnorm-quoted-single-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-normf-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-normf-quoted-single-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-raw-quoted-multi-line\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-raw-quoted-single-line\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-unicode-guts\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-entity\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-brace-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-consume-escape\": {\r\n            \"match\": \"\\\\\\\\['\\\"\\\\n\\\\\\\\]\"\r\n        },\r\n        \"string-raw-guts\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-formatting\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-brace-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-raw-bin-guts\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-entity\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-line-continuation\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-guts\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#escape-sequence\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-line-continuation\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-raw-guts\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-illegal-single-brace\": {\r\n            \"comment\": \"it is illegal to have a multiline brace inside a single-line string\",\r\n            \"begin\": \"(\\\\{)(?=[^\\\\n}]*$\\\\n?)\",\r\n            \"end\": \"(\\\\})|(?=\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-terminator-single\"\r\n                },\r\n                {\r\n                    \"include\": \"#f-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-illegal-multi-brace\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#impossible\"\r\n                }\r\n            ]\r\n        },\r\n        \"f-expression\": {\r\n            \"comment\": \"All valid Python expressions, except comments and line cont\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression-bare\"\r\n                },\r\n                {\r\n                    \"include\": \"#member-access\"\r\n                },\r\n                {\r\n                    \"comment\": \"Tokenize identifiers to help linters\",\r\n                    \"match\": \"(?x) \\\\b ([[:alpha:]_]\\\\w*) \\\\b\"\r\n                }\r\n            ]\r\n        },\r\n        \"escape-sequence-unicode\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"constant.character.escape.python\",\r\n                    \"match\": \"(?x)\\n  \\\\\\\\ (\\n        u[0-9A-Fa-f]{4}\\n        | U[0-9A-Fa-f]{8}\\n        | N\\\\{[\\\\w\\\\s]+?\\\\}\\n     )\\n\"\r\n                }\r\n            ]\r\n        },\r\n        \"escape-sequence\": {\r\n            \"name\": \"constant.character.escape.python\",\r\n            \"match\": \"(?x)\\n  \\\\\\\\ (\\n        x[0-9A-Fa-f]{2}\\n        | [0-7]{1,3}\\n        | [\\\\\\\\\\\"'abfnrtv]\\n     )\\n\"\r\n        },\r\n        \"string-line-continuation\": {\r\n            \"name\": \"constant.language.python\",\r\n            \"match\": \"\\\\\\\\$\"\r\n        },\r\n        \"string-formatting\": {\r\n            \"name\": \"meta.format.percent.python\",\r\n            \"match\": \"(?x)\\n  (\\n    % (\\\\([\\\\w\\\\s]*\\\\))?\\n      [-+#0 ]*\\n      (\\\\d+|\\\\*)? (\\\\.(\\\\d+|\\\\*))?\\n      ([hlL])?\\n      [diouxXeEfFgGcrsab%]\\n  )\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            }\r\n        },\r\n        \"string-brace-formatting\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"meta.format.brace.python\",\r\n                    \"match\": \"(?x)\\n  (\\n    {{ | }}\\n    | (?:\\n      {\\n        \\\\w* (\\\\.[[:alpha:]_]\\\\w* | \\\\[[^\\\\]'\\\"]+\\\\])*\\n        (![rsa])?\\n        ( : \\\\w? [<>=^]? [-+ ]? \\\\#?\\n          \\\\d* ,? (\\\\.\\\\d+)? [bcdeEfFgGnosxX%]? )?\\n      })\\n  )\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"constant.character.format.placeholder.other.python\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        },\r\n                        \"4\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"name\": \"meta.format.brace.python\",\r\n                    \"match\": \"(?x)\\n  (\\n    {\\n      \\\\w* (\\\\.[[:alpha:]_]\\\\w* | \\\\[[^\\\\]'\\\"]+\\\\])*\\n      (![rsa])?\\n      (:)\\n        [^'\\\"{}\\\\n]* (?:\\n          \\\\{ [^'\\\"}\\\\n]*? \\\\} [^'\\\"{}\\\\n]*\\n        )*\\n    }\\n  )\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"constant.character.format.placeholder.other.python\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        },\r\n                        \"4\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-formatting\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-formatting-braces\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-formatting-singe-brace\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-formatting-singe-brace\": {\r\n            \"name\": \"invalid.illegal.brace.python\",\r\n            \"match\": \"(}(?!}))\"\r\n        },\r\n        \"import\": {\r\n            \"comment\": \"Import statements used to correctly mark `from`, `import`, and `as`\\n\",\r\n            \"patterns\": [\r\n                {\r\n                    \"begin\": \"\\\\b(?<!\\\\.)(from)\\\\b(?=.+import)\",\r\n                    \"end\": \"$|(?=import)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"keyword.control.import.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"name\": \"punctuation.separator.period.python\",\r\n                            \"match\": \"\\\\.+\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#expression\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"begin\": \"\\\\b(?<!\\\\.)(import)\\\\b\",\r\n                    \"end\": \"$\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"keyword.control.import.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"name\": \"keyword.control.import.python\",\r\n                            \"match\": \"\\\\b(?<!\\\\.)as\\\\b\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#expression\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"class-declaration\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"meta.class.python\",\r\n                    \"begin\": \"(?x)\\n  \\\\s*(class)\\\\s+\\n    (?=\\n      [[:alpha:]_]\\\\w* \\\\s* (:|\\\\()\\n    )\\n\",\r\n                    \"end\": \"(:)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.class.python\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.section.class.begin.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#class-name\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#class-inheritance\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"class-name\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#illegal-object-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-possible-callables\"\r\n                },\r\n                {\r\n                    \"name\": \"entity.name.type.class.python\",\r\n                    \"match\": \"(?x)\\n  \\\\b ([[:alpha:]_]\\\\w*) \\\\b\\n\"\r\n                }\r\n            ]\r\n        },\r\n        \"class-inheritance\": {\r\n            \"name\": \"meta.class.inheritance.python\",\r\n            \"begin\": \"(\\\\()\",\r\n            \"end\": \"(\\\\))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.inheritance.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.inheritance.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"keyword.operator.unpacking.arguments.python\",\r\n                    \"match\": \"(\\\\*\\\\*|\\\\*)\"\r\n                },\r\n                {\r\n                    \"name\": \"punctuation.separator.inheritance.python\",\r\n                    \"match\": \",\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.operator.assignment.python\",\r\n                    \"match\": \"=(?!=)\"\r\n                },\r\n                {\r\n                    \"name\": \"support.type.metaclass.python\",\r\n                    \"match\": \"\\\\bmetaclass\\\\b\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#class-kwarg\"\r\n                },\r\n                {\r\n                    \"include\": \"#call-wrapper-inheritance\"\r\n                },\r\n                {\r\n                    \"include\": \"#expression-base\"\r\n                },\r\n                {\r\n                    \"include\": \"#member-access-class\"\r\n                },\r\n                {\r\n                    \"include\": \"#inheritance-identifier\"\r\n                }\r\n            ]\r\n        },\r\n        \"class-kwarg\": {\r\n            \"match\": \"(?x)\\n  \\\\b ([[:alpha:]_]\\\\w*) \\\\s*(=)(?!=)\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"entity.other.inherited-class.python variable.parameter.class.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"keyword.operator.assignment.python\"\r\n                }\r\n            }\r\n        },\r\n        \"inheritance-identifier\": {\r\n            \"match\": \"(?x)\\n  \\\\b ([[:alpha:]_]\\\\w*) \\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"entity.other.inherited-class.python\"\r\n                }\r\n            }\r\n        },\r\n        \"member-access-class\": {\r\n            \"begin\": \"(\\\\.)\\\\s*(?!\\\\.)\",\r\n            \"end\": \"(?<=\\\\S)(?=\\\\W)|$\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.separator.period.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#call-wrapper-inheritance\"\r\n                },\r\n                {\r\n                    \"include\": \"#member-access-base\"\r\n                },\r\n                {\r\n                    \"include\": \"#inheritance-identifier\"\r\n                }\r\n            ]\r\n        },\r\n        \"lambda\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"match\": \"((?<=\\\\.)lambda|lambda(?=\\\\s*[\\\\.=]))\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"keyword.control.flow.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"match\": \"\\\\b(lambda)\\\\s*?(?=[,\\\\n]|$)\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.function.lambda.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"name\": \"meta.lambda-function.python\",\r\n                    \"begin\": \"(?x)\\n  \\\\b (lambda) \\\\b\\n\",\r\n                    \"end\": \"(:)|(\\\\n)\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.function.lambda.python\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.section.function.lambda.begin.python\"\r\n                        }\r\n                    },\r\n                    \"contentName\": \"meta.function.lambda.parameters.python\",\r\n                    \"patterns\": [\r\n                        {\r\n                            \"name\": \"keyword.operator.unpacking.parameter.python\",\r\n                            \"match\": \"(\\\\*\\\\*|\\\\*)\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#lambda-nested-incomplete\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#illegal-names\"\r\n                        },\r\n                        {\r\n                            \"match\": \"([[:alpha:]_]\\\\w*)\\\\s*(?:(,)|(?=:|$))\",\r\n                            \"captures\": {\r\n                                \"1\": {\r\n                                    \"name\": \"variable.parameter.function.language.python\"\r\n                                },\r\n                                \"2\": {\r\n                                    \"name\": \"punctuation.separator.parameters.python\"\r\n                                }\r\n                            }\r\n                        },\r\n                        {\r\n                            \"include\": \"#comments\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#backticks\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#illegal-anno\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#lambda-parameter-with-default\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#line-continuation\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#illegal-operator\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"lambda-incomplete\": {\r\n            \"name\": \"storage.type.function.lambda.python\",\r\n            \"match\": \"\\\\blambda(?=\\\\s*[,)])\"\r\n        },\r\n        \"lambda-nested-incomplete\": {\r\n            \"name\": \"storage.type.function.lambda.python\",\r\n            \"match\": \"\\\\blambda(?=\\\\s*[:,)])\"\r\n        },\r\n        \"lambda-parameter-with-default\": {\r\n            \"begin\": \"(?x)\\n  \\\\b\\n  ([[:alpha:]_]\\\\w*) \\\\s* (=)\\n\",\r\n            \"end\": \"(,)|(?=:|$)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"variable.parameter.function.language.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"keyword.operator.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.separator.parameters.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"function-declaration\": {\r\n            \"name\": \"meta.function.python\",\r\n            \"begin\": \"(?x)\\n  \\\\s*\\n  (?:\\\\b(async) \\\\s+)? \\\\b(def)\\\\s+\\n    (?=\\n      [[:alpha:]_][[:word:]]* \\\\s* \\\\(\\n    )\\n\",\r\n            \"end\": \"(:|(?=[#'\\\"\\\\n]))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.function.async.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"storage.type.function.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.section.function.begin.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#function-def-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#parameters\"\r\n                },\r\n                {\r\n                    \"include\": \"#line-continuation\"\r\n                },\r\n                {\r\n                    \"include\": \"#return-annotation\"\r\n                }\r\n            ]\r\n        },\r\n        \"function-def-name\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#illegal-object-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-possible-callables\"\r\n                },\r\n                {\r\n                    \"name\": \"entity.name.function.python\",\r\n                    \"match\": \"(?x)\\n  \\\\b ([[:alpha:]_]\\\\w*) \\\\b\\n\"\r\n                }\r\n            ]\r\n        },\r\n        \"parameters\": {\r\n            \"name\": \"meta.function.parameters.python\",\r\n            \"begin\": \"(\\\\()\",\r\n            \"end\": \"(\\\\))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.parameters.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.parameters.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"keyword.operator.unpacking.parameter.python\",\r\n                    \"match\": \"(\\\\*\\\\*|\\\\*)\"\r\n                },\r\n                {\r\n                    \"include\": \"#lambda-incomplete\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-object-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#parameter-special\"\r\n                },\r\n                {\r\n                    \"match\": \"(?x)\\n  ([[:alpha:]_]\\\\w*)\\n    \\\\s* (?: (,) | (?=[)#\\\\n=]))\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"variable.parameter.function.language.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"punctuation.separator.parameters.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"include\": \"#comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#loose-default\"\r\n                },\r\n                {\r\n                    \"include\": \"#annotated-parameter\"\r\n                }\r\n            ]\r\n        },\r\n        \"parameter-special\": {\r\n            \"match\": \"(?x)\\n  \\\\b ((self)|(cls)) \\\\b \\\\s*(?:(,)|(?=\\\\)))\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"variable.parameter.function.language.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"variable.parameter.function.language.special.self.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"variable.parameter.function.language.special.cls.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"punctuation.separator.parameters.python\"\r\n                }\r\n            }\r\n        },\r\n        \"loose-default\": {\r\n            \"begin\": \"(=)\",\r\n            \"end\": \"(,)|(?=\\\\))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.separator.parameters.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"annotated-parameter\": {\r\n            \"begin\": \"(?x)\\n  \\\\b\\n  ([[:alpha:]_]\\\\w*) \\\\s* (:)\\n\",\r\n            \"end\": \"(,)|(?=\\\\))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"variable.parameter.function.language.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.separator.annotation.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.separator.parameters.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.operator.assignment.python\",\r\n                    \"match\": \"=(?!=)\"\r\n                }\r\n            ]\r\n        },\r\n        \"return-annotation\": {\r\n            \"begin\": \"(->)\",\r\n            \"end\": \"(?=:)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.separator.annotation.result.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"item-access\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"meta.item-access.python\",\r\n                    \"begin\": \"(?x)\\n  \\\\b(?=\\n    [[:alpha:]_]\\\\w* \\\\s* \\\\[\\n  )\\n\",\r\n                    \"end\": \"(\\\\])\",\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.arguments.end.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#item-name\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#item-index\"\r\n                        },\r\n                        {\r\n                            \"include\": \"#expression\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"item-name\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#special-variables\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-functions\"\r\n                },\r\n                {\r\n                    \"include\": \"#special-names\"\r\n                },\r\n                {\r\n                    \"match\": \"(?x)\\n  \\\\b ([[:alpha:]_]\\\\w*) \\\\b\\n\"\r\n                }\r\n            ]\r\n        },\r\n        \"item-index\": {\r\n            \"begin\": \"(\\\\[)\",\r\n            \"end\": \"(?=\\\\])\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.arguments.begin.python\"\r\n                }\r\n            },\r\n            \"contentName\": \"meta.item-access.arguments.python\",\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"punctuation.separator.slice.python\",\r\n                    \"match\": \":\"\r\n                },\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"decorator\": {\r\n            \"name\": \"meta.function.decorator.python\",\r\n            \"begin\": \"(?x)\\n  ^\\\\s*\\n  ((@)) \\\\s* (?=[[:alpha:]_]\\\\w*)\\n\",\r\n            \"end\": \"(?x)\\n  ( \\\\) )\\n    # trailing whitespace and comments are legal\\n    (?: (.*?) (?=\\\\s*(?:\\\\#|$)) )\\n  | (?=\\\\n|\\\\#)\\n\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"entity.name.function.decorator.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.decorator.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.arguments.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.decorator.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#decorator-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#function-arguments\"\r\n                }\r\n            ]\r\n        },\r\n        \"decorator-name\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#builtin-callables\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-object-name\"\r\n                },\r\n                {\r\n                    \"name\": \"entity.name.function.decorator.python\",\r\n                    \"match\": \"(?x)\\n  ([[:alpha:]_]\\\\w*) | (\\\\.)\\n\",\r\n                    \"captures\": {\r\n                        \"2\": {\r\n                            \"name\": \"punctuation.separator.period.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"include\": \"#line-continuation\"\r\n                },\r\n                {\r\n                    \"name\": \"invalid.illegal.decorator.python\",\r\n                    \"match\": \"(?x)\\n  \\\\s* ([^([:alpha:]\\\\s_\\\\.#\\\\\\\\] .*?) (?=\\\\#|$)\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"invalid.illegal.decorator.python\"\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        \"call-wrapper-inheritance\": {\r\n            \"comment\": \"same as a function call, but in inheritance context\",\r\n            \"name\": \"meta.function-call.python\",\r\n            \"begin\": \"(?x)\\n  \\\\b(?=\\n    ([[:alpha:]_]\\\\w*) \\\\s* (\\\\()\\n  )\\n\",\r\n            \"end\": \"(\\\\))\",\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.arguments.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#inheritance-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#function-arguments\"\r\n                }\r\n            ]\r\n        },\r\n        \"inheritance-name\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#lambda-incomplete\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-possible-callables\"\r\n                },\r\n                {\r\n                    \"include\": \"#inheritance-identifier\"\r\n                }\r\n            ]\r\n        },\r\n        \"function-call\": {\r\n            \"name\": \"meta.function-call.python\",\r\n            \"begin\": \"(?x)\\n  \\\\b(?=\\n    ([[:alpha:]_]\\\\w*) \\\\s* (\\\\()\\n  )\\n\",\r\n            \"end\": \"(\\\\))\",\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.arguments.end.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#special-variables\"\r\n                },\r\n                {\r\n                    \"include\": \"#function-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#function-arguments\"\r\n                }\r\n            ]\r\n        },\r\n        \"function-name\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#builtin-possible-callables\"\r\n                },\r\n                {\r\n                    \"comment\": \"Some color schemas support meta.function-call.generic scope\",\r\n                    \"name\": \"meta.function-call.generic.python\",\r\n                    \"match\": \"(?x)\\n  \\\\b ([[:alpha:]_]\\\\w*) \\\\b\\n\"\r\n                }\r\n            ]\r\n        },\r\n        \"function-arguments\": {\r\n            \"begin\": \"(\\\\()\",\r\n            \"end\": \"(?=\\\\))(?!\\\\)\\\\s*\\\\()\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.arguments.begin.python\"\r\n                }\r\n            },\r\n            \"contentName\": \"meta.function-call.arguments.python\",\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"punctuation.separator.arguments.python\",\r\n                    \"match\": \"(,)\"\r\n                },\r\n                {\r\n                    \"match\": \"(?x)\\n  (?:(?<=[,(])|^) \\\\s* (\\\\*{1,2})\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"keyword.operator.unpacking.arguments.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"include\": \"#lambda-incomplete\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-names\"\r\n                },\r\n                {\r\n                    \"match\": \"\\\\b([[:alpha:]_]\\\\w*)\\\\s*(=)(?!=)\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"variable.parameter.function-call.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"keyword.operator.assignment.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"name\": \"keyword.operator.assignment.python\",\r\n                    \"match\": \"=(?!=)\"\r\n                },\r\n                {\r\n                    \"include\": \"#expression\"\r\n                },\r\n                {\r\n                    \"match\": \"\\\\s*(\\\\))\\\\s*(\\\\()\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.definition.arguments.end.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"punctuation.definition.arguments.begin.python\"\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        \"builtin-callables\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#illegal-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#illegal-object-name\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-exceptions\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-functions\"\r\n                },\r\n                {\r\n                    \"include\": \"#builtin-types\"\r\n                }\r\n            ]\r\n        },\r\n        \"builtin-possible-callables\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#builtin-callables\"\r\n                },\r\n                {\r\n                    \"include\": \"#magic-names\"\r\n                }\r\n            ]\r\n        },\r\n        \"builtin-exceptions\": {\r\n            \"name\": \"support.type.exception.python\",\r\n            \"match\": \"(?x) (?<!\\\\.) \\\\b(\\n  (\\n    Arithmetic | Assertion | Attribute | Buffer | BlockingIO\\n    | BrokenPipe | ChildProcess\\n    | (Connection (Aborted | Refused | Reset)?)\\n    | EOF | Environment | FileExists | FileNotFound\\n    | FloatingPoint | IO | Import | Indentation | Index | Interrupted\\n    | IsADirectory | NotADirectory | Permission | ProcessLookup\\n    | Timeout\\n    | Key | Lookup | Memory | Name | NotImplemented | OS | Overflow\\n    | Reference | Runtime | Recursion | Syntax | System\\n    | Tab | Type | UnboundLocal | Unicode(Encode|Decode|Translate)?\\n    | Value | Windows | ZeroDivision | ModuleNotFound\\n  ) Error\\n|\\n  ((Pending)?Deprecation | Runtime | Syntax | User | Future | Import\\n    | Unicode | Bytes | Resource\\n  )? Warning\\n|\\n  SystemExit | Stop(Async)?Iteration\\n  | KeyboardInterrupt\\n  | GeneratorExit | (Base)?Exception\\n)\\\\b\\n\"\r\n        },\r\n        \"builtin-functions\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"support.function.builtin.python\",\r\n                    \"match\": \"(?x)\\n  (?<!\\\\.) \\\\b(\\n    __import__ | abs | all | any | ascii | bin | breakpoint | callable\\n    | chr | compile | copyright | credits | delattr | dir | divmod\\n    | enumerate | eval | exec | exit | filter | format | getattr\\n    | globals | hasattr | hash | help | hex | id | input\\n    | isinstance | issubclass | iter | len | license | locals | map\\n    | max | memoryview | min | next | oct | open | ord | pow | print\\n    | quit | range | reload | repr | reversed | round\\n    | setattr | sorted | sum | vars | zip\\n  )\\\\b\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"variable.legacy.builtin.python\",\r\n                    \"match\": \"(?x)\\n  (?<!\\\\.) \\\\b(\\n    file | reduce | intern | raw_input | unicode | cmp | basestring\\n    | execfile | long | xrange\\n  )\\\\b\\n\"\r\n                }\r\n            ]\r\n        },\r\n        \"builtin-types\": {\r\n            \"name\": \"support.type.python\",\r\n            \"match\": \"(?x)\\n  (?<!\\\\.) \\\\b(\\n    bool | bytearray | bytes | classmethod | complex | dict\\n    | float | frozenset | int | list | object | property\\n    | set | slice | staticmethod | str | tuple | type\\n\\n    (?# Although 'super' is not a type, it's related to types,\\n        and is special enough to be highlighted differently from\\n        other built-ins)\\n    | super\\n  )\\\\b\\n\"\r\n        },\r\n        \"magic-function-names\": {\r\n            \"comment\": \"these methods have magic interpretation by python and are generally called\\nindirectly through syntactic constructs\\n\",\r\n            \"match\": \"(?x)\\n  \\\\b(\\n    __(?:\\n      abs | add | aenter | aexit | aiter | and | anext | await\\n      | bool | call | ceil | cmp | coerce | complex | contains\\n      | copy | deepcopy | del | delattr | delete | delitem\\n      | delslice | dir | div | divmod | enter | eq | exit | float\\n      | floor | floordiv | format | ge | get | getattr\\n      | getattribute | getinitargs | getitem | getnewargs\\n      | getslice | getstate | gt | hash | hex | iadd | iand | idiv\\n      | ifloordiv | ilshift | imod | imul | index | init\\n      | instancecheck | int | invert | ior | ipow | irshift | isub\\n      | iter | itruediv | ixor | le | len | long | lshift | lt\\n      | missing | mod | mul | ne | neg | new | next | nonzero | oct | or\\n      | pos | pow | radd | rand | rdiv | rdivmod | reduce\\n      | reduce_ex | repr | reversed | rfloordiv | rlshift | rmod\\n      | rmul | ror | round | rpow | rrshift | rshift | rsub\\n      | rtruediv | rxor | set | setattr | setitem | setslice\\n      | setstate | sizeof | str | sub | subclasscheck | truediv\\n      | trunc | unicode | xor | matmul | rmatmul | imatmul\\n      | init_subclass | set_name | fspath | bytes | prepare\\n    )__\\n  )\\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.function.magic.python\"\r\n                }\r\n            }\r\n        },\r\n        \"magic-variable-names\": {\r\n            \"comment\": \"magic variables which a class/module may have.\",\r\n            \"match\": \"(?x)\\n  \\\\b(\\n    __(?:\\n      all | bases | builtins | class | class_getitem | code | debug\\n      | defaults | dict | doc | file | func | kwdefaults | members\\n      | metaclass | methods | module | mro | mro_entries | name\\n      | qualname | post_init | self | signature | slots | subclasses\\n      | version | weakref | wrapped | annotations | classcell\\n      | spec | path | package | future | traceback\\n    )__\\n  )\\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.variable.magic.python\"\r\n                }\r\n            }\r\n        },\r\n        \"magic-names\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#magic-function-names\"\r\n                },\r\n                {\r\n                    \"include\": \"#magic-variable-names\"\r\n                }\r\n            ]\r\n        },\r\n        \"illegal-names\": {\r\n            \"match\": \"(?x)\\n  \\\\b(?:\\n    (\\n      and | assert | async | await | break | class | continue | def\\n      | del | elif | else | except | finally | for | from | global\\n      | if | in | is | (?<=\\\\.)lambda | lambda(?=\\\\s*[\\\\.=])\\n      | nonlocal | not | or | pass | raise | return | try | while | with\\n      | yield\\n    ) | (\\n      as | import\\n    )\\n  )\\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.control.flow.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"keyword.control.import.python\"\r\n                }\r\n            }\r\n        },\r\n        \"special-variables\": {\r\n            \"match\": \"(?x)\\n  \\\\b (?<!\\\\.) (?:\\n    (self) | (cls)\\n  )\\\\b\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"variable.language.special.self.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"variable.language.special.cls.python\"\r\n                }\r\n            }\r\n        },\r\n        \"ellipsis\": {\r\n            \"name\": \"constant.other.ellipsis.python\",\r\n            \"match\": \"\\\\.\\\\.\\\\.\"\r\n        },\r\n        \"backticks\": {\r\n            \"name\": \"invalid.deprecated.backtick.python\",\r\n            \"begin\": \"\\\\`\",\r\n            \"end\": \"(?:\\\\`|(?<!\\\\\\\\)(\\\\n))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"illegal-operator\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"invalid.illegal.operator.python\",\r\n                    \"match\": \"&&|\\\\|\\\\||--|\\\\+\\\\+\"\r\n                },\r\n                {\r\n                    \"name\": \"invalid.illegal.operator.python\",\r\n                    \"match\": \"[?$]\"\r\n                },\r\n                {\r\n                    \"name\": \"invalid.illegal.operator.python\",\r\n                    \"comment\": \"We don't want `!` to flash when we're typing `!=`\",\r\n                    \"match\": \"!\\\\b\"\r\n                }\r\n            ]\r\n        },\r\n        \"illegal-object-name\": {\r\n            \"comment\": \"It's illegal to name class or function \\\"True\\\"\",\r\n            \"name\": \"keyword.illegal.name.python\",\r\n            \"match\": \"\\\\b(True|False|None)\\\\b\"\r\n        },\r\n        \"illegal-anno\": {\r\n            \"name\": \"invalid.illegal.annotation.python\",\r\n            \"match\": \"->\"\r\n        },\r\n        \"regexp-base-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-quantifier\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-base-common\"\r\n                }\r\n            ]\r\n        },\r\n        \"fregexp-base-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fregexp-quantifier\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-formatting-braces\"\r\n                },\r\n                {\r\n                    \"match\": \"\\\\{.*?\\\\}\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-base-common\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-formatting-braces\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"comment\": \"empty braces are illegal\",\r\n                    \"match\": \"({)(\\\\s*?)(})\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"constant.character.format.placeholder.other.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.brace.python\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"constant.character.format.placeholder.other.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"name\": \"constant.character.escape.python\",\r\n                    \"match\": \"({{|}})\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-base-common\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"support.other.match.any.regexp\",\r\n                    \"match\": \"\\\\.\"\r\n                },\r\n                {\r\n                    \"name\": \"support.other.match.begin.regexp\",\r\n                    \"match\": \"\\\\^\"\r\n                },\r\n                {\r\n                    \"name\": \"support.other.match.end.regexp\",\r\n                    \"match\": \"\\\\$\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.operator.quantifier.regexp\",\r\n                    \"match\": \"[+*?]\\\\??\"\r\n                },\r\n                {\r\n                    \"name\": \"keyword.operator.disjunction.regexp\",\r\n                    \"match\": \"\\\\|\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-sequence\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-quantifier\": {\r\n            \"name\": \"keyword.operator.quantifier.regexp\",\r\n            \"match\": \"(?x)\\n  \\\\{(\\n    \\\\d+ | \\\\d+,(\\\\d+)? | ,\\\\d+\\n  )\\\\}\\n\"\r\n        },\r\n        \"fregexp-quantifier\": {\r\n            \"name\": \"keyword.operator.quantifier.regexp\",\r\n            \"match\": \"(?x)\\n  \\\\{\\\\{(\\n    \\\\d+ | \\\\d+,(\\\\d+)? | ,\\\\d+\\n  )\\\\}\\\\}\\n\"\r\n        },\r\n        \"regexp-backreference-number\": {\r\n            \"name\": \"meta.backreference.regexp\",\r\n            \"match\": \"(\\\\\\\\[1-9]\\\\d?)\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"entity.name.tag.backreference.regexp\"\r\n                }\r\n            }\r\n        },\r\n        \"regexp-backreference\": {\r\n            \"name\": \"meta.backreference.named.regexp\",\r\n            \"match\": \"(?x)\\n  (\\\\()  (\\\\?P= \\\\w+(?:\\\\s+[[:alnum:]]+)?)  (\\\\))\\n\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.backreference.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.backreference.regexp\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.backreference.named.end.regexp\"\r\n                }\r\n            }\r\n        },\r\n        \"regexp-flags\": {\r\n            \"name\": \"storage.modifier.flag.regexp\",\r\n            \"match\": \"\\\\(\\\\?[aiLmsux]+\\\\)\"\r\n        },\r\n        \"regexp-escape-special\": {\r\n            \"name\": \"support.other.escape.special.regexp\",\r\n            \"match\": \"\\\\\\\\([AbBdDsSwWZ])\"\r\n        },\r\n        \"regexp-escape-character\": {\r\n            \"name\": \"constant.character.escape.regexp\",\r\n            \"match\": \"(?x)\\n  \\\\\\\\ (\\n        x[0-9A-Fa-f]{2}\\n        | 0[0-7]{1,2}\\n        | [0-7]{3}\\n     )\\n\"\r\n        },\r\n        \"regexp-escape-unicode\": {\r\n            \"name\": \"constant.character.unicode.regexp\",\r\n            \"match\": \"(?x)\\n  \\\\\\\\ (\\n        u[0-9A-Fa-f]{4}\\n        | U[0-9A-Fa-f]{8}\\n     )\\n\"\r\n        },\r\n        \"regexp-escape-catchall\": {\r\n            \"name\": \"constant.character.escape.regexp\",\r\n            \"match\": \"\\\\\\\\(.|\\\\n)\"\r\n        },\r\n        \"regexp-escape-sequence\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-escape-special\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-character\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference-number\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-catchall\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-charecter-set-escapes\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"constant.character.escape.regexp\",\r\n                    \"match\": \"\\\\\\\\[abfnrtv\\\\\\\\]\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-special\"\r\n                },\r\n                {\r\n                    \"name\": \"constant.character.escape.regexp\",\r\n                    \"match\": \"\\\\\\\\([0-7]{1,3})\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-character\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-escape-catchall\"\r\n                }\r\n            ]\r\n        },\r\n        \"codetags\": {\r\n            \"match\": \"(?:\\\\b(NOTE|XXX|HACK|FIXME|BUG|TODO)\\\\b)\",\r\n            \"captures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.codetag.notation.python\"\r\n                }\r\n            }\r\n        },\r\n        \"comments-base\": {\r\n            \"name\": \"comment.line.number-sign.python\",\r\n            \"begin\": \"(\\\\#)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.comment.python\"\r\n                }\r\n            },\r\n            \"end\": \"($)\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"comments-string-single-three\": {\r\n            \"name\": \"comment.line.number-sign.python\",\r\n            \"begin\": \"(\\\\#)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.comment.python\"\r\n                }\r\n            },\r\n            \"end\": \"($|(?='''))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"comments-string-double-three\": {\r\n            \"name\": \"comment.line.number-sign.python\",\r\n            \"begin\": \"(\\\\#)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.comment.python\"\r\n                }\r\n            },\r\n            \"end\": \"($|(?=\\\"\\\"\\\"))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-parentheses\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-character-set\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"match\": \"(?x)\\n  \\\\[ \\\\^? \\\\] (?! .*?\\\\])\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"meta.character.set.regexp\",\r\n                    \"begin\": \"(\\\\[)(\\\\^)?(\\\\])?\",\r\n                    \"end\": \"(\\\\]|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.begin.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"keyword.operator.negation.regexp\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"constant.character.set.regexp\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.end.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.newline.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#regexp-charecter-set-escapes\"\r\n                        },\r\n                        {\r\n                            \"name\": \"constant.character.set.regexp\",\r\n                            \"match\": \"[^\\\\n]\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-comments\": {\r\n            \"name\": \"comment.regexp\",\r\n            \"begin\": \"\\\\(\\\\?#\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.comment.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.comment.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-regexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-parentheses\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-character-set\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"match\": \"(?x)\\n  \\\\[ \\\\^? \\\\] (?! .*?\\\\])\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"meta.character.set.regexp\",\r\n                    \"begin\": \"(\\\\[)(\\\\^)?(\\\\])?\",\r\n                    \"end\": \"(\\\\]|(?=\\\\'\\\\'\\\\'))\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.begin.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"keyword.operator.negation.regexp\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"constant.character.set.regexp\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.end.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.newline.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#regexp-charecter-set-escapes\"\r\n                        },\r\n                        {\r\n                            \"name\": \"constant.character.set.regexp\",\r\n                            \"match\": \"[^\\\\n]\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-comments\": {\r\n            \"name\": \"comment.regexp\",\r\n            \"begin\": \"\\\\(\\\\?#\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.comment.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.comment.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-regexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-parentheses\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-character-set\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"match\": \"(?x)\\n  \\\\[ \\\\^? \\\\] (?! .*?\\\\])\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"meta.character.set.regexp\",\r\n                    \"begin\": \"(\\\\[)(\\\\^)?(\\\\])?\",\r\n                    \"end\": \"(\\\\]|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.begin.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"keyword.operator.negation.regexp\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"constant.character.set.regexp\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.end.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.newline.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#regexp-charecter-set-escapes\"\r\n                        },\r\n                        {\r\n                            \"name\": \"constant.character.set.regexp\",\r\n                            \"match\": \"[^\\\\n]\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-comments\": {\r\n            \"name\": \"comment.regexp\",\r\n            \"begin\": \"\\\\(\\\\?#\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.comment.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.comment.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-regexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#regexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-parentheses\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-character-set\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"match\": \"(?x)\\n  \\\\[ \\\\^? \\\\] (?! .*?\\\\])\\n\"\r\n                },\r\n                {\r\n                    \"name\": \"meta.character.set.regexp\",\r\n                    \"begin\": \"(\\\\[)(\\\\^)?(\\\\])?\",\r\n                    \"end\": \"(\\\\]|(?=\\\"\\\"\\\"))\",\r\n                    \"beginCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.begin.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"keyword.operator.negation.regexp\"\r\n                        },\r\n                        \"3\": {\r\n                            \"name\": \"constant.character.set.regexp\"\r\n                        }\r\n                    },\r\n                    \"endCaptures\": {\r\n                        \"1\": {\r\n                            \"name\": \"punctuation.character.set.end.regexp constant.other.set.regexp\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"invalid.illegal.newline.python\"\r\n                        }\r\n                    },\r\n                    \"patterns\": [\r\n                        {\r\n                            \"include\": \"#regexp-charecter-set-escapes\"\r\n                        },\r\n                        {\r\n                            \"name\": \"constant.character.set.regexp\",\r\n                            \"match\": \"[^\\\\n]\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-comments\": {\r\n            \"name\": \"comment.regexp\",\r\n            \"begin\": \"\\\\(\\\\?#\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"punctuation.comment.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.comment.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#codetags\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-regexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-single-one-line\": {\r\n            \"name\": \"string.regexp.quoted.single.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([bB]r)|(r[bB]?))(\\\\')\",\r\n            \"end\": \"(\\\\')|(?<!\\\\\\\\)(\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-single-three-line\": {\r\n            \"name\": \"string.regexp.quoted.multi.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([bB]r)|(r[bB]?))(\\\\'\\\\'\\\\')\",\r\n            \"end\": \"(\\\\'\\\\'\\\\')\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-double-one-line\": {\r\n            \"name\": \"string.regexp.quoted.single.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([bB]r)|(r[bB]?))(\\\")\",\r\n            \"end\": \"(\\\")|(?<!\\\\\\\\)(\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"regexp-double-three-line\": {\r\n            \"name\": \"string.regexp.quoted.multi.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([bB]r)|(r[bB]?))(\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\"\\\"\\\")\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-regexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fregexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-one-fregexp-parentheses\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-one-fregexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\\'))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fregexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#single-three-fregexp-parentheses\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"single-three-fregexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\\'\\\\'\\\\'))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-single-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fregexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-one-fregexp-parentheses\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-one-fregexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\"))|((?=(?<!\\\\\\\\)\\\\n))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-expression\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fregexp-base-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-character-set\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-comments\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-flags\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-regexp-named-group\"\r\n                },\r\n                {\r\n                    \"include\": \"#regexp-backreference\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-lookahead\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-lookahead-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-lookbehind\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-lookbehind-negative\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-conditional\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-parentheses-non-capturing\"\r\n                },\r\n                {\r\n                    \"include\": \"#double-three-fregexp-parentheses\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-named-group\": {\r\n            \"name\": \"meta.named.regexp\",\r\n            \"begin\": \"(?x)\\n  (\\\\()  (\\\\?P <\\\\w+(?:\\\\s+[[:alnum:]]+)?>)\\n\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.begin.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"entity.name.tag.named.group.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.named.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-lookahead\": {\r\n            \"begin\": \"(\\\\()\\\\?=\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-lookahead-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?!\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookahead.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookahead.negative.regexp punctuation.parenthesis.lookahead.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-lookbehind\": {\r\n            \"begin\": \"(\\\\()\\\\?<=\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-lookbehind-negative\": {\r\n            \"begin\": \"(\\\\()\\\\?<!\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.lookbehind.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.lookbehind.negative.regexp punctuation.parenthesis.lookbehind.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-conditional\": {\r\n            \"begin\": \"(\\\\()\\\\?\\\\((\\\\w+(?:\\\\s+[[:alnum:]]+)?|\\\\d+)\\\\)\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"keyword.operator.conditional.regexp\"\r\n                },\r\n                \"1\": {\r\n                    \"name\": \"punctuation.parenthesis.conditional.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"keyword.operator.conditional.negative.regexp punctuation.parenthesis.conditional.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-parentheses-non-capturing\": {\r\n            \"begin\": \"\\\\(\\\\?:\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.non-capturing.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"double-three-fregexp-parentheses\": {\r\n            \"begin\": \"\\\\(\",\r\n            \"end\": \"(\\\\)|(?=\\\"\\\"\\\"))\",\r\n            \"beginCaptures\": {\r\n                \"0\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.begin.regexp\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"support.other.parenthesis.regexp punctuation.parenthesis.end.regexp\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                },\r\n                {\r\n                    \"include\": \"#comments-string-double-three\"\r\n                }\r\n            ]\r\n        },\r\n        \"fregexp-single-one-line\": {\r\n            \"name\": \"string.interpolated.python string.regexp.quoted.single.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([fF]r)|(r[fF]?))(\\\\')\",\r\n            \"end\": \"(\\\\')|(?<!\\\\\\\\)(\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"fregexp-single-three-line\": {\r\n            \"name\": \"string.interpolated.python string.regexp.quoted.multi.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([fF]r)|(r[fF]?))(\\\\'\\\\'\\\\')\",\r\n            \"end\": \"(\\\\'\\\\'\\\\')\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#single-three-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"fregexp-double-one-line\": {\r\n            \"name\": \"string.interpolated.python string.regexp.quoted.single.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([fF]r)|(r[fF]?))(\\\")\",\r\n            \"end\": \"(\\\")|(?<!\\\\\\\\)(\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-one-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"fregexp-double-three-line\": {\r\n            \"name\": \"string.interpolated.python string.regexp.quoted.multi.python\",\r\n            \"begin\": \"\\\\b(([uU]r)|([fF]r)|(r[fF]?))(\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\"\\\"\\\")\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"5\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#double-three-fregexp-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-raw-quoted-single-line\": {\r\n            \"name\": \"string.quoted.raw.single.python\",\r\n            \"begin\": \"\\\\b(([uU]R)|(R))((['\\\"]))\",\r\n            \"end\": \"(\\\\4)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-single-bad-brace1-formatting-raw\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-single-bad-brace2-formatting-raw\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-raw-guts\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-bin-quoted-single-line\": {\r\n            \"name\": \"string.quoted.binary.single.python\",\r\n            \"begin\": \"(\\\\b[bB])((['\\\"]))\",\r\n            \"end\": \"(\\\\2)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-entity\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-raw-bin-quoted-single-line\": {\r\n            \"name\": \"string.quoted.raw.binary.single.python\",\r\n            \"begin\": \"(\\\\b(?:R[bB]|[bB]R))((['\\\"]))\",\r\n            \"end\": \"(\\\\2)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-raw-bin-guts\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-quoted-single-line\": {\r\n            \"name\": \"string.quoted.single.python\",\r\n            \"begin\": \"(?:\\\\b([rR])(?=[uU]))?([uU])?((['\\\"]))\",\r\n            \"end\": \"(\\\\3)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"invalid.illegal.prefix.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-single-bad-brace1-formatting-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-single-bad-brace2-formatting-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-unicode-guts\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-single-bad-brace1-formatting-unicode\": {\r\n            \"comment\": \"template using {% ... %}\",\r\n            \"begin\": \"(?x)\\n    (?= \\\\{%\\n          ( .*? (?!(['\\\"])|((?<!\\\\\\\\)\\\\n)) )\\n        %\\\\}\\n    )\\n\",\r\n            \"end\": \"(?=(['\\\"])|((?<!\\\\\\\\)\\\\n))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#escape-sequence\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-line-continuation\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-single-bad-brace1-formatting-raw\": {\r\n            \"comment\": \"template using {% ... %}\",\r\n            \"begin\": \"(?x)\\n    (?= \\\\{%\\n          ( .*? (?!(['\\\"])|((?<!\\\\\\\\)\\\\n)) )\\n        %\\\\}\\n    )\\n\",\r\n            \"end\": \"(?=(['\\\"])|((?<!\\\\\\\\)\\\\n))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-single-bad-brace2-formatting-unicode\": {\r\n            \"comment\": \"odd format or format-like syntax\",\r\n            \"begin\": \"(?x)\\n    (?!\\\\{\\\\{)\\n    (?= \\\\{ (\\n              \\\\w*? (?!(['\\\"])|((?<!\\\\\\\\)\\\\n)) [^!:\\\\.\\\\[}\\\\w]\\n           )\\n        .*?(?!(['\\\"])|((?<!\\\\\\\\)\\\\n))\\n        \\\\}\\n    )\\n\",\r\n            \"end\": \"(?=(['\\\"])|((?<!\\\\\\\\)\\\\n))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-entity\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-single-bad-brace2-formatting-raw\": {\r\n            \"comment\": \"odd format or format-like syntax\",\r\n            \"begin\": \"(?x)\\n    (?!\\\\{\\\\{)\\n    (?= \\\\{ (\\n              \\\\w*? (?!(['\\\"])|((?<!\\\\\\\\)\\\\n)) [^!:\\\\.\\\\[}\\\\w]\\n           )\\n        .*?(?!(['\\\"])|((?<!\\\\\\\\)\\\\n))\\n        \\\\}\\n    )\\n\",\r\n            \"end\": \"(?=(['\\\"])|((?<!\\\\\\\\)\\\\n))\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-raw-quoted-multi-line\": {\r\n            \"name\": \"string.quoted.raw.multi.python\",\r\n            \"begin\": \"\\\\b(([uU]R)|(R))('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\4)\",\r\n            \"beginCaptures\": {\r\n                \"2\": {\r\n                    \"name\": \"invalid.deprecated.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"4\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-multi-bad-brace1-formatting-raw\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-multi-bad-brace2-formatting-raw\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-raw-guts\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-bin-quoted-multi-line\": {\r\n            \"name\": \"string.quoted.binary.multi.python\",\r\n            \"begin\": \"(\\\\b[bB])('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\2)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-entity\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-raw-bin-quoted-multi-line\": {\r\n            \"name\": \"string.quoted.raw.binary.multi.python\",\r\n            \"begin\": \"(\\\\b(?:R[bB]|[bB]R))('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\2)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-raw-bin-guts\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-quoted-multi-line\": {\r\n            \"name\": \"string.quoted.multi.python\",\r\n            \"begin\": \"(?:\\\\b([rR])(?=[uU]))?([uU])?('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\3)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"invalid.illegal.prefix.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"storage.type.string.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-multi-bad-brace1-formatting-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-multi-bad-brace2-formatting-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-unicode-guts\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-multi-bad-brace1-formatting-unicode\": {\r\n            \"comment\": \"template using {% ... %}\",\r\n            \"begin\": \"(?x)\\n    (?= \\\\{%\\n          ( .*? (?!'''|\\\"\\\"\\\") )\\n        %\\\\}\\n    )\\n\",\r\n            \"end\": \"(?='''|\\\"\\\"\\\")\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#escape-sequence\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-line-continuation\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-multi-bad-brace1-formatting-raw\": {\r\n            \"comment\": \"template using {% ... %}\",\r\n            \"begin\": \"(?x)\\n    (?= \\\\{%\\n          ( .*? (?!'''|\\\"\\\"\\\") )\\n        %\\\\}\\n    )\\n\",\r\n            \"end\": \"(?='''|\\\"\\\"\\\")\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-multi-bad-brace2-formatting-unicode\": {\r\n            \"comment\": \"odd format or format-like syntax\",\r\n            \"begin\": \"(?x)\\n    (?!\\\\{\\\\{)\\n    (?= \\\\{ (\\n              \\\\w*? (?!'''|\\\"\\\"\\\") [^!:\\\\.\\\\[}\\\\w]\\n           )\\n        .*?(?!'''|\\\"\\\"\\\")\\n        \\\\}\\n    )\\n\",\r\n            \"end\": \"(?='''|\\\"\\\"\\\")\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#escape-sequence-unicode\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-entity\"\r\n                }\r\n            ]\r\n        },\r\n        \"string-multi-bad-brace2-formatting-raw\": {\r\n            \"comment\": \"odd format or format-like syntax\",\r\n            \"begin\": \"(?x)\\n    (?!\\\\{\\\\{)\\n    (?= \\\\{ (\\n              \\\\w*? (?!'''|\\\"\\\"\\\") [^!:\\\\.\\\\[}\\\\w]\\n           )\\n        .*?(?!'''|\\\"\\\"\\\")\\n        \\\\}\\n    )\\n\",\r\n            \"end\": \"(?='''|\\\"\\\"\\\")\",\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#string-consume-escape\"\r\n                },\r\n                {\r\n                    \"include\": \"#string-formatting\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-fnorm-quoted-single-line\": {\r\n            \"name\": \"meta.fstring.python\",\r\n            \"begin\": \"(\\\\b[fF])([bBuU])?((['\\\"]))\",\r\n            \"end\": \"(\\\\3)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"string.interpolated.python string.quoted.single.python storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python string.interpolated.python string.quoted.single.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python string.interpolated.python string.quoted.single.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-guts\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-illegal-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-single-core\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-normf-quoted-single-line\": {\r\n            \"name\": \"meta.fstring.python\",\r\n            \"begin\": \"(\\\\b[bBuU])([fF])((['\\\"]))\",\r\n            \"end\": \"(\\\\3)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"invalid.illegal.prefix.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"string.interpolated.python string.quoted.single.python storage.type.string.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python string.quoted.single.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python string.interpolated.python string.quoted.single.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-guts\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-illegal-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-single-core\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-raw-quoted-single-line\": {\r\n            \"name\": \"meta.fstring.python\",\r\n            \"begin\": \"(\\\\b(?:[R][fF]|[fF][R]))((['\\\"]))\",\r\n            \"end\": \"(\\\\2)|((?<!\\\\\\\\)\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"string.interpolated.python string.quoted.raw.single.python storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python string.quoted.raw.single.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python string.interpolated.python string.quoted.raw.single.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-raw-guts\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-illegal-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-raw-single-core\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-single-core\": {\r\n            \"name\": \"string.interpolated.python string.quoted.single.python\",\r\n            \"match\": \"(?x)\\n  (.+?)\\n    (\\n      (?# .* and .*? in multi-line match need special handling of\\n        newlines otherwise SublimeText and Atom will match slightly\\n        differently.\\n\\n        The guard for newlines has to be separate from the\\n        lookahead because of special $ matching rule.)\\n      ($\\\\n?)\\n      |\\n      (?=[\\\\\\\\\\\\}\\\\{]|(['\\\"])|((?<!\\\\\\\\)\\\\n))\\n    )\\n  (?# due to how multiline regexps are matched we need a special case\\n    for matching a newline character)\\n  | \\\\n\\n\"\r\n        },\r\n        \"fstring-raw-single-core\": {\r\n            \"name\": \"string.interpolated.python string.quoted.raw.single.python\",\r\n            \"match\": \"(?x)\\n  (.+?)\\n    (\\n      (?# .* and .*? in multi-line match need special handling of\\n        newlines otherwise SublimeText and Atom will match slightly\\n        differently.\\n\\n        The guard for newlines has to be separate from the\\n        lookahead because of special $ matching rule.)\\n      ($\\\\n?)\\n      |\\n      (?=[\\\\\\\\\\\\}\\\\{]|(['\\\"])|((?<!\\\\\\\\)\\\\n))\\n    )\\n  (?# due to how multiline regexps are matched we need a special case\\n    for matching a newline character)\\n  | \\\\n\\n\"\r\n        },\r\n        \"fstring-single-brace\": {\r\n            \"comment\": \"value interpolation using { ... }\",\r\n            \"begin\": \"(\\\\{)\",\r\n            \"end\": \"(?x)\\n  (\\\\})|(?=\\\\n)\\n\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-terminator-single\"\r\n                },\r\n                {\r\n                    \"include\": \"#f-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-terminator-single\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(![rsa])(?=})\"\r\n                },\r\n                {\r\n                    \"match\": \"(?x)\\n  (![rsa])?\\n    ( : \\\\w? [<>=^]? [-+ ]? \\\\#?\\n      \\\\d* ,? (\\\\.\\\\d+)? [bcdeEfFgGnosxX%]? )(?=})\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-terminator-single-tail\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-terminator-single-tail\": {\r\n            \"begin\": \"(![rsa])?(:)(?=.*?{)\",\r\n            \"end\": \"(?=})|(?=\\\\n)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.format.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"storage.type.format.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-illegal-single-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-single-brace\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"([bcdeEfFgGnosxX%])(?=})\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\.\\\\d+)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(,)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\d+)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\#)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"([-+ ])\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"([<>=^])\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\w)\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-fnorm-quoted-multi-line\": {\r\n            \"name\": \"meta.fstring.python\",\r\n            \"begin\": \"(\\\\b[fF])([bBuU])?('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\3)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"string.interpolated.python string.quoted.multi.python storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.prefix.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python string.interpolated.python string.quoted.multi.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python string.interpolated.python string.quoted.multi.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-guts\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-illegal-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-multi-core\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-normf-quoted-multi-line\": {\r\n            \"name\": \"meta.fstring.python\",\r\n            \"begin\": \"(\\\\b[bBuU])([fF])('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\3)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"invalid.illegal.prefix.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"string.interpolated.python string.quoted.multi.python storage.type.string.python\"\r\n                },\r\n                \"3\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python string.quoted.multi.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python string.interpolated.python string.quoted.multi.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-guts\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-illegal-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-multi-core\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-raw-quoted-multi-line\": {\r\n            \"name\": \"meta.fstring.python\",\r\n            \"begin\": \"(\\\\b(?:[R][fF]|[fF][R]))('''|\\\"\\\"\\\")\",\r\n            \"end\": \"(\\\\2)\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"string.interpolated.python string.quoted.raw.multi.python storage.type.string.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"punctuation.definition.string.begin.python string.quoted.raw.multi.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"punctuation.definition.string.end.python string.interpolated.python string.quoted.raw.multi.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"invalid.illegal.newline.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-raw-guts\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-illegal-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-raw-multi-core\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-multi-core\": {\r\n            \"name\": \"string.interpolated.python string.quoted.multi.python\",\r\n            \"match\": \"(?x)\\n  (.+?)\\n    (\\n      (?# .* and .*? in multi-line match need special handling of\\n        newlines otherwise SublimeText and Atom will match slightly\\n        differently.\\n\\n        The guard for newlines has to be separate from the\\n        lookahead because of special $ matching rule.)\\n      ($\\\\n?)\\n      |\\n      (?=[\\\\\\\\\\\\}\\\\{]|'''|\\\"\\\"\\\")\\n    )\\n  (?# due to how multiline regexps are matched we need a special case\\n    for matching a newline character)\\n  | \\\\n\\n\"\r\n        },\r\n        \"fstring-raw-multi-core\": {\r\n            \"name\": \"string.interpolated.python string.quoted.raw.multi.python\",\r\n            \"match\": \"(?x)\\n  (.+?)\\n    (\\n      (?# .* and .*? in multi-line match need special handling of\\n        newlines otherwise SublimeText and Atom will match slightly\\n        differently.\\n\\n        The guard for newlines has to be separate from the\\n        lookahead because of special $ matching rule.)\\n      ($\\\\n?)\\n      |\\n      (?=[\\\\\\\\\\\\}\\\\{]|'''|\\\"\\\"\\\")\\n    )\\n  (?# due to how multiline regexps are matched we need a special case\\n    for matching a newline character)\\n  | \\\\n\\n\"\r\n        },\r\n        \"fstring-multi-brace\": {\r\n            \"comment\": \"value interpolation using { ... }\",\r\n            \"begin\": \"(\\\\{)\",\r\n            \"end\": \"(?x)\\n  (\\\\})\\n\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            },\r\n            \"endCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"constant.character.format.placeholder.other.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-terminator-multi\"\r\n                },\r\n                {\r\n                    \"include\": \"#f-expression\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-terminator-multi\": {\r\n            \"patterns\": [\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(![rsa])(?=})\"\r\n                },\r\n                {\r\n                    \"match\": \"(?x)\\n  (![rsa])?\\n    ( : \\\\w? [<>=^]? [-+ ]? \\\\#?\\n      \\\\d* ,? (\\\\.\\\\d+)? [bcdeEfFgGnosxX%]? )(?=})\\n\",\r\n                    \"captures\": {\r\n                        \"1\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        },\r\n                        \"2\": {\r\n                            \"name\": \"storage.type.format.python\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-terminator-multi-tail\"\r\n                }\r\n            ]\r\n        },\r\n        \"fstring-terminator-multi-tail\": {\r\n            \"begin\": \"(![rsa])?(:)(?=.*?{)\",\r\n            \"end\": \"(?=})\",\r\n            \"beginCaptures\": {\r\n                \"1\": {\r\n                    \"name\": \"storage.type.format.python\"\r\n                },\r\n                \"2\": {\r\n                    \"name\": \"storage.type.format.python\"\r\n                }\r\n            },\r\n            \"patterns\": [\r\n                {\r\n                    \"include\": \"#fstring-illegal-multi-brace\"\r\n                },\r\n                {\r\n                    \"include\": \"#fstring-multi-brace\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"([bcdeEfFgGnosxX%])(?=})\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\.\\\\d+)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(,)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\d+)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\#)\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"([-+ ])\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"([<>=^])\"\r\n                },\r\n                {\r\n                    \"name\": \"storage.type.format.python\",\r\n                    \"match\": \"(\\\\w)\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}\r\n"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.editor_loaded",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_response",
            "payload": {
                "css": "\n:root {\n    --code-comment-color: #008000;\n    --code-numeric-color: #09885a;\n    --code-string-color: #a31515;\n    --code-variable-color: #001080;\n    --code-type-color: #267f99;\n    --code-font-family: Consolas, 'Courier New', monospace;\n    --code-font-size: 14px;\n}\n\n\n    :root {\n        --override-widget-background: #f3f3f3;\n        --override-foreground: #000000;\n        --override-background: #FFFFFF;\n        --override-selection-background: #add6ff;\n        --override-watermark-color: rgba(66, 66, 66, 0.75);\n        --override-tabs-background: #f3f3f3;\n        --override-progress-background: #0066bf;\n        --override-badge-background: #c4c4c4;\n        --override-lineHighlightBorder: #eeeeee;\n        --override-peek-background: #f2f8fc;\n    }\n\n",
                "theme": "Default Light+"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_response",
            "payload": {
                "theme": {
                    "base": "vs",
                    "inherit": true,
                    "rules": [
                        {
                            "token": "punctuation.definition.comment",
                            "foreground": "#008000"
                        },
                        {
                            "token": "punctuation.definition.string",
                            "foreground": "#a31515"
                        }
                    ],
                    "colors": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "send_info",
            "payload": {
                "cellCount": 4,
                "undoCount": 0,
                "redoCount": 0
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_response",
            "payload": {
                "css": "\n:root {\n    --code-comment-color: #008000;\n    --code-numeric-color: #09885a;\n    --code-string-color: #a31515;\n    --code-variable-color: #001080;\n    --code-type-color: #267f99;\n    --code-font-family: Consolas, 'Courier New', monospace;\n    --code-font-size: 14px;\n}\n\n\n    :root {\n        --override-widget-background: #f3f3f3;\n        --override-foreground: #000000;\n        --override-background: #FFFFFF;\n        --override-selection-background: #add6ff;\n        --override-watermark-color: rgba(66, 66, 66, 0.75);\n        --override-tabs-background: #f3f3f3;\n        --override-progress-background: #0066bf;\n        --override-badge-background: #c4c4c4;\n        --override-lineHighlightBorder: #eeeeee;\n        --override-peek-background: #f2f8fc;\n    }\n\n",
                "theme": "Default Light+"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_response",
            "payload": {
                "theme": {
                    "base": "vs",
                    "inherit": true,
                    "rules": [
                        {
                            "token": "punctuation.definition.comment",
                            "foreground": "#008000"
                        },
                        {
                            "token": "punctuation.definition.string",
                            "foreground": "#a31515"
                        }
                    ],
                    "colors": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_css_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_response",
            "payload": {
                "css": "\n:root {\n    --code-comment-color: #008000;\n    --code-numeric-color: #09885a;\n    --code-string-color: #a31515;\n    --code-variable-color: #001080;\n    --code-type-color: #267f99;\n    --code-font-family: Consolas, 'Courier New', monospace;\n    --code-font-size: 14px;\n}\n\n\n    :root {\n        --override-widget-background: #f3f3f3;\n        --override-foreground: #000000;\n        --override-background: #FFFFFF;\n        --override-selection-background: #add6ff;\n        --override-watermark-color: rgba(66, 66, 66, 0.75);\n        --override-tabs-background: #f3f3f3;\n        --override-progress-background: #0066bf;\n        --override-badge-background: #c4c4c4;\n        --override-lineHighlightBorder: #eeeeee;\n        --override-peek-background: #f2f8fc;\n    }\n\n",
                "theme": "Default Light+"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_response",
            "payload": {
                "theme": {
                    "base": "vs",
                    "inherit": true,
                    "rules": [
                        {
                            "token": "punctuation.definition.comment",
                            "foreground": "#008000"
                        },
                        {
                            "token": "punctuation.definition.string",
                            "foreground": "#a31515"
                        }
                    ],
                    "colors": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_css_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_response",
            "payload": {
                "css": "\n:root {\n    --code-comment-color: #008000;\n    --code-numeric-color: #09885a;\n    --code-string-color: #a31515;\n    --code-variable-color: #001080;\n    --code-type-color: #267f99;\n    --code-font-family: Consolas, 'Courier New', monospace;\n    --code-font-size: 14px;\n}\n\n\n    :root {\n        --override-widget-background: #f3f3f3;\n        --override-foreground: #000000;\n        --override-background: #FFFFFF;\n        --override-selection-background: #add6ff;\n        --override-watermark-color: rgba(66, 66, 66, 0.75);\n        --override-tabs-background: #f3f3f3;\n        --override-progress-background: #0066bf;\n        --override-badge-background: #c4c4c4;\n        --override-lineHighlightBorder: #eeeeee;\n        --override-peek-background: #f2f8fc;\n    }\n\n",
                "theme": "Default Light+"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_response",
            "payload": {
                "theme": {
                    "base": "vs",
                    "inherit": true,
                    "rules": [
                        {
                            "token": "punctuation.definition.comment",
                            "foreground": "#008000"
                        },
                        {
                            "token": "punctuation.definition.string",
                            "foreground": "#a31515"
                        }
                    ],
                    "colors": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_css_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_css_response",
            "payload": {
                "css": "\n:root {\n    --code-comment-color: #008000;\n    --code-numeric-color: #09885a;\n    --code-string-color: #a31515;\n    --code-variable-color: #001080;\n    --code-type-color: #267f99;\n    --code-font-family: Consolas, 'Courier New', monospace;\n    --code-font-size: 14px;\n}\n\n\n    :root {\n        --override-widget-background: #f3f3f3;\n        --override-foreground: #000000;\n        --override-background: #FFFFFF;\n        --override-selection-background: #add6ff;\n        --override-watermark-color: rgba(66, 66, 66, 0.75);\n        --override-tabs-background: #f3f3f3;\n        --override-progress-background: #0066bf;\n        --override-badge-background: #c4c4c4;\n        --override-lineHighlightBorder: #eeeeee;\n        --override-peek-background: #f2f8fc;\n    }\n\n",
                "theme": "Default Light+"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_request",
            "payload": {
                "isDark": false
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "get_monaco_theme_response",
            "payload": {
                "theme": {
                    "base": "vs",
                    "inherit": true,
                    "rules": [
                        {
                            "token": "punctuation.definition.comment",
                            "foreground": "#008000"
                        },
                        {
                            "token": "punctuation.definition.string",
                            "foreground": "#a31515"
                        }
                    ],
                    "colors": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_loc_init",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "settings_updated"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_settings",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_loc_init",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_loc_init",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "rendered_execution",
            "payload": {
                "ids": [
                    "NotebookImport#0",
                    "NotebookImport#1",
                    "NotebookImport#2",
                    "NotebookImport#3"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_load_all_cells",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_settings",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_settings",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_loc_init",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_loc_init",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_load_all_cells",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_settings",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_settings",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "load_all_cells_complete",
            "payload": {
                "cells": [
                    {
                        "id": "NotebookImport#0",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "markdown",
                            "metadata": {},
                            "source": [
                                "# Prerequisites\n",
                                "pip install beakerx"
                            ]
                        }
                    },
                    {
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 25,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        }
                    },
                    {
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 26,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "import random\n",
                                "from beakerx import *\n",
                                "dataH4 = []\n",
                                "\n",
                                "for x in range(1, 1100000):\n",
                                "  dataH4.append(random.gauss(0, 1))\n",
                                "\n",
                                "Histogram(data= dataH4, binCount= 10000)"
                            ]
                        }
                    },
                    {
                        "id": "NotebookImport#3",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2,
                        "data": {
                            "cell_type": "code",
                            "execution_count": 27,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from beakerx import *\n",
                                "f5 = EasyForm(\"form5\")\n",
                                "f5.addTextArea(\"field name\", value = \"5initial value5\")\n",
                                "f5"
                            ]
                        }
                    }
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_css_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_monaco_theme_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.loaded_all_cells",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_load_onigasm_assembly_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_load_tmlanguage_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.code_created",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.code_created",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.code_created",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_monaco_ready",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "send_info",
            "payload": {
                "cellCount": 4,
                "undoCount": 0,
                "redoCount": 0,
                "selectedCell": "NotebookImport#2"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "reexecute_cells",
            "payload": {
                "cellIds": [
                    "NotebookImport#1"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "native_command",
            "payload": {
                "command": 14,
                "source": "mouse"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell_and_advance",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.send_command",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_css_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_monaco_theme_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_css_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_monaco_theme_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_css_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_monaco_theme_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_css_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_monaco_theme_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_css_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_get_monaco_theme_response",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": ""
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "notebook_execution_activated",
            "payload": "file:///c%3A/Users/RCHIOD~1.RED/AppData/Local/Temp/tmp-6016x6lG7A8Gts22.ipynb"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_kernelOptions",
            "payload": {
                "clientId": "ddd80db9-b2d8-4d42-8afe-437d7872f23e",
                "id": "20bf33f8-4f0d-403a-94a7-b87f12b55737",
                "model": {
                    "name": "python3",
                    "id": "20bf33f8-4f0d-403a-94a7-b87f12b55737"
                },
                "userName": ""
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_mirror_execute",
            "payload": {
                "id": "819e83d0-1ae4-4689-b094-2dc813c700c0",
                "msg": {
                    "buffers": [],
                    "channel": "shell",
                    "content": {
                        "silent": false,
                        "store_history": false,
                        "user_expressions": {},
                        "allow_stdin": true,
                        "stop_on_error": false,
                        "code": "import os\nimport sys\n%cd \"c:\\Users\\RCHIOD~1.RED\\AppData\\Local\\Temp\"\nif os.getcwd() not in sys.path:\n    sys.path.insert(0, os.getcwd())"
                    },
                    "header": {
                        "date": "2020-04-03T18:12:49.392Z",
                        "msg_id": "819e83d0-1ae4-4689-b094-2dc813c700c0",
                        "msg_type": "execute_request",
                        "session": "ddd80db9-b2d8-4d42-8afe-437d7872f23e",
                        "username": "",
                        "version": "5.2"
                    },
                    "metadata": {},
                    "parent_header": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_registerCommTarget",
            "payload": "jupyter.widget"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_registerCommTarget",
            "payload": "jupyter.widget"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "819e83d0-1ae4-4689-b094-2dc813c700c0"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": ""
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_notebook_execution_activated",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "da8cda9e-1ccc-43a3-9f7d-03513c864c42",
                "data": "{\"header\": {\"msg_id\": \"f13714fd-ecb987b61f13404f5a7acc7a\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:50.013746Z\", \"version\": \"5.3\"}, \"msg_id\": \"f13714fd-ecb987b61f13404f5a7acc7a\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:12:49.392000Z\", \"msg_id\": \"819e83d0-1ae4-4689-b094-2dc813c700c0\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "da8cda9e-1ccc-43a3-9f7d-03513c864c42"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "832ad0df-7038-4a30-b57f-17d00ffd004d",
                "data": "{\"header\": {\"msg_id\": \"2225b809-55d1aa78c02252a2a395ddf4\", \"msg_type\": \"execute_input\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:50.014747Z\", \"version\": \"5.3\"}, \"msg_id\": \"2225b809-55d1aa78c02252a2a395ddf4\", \"msg_type\": \"execute_input\", \"parent_header\": {\"date\": \"2020-04-03T18:12:49.392000Z\", \"msg_id\": \"819e83d0-1ae4-4689-b094-2dc813c700c0\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"code\": \"import os\\nimport sys\\n%cd \\\"c:\\\\Users\\\\RCHIOD~1.RED\\\\AppData\\\\Local\\\\Temp\\\"\\nif os.getcwd() not in sys.path:\\n    sys.path.insert(0, os.getcwd())\", \"execution_count\": 1}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "832ad0df-7038-4a30-b57f-17d00ffd004d"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "dc8500d5-09dc-42e6-9a8e-375819c295c9",
                "data": "{\"header\": {\"msg_id\": \"9efef79e-147ebd51bb3a25b4248a9ee5\", \"msg_type\": \"stream\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:50.018746Z\", \"version\": \"5.3\"}, \"msg_id\": \"9efef79e-147ebd51bb3a25b4248a9ee5\", \"msg_type\": \"stream\", \"parent_header\": {\"date\": \"2020-04-03T18:12:49.392000Z\", \"msg_id\": \"819e83d0-1ae4-4689-b094-2dc813c700c0\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"name\": \"stdout\", \"text\": \"c:\\\\Users\\\\RCHIOD~1.RED\\\\AppData\\\\Local\\\\Temp\\n\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "dc8500d5-09dc-42e6-9a8e-375819c295c9"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "061fe85d-fbd3-4aa1-a0a8-4117f6fd2b1b",
                "data": "{\"header\": {\"msg_id\": \"ffe4aec4-3d4538916888798fe21e6021\", \"msg_type\": \"execute_reply\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:50.021746Z\", \"version\": \"5.3\"}, \"msg_id\": \"ffe4aec4-3d4538916888798fe21e6021\", \"msg_type\": \"execute_reply\", \"parent_header\": {\"date\": \"2020-04-03T18:12:49.392000Z\", \"msg_id\": \"819e83d0-1ae4-4689-b094-2dc813c700c0\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"started\": \"2020-04-03T18:12:50.014747Z\", \"dependencies_met\": true, \"engine\": \"7dff0983-4251-456f-9569-dff7da120c60\", \"status\": \"ok\"}, \"content\": {\"status\": \"ok\", \"execution_count\": 0, \"user_expressions\": {}, \"payload\": []}, \"buffers\": [], \"channel\": \"shell\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "061fe85d-fbd3-4aa1-a0a8-4117f6fd2b1b"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "5870e0c4-42cf-4148-92a7-75e3cf5aaccf",
                "data": "{\"header\": {\"msg_id\": \"61a1ae14-c2098adc735095291e70ef73\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:50.021746Z\", \"version\": \"5.3\"}, \"msg_id\": \"61a1ae14-c2098adc735095291e70ef73\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:12:49.392000Z\", \"msg_id\": \"819e83d0-1ae4-4689-b094-2dc813c700c0\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "5870e0c4-42cf-4148-92a7-75e3cf5aaccf"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "start_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from beakerx import *\n",
                        "plot1 = Plot()\n",
                        "plot1.add(Bars(displayName=\"Bar\", \n",
                        "       x=[20,40,60], \n",
                        "       y=[100, 120, 90], \n",
                        "       width=10))"
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 0
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_mirror_execute",
            "payload": {
                "id": "d9478c82-95f1-438e-b81f-7089b7bbeaa7",
                "msg": {
                    "buffers": [],
                    "channel": "shell",
                    "content": {
                        "silent": false,
                        "store_history": true,
                        "user_expressions": {},
                        "allow_stdin": true,
                        "stop_on_error": false,
                        "code": "from beakerx import *\nplot1 = Plot()\nplot1.add(Bars(displayName=\"Bar\", \n       x=[20,40,60], \n       y=[100, 120, 90], \n       width=10))"
                    },
                    "header": {
                        "date": "2020-04-03T18:12:52.553Z",
                        "msg_id": "d9478c82-95f1-438e-b81f-7089b7bbeaa7",
                        "msg_type": "execute_request",
                        "session": "ddd80db9-b2d8-4d42-8afe-437d7872f23e",
                        "username": "",
                        "version": "5.2"
                    },
                    "metadata": {},
                    "parent_header": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "d9478c82-95f1-438e-b81f-7089b7bbeaa7"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "33021201-592d-4124-b2d4-88abbfc0d809",
                "data": "{\"header\": {\"msg_id\": \"b3b8be23-9a19d9c627b07aa6247e34e4\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:53.069844Z\", \"version\": \"5.3\"}, \"msg_id\": \"b3b8be23-9a19d9c627b07aa6247e34e4\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:12:52.553000Z\", \"msg_id\": \"d9478c82-95f1-438e-b81f-7089b7bbeaa7\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_dirty",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_dirty",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "start_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 0
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_start_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "33021201-592d-4124-b2d4-88abbfc0d809"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "0fa0df97-c944-48e5-9064-45a69ad74fb1",
                "data": "{\"header\": {\"msg_id\": \"b0d9aff9-9cd3e24e0c084a88688f70b3\", \"msg_type\": \"execute_input\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:53.069844Z\", \"version\": \"5.3\"}, \"msg_id\": \"b0d9aff9-9cd3e24e0c084a88688f70b3\", \"msg_type\": \"execute_input\", \"parent_header\": {\"date\": \"2020-04-03T18:12:52.553000Z\", \"msg_id\": \"d9478c82-95f1-438e-b81f-7089b7bbeaa7\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"code\": \"from beakerx import *\\nplot1 = Plot()\\nplot1.add(Bars(displayName=\\\"Bar\\\", \\n       x=[20,40,60], \\n       y=[100, 120, 90], \\n       width=10))\", \"execution_count\": 1}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from beakerx import *\n",
                        "plot1 = Plot()\n",
                        "plot1.add(Bars(displayName=\"Bar\", \n",
                        "       x=[20,40,60], \n",
                        "       y=[100, 120, 90], \n",
                        "       width=10))"
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "0fa0df97-c944-48e5-9064-45a69ad74fb1"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "0e9aee8d-f79b-4524-8d0c-0f647f2e2376",
                "data": "{\"header\": {\"msg_id\": \"9b91fb86-70b2c7ad0c7eb0d510def141\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:53.073843Z\", \"version\": \"5.3\"}, \"msg_id\": \"9b91fb86-70b2c7ad0c7eb0d510def141\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:12:52.553000Z\", \"msg_id\": \"d9478c82-95f1-438e-b81f-7089b7bbeaa7\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"@jupyter-widgets/base\", \"_model_module_version\": \"*\", \"_model_name\": \"LayoutModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/base\", \"_view_module_version\": \"*\", \"_view_name\": \"LayoutView\", \"align_content\": null, \"align_items\": null, \"align_self\": null, \"border\": null, \"bottom\": null, \"display\": null, \"flex\": null, \"flex_flow\": null, \"grid_area\": null, \"grid_auto_columns\": null, \"grid_auto_flow\": null, \"grid_auto_rows\": null, \"grid_column\": null, \"grid_gap\": null, \"grid_row\": null, \"grid_template_areas\": null, \"grid_template_columns\": null, \"grid_template_rows\": null, \"height\": null, \"justify_content\": null, \"justify_items\": null, \"left\": null, \"margin\": null, \"max_height\": null, \"max_width\": null, \"min_height\": null, \"min_width\": null, \"object_fit\": null, \"object_position\": null, \"order\": null, \"overflow\": null, \"overflow_x\": null, \"overflow_y\": null, \"padding\": null, \"right\": null, \"top\": null, \"visibility\": null, \"width\": null}, \"buffer_paths\": []}, \"comm_id\": \"9f054aafaa9b461ab0200a6a07b436aa\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 1,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from beakerx import *\n",
                        "plot1 = Plot()\n",
                        "plot1.add(Bars(displayName=\"Bar\", \n",
                        "       x=[20,40,60], \n",
                        "       y=[100, 120, 90], \n",
                        "       width=10))"
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "0e9aee8d-f79b-4524-8d0c-0f647f2e2376"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "77386d25-7b61-40d8-a48a-45ae8b9be770",
                "data": "{\"header\": {\"msg_id\": \"5787b6e7-59fd8182525d20dcf5f5f9ad\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:53.073843Z\", \"version\": \"5.3\"}, \"msg_id\": \"5787b6e7-59fd8182525d20dcf5f5f9ad\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:12:52.553000Z\", \"msg_id\": \"d9478c82-95f1-438e-b81f-7089b7bbeaa7\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_dom_classes\": [], \"_model_module\": \"beakerx\", \"_model_module_version\": \"*\", \"_model_name\": \"PlotModel\", \"_view_count\": null, \"_view_module\": \"beakerx\", \"_view_module_version\": \"*\", \"_view_name\": \"PlotView\", \"layout\": \"IPY_MODEL_9f054aafaa9b461ab0200a6a07b436aa\", \"model\": {}}, \"buffer_paths\": []}, \"comm_id\": \"4192613b8e8a400f8f1099299750f173\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 1,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from beakerx import *\n",
                        "plot1 = Plot()\n",
                        "plot1.add(Bars(displayName=\"Bar\", \n",
                        "       x=[20,40,60], \n",
                        "       y=[100, 120, 90], \n",
                        "       width=10))"
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "77386d25-7b61-40d8-a48a-45ae8b9be770"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "9eb617fa-23b1-4d0a-9cc2-d6b42917612a",
                "data": "{\"header\": {\"msg_id\": \"7b6c844b-ea22c5539e60a9eb3a3474fc\", \"msg_type\": \"comm_msg\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:53.074844Z\", \"version\": \"5.3\"}, \"msg_id\": \"7b6c844b-ea22c5539e60a9eb3a3474fc\", \"msg_type\": \"comm_msg\", \"parent_header\": {\"date\": \"2020-04-03T18:12:52.553000Z\", \"msg_id\": \"d9478c82-95f1-438e-b81f-7089b7bbeaa7\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"data\": {\"method\": \"update\", \"state\": {\"model\": {\"NUMBER_OF_POINTS_TO_DISPLAY\": \"numberOfPointsToDisplay\", \"ROWS_LIMIT_ITEMS\": \"rowsLimitItems\", \"TOO_MANY_ROWS\": \"tooManyRows\", \"TOTAL_NUMBER_OF_POINTS\": \"totalNumberOfPoints\", \"constant_bands\": [], \"constant_lines\": [], \"graphics_list\": [], \"init_height\": 480, \"init_width\": 640, \"legend_layout\": \"VERTICAL\", \"legend_position\": {\"position\": \"TOP_RIGHT\"}, \"log_x\": false, \"log_y\": false, \"omit_checkboxes\": false, \"rangeAxes\": [{\"auto_range\": true, \"auto_range_includes_zero\": false, \"label\": \"\", \"log_base\": 10.0, \"lower_bound\": 0.0, \"lower_margin\": 0.05, \"type\": \"YAxis\", \"upper_bound\": 0.0, \"upper_margin\": 0.05, \"use_log\": false}], \"texts\": [], \"type\": \"Plot\", \"use_tool_tip\": true, \"x_auto_range\": true, \"x_log_base\": 10, \"x_lower_bound\": 0, \"x_lower_margin\": 0.05, \"x_upper_bound\": 0, \"x_upper_margin\": 0.05}}, \"buffer_paths\": []}, \"comm_id\": \"4192613b8e8a400f8f1099299750f173\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 1,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from beakerx import *\n",
                        "plot1 = Plot()\n",
                        "plot1.add(Bars(displayName=\"Bar\", \n",
                        "       x=[20,40,60], \n",
                        "       y=[100, 120, 90], \n",
                        "       width=10))"
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "9eb617fa-23b1-4d0a-9cc2-d6b42917612a"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "baaa0c4d-e82a-48ab-a01c-04136a9e759e",
                "data": "{\"header\": {\"msg_id\": \"784c70ea-c554e635052005f8440d850d\", \"msg_type\": \"execute_reply\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:53.080354Z\", \"version\": \"5.3\"}, \"msg_id\": \"784c70ea-c554e635052005f8440d850d\", \"msg_type\": \"execute_reply\", \"parent_header\": {\"date\": \"2020-04-03T18:12:52.553000Z\", \"msg_id\": \"d9478c82-95f1-438e-b81f-7089b7bbeaa7\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"started\": \"2020-04-03T18:12:53.069844Z\", \"dependencies_met\": true, \"engine\": \"7dff0983-4251-456f-9569-dff7da120c60\", \"status\": \"ok\"}, \"content\": {\"status\": \"ok\", \"execution_count\": 1, \"user_expressions\": {}, \"payload\": []}, \"buffers\": [], \"channel\": \"shell\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 1,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from beakerx import *\n",
                        "plot1 = Plot()\n",
                        "plot1.add(Bars(displayName=\"Bar\", \n",
                        "       x=[20,40,60], \n",
                        "       y=[100, 120, 90], \n",
                        "       width=10))"
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "baaa0c4d-e82a-48ab-a01c-04136a9e759e"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 1,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from beakerx import *\n",
                        "plot1 = Plot()\n",
                        "plot1.add(Bars(displayName=\"Bar\", \n",
                        "       x=[20,40,60], \n",
                        "       y=[100, 120, 90], \n",
                        "       width=10))"
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "de550fd1-d6c7-4ef7-944f-7beaaeec7b42",
                "data": "{\"header\": {\"msg_id\": \"e1975d28-cf66a89c410626683a764a3d\", \"msg_type\": \"comm_msg\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:53.076388Z\", \"version\": \"5.3\"}, \"msg_id\": \"e1975d28-cf66a89c410626683a764a3d\", \"msg_type\": \"comm_msg\", \"parent_header\": {\"date\": \"2020-04-03T18:12:52.553000Z\", \"msg_id\": \"d9478c82-95f1-438e-b81f-7089b7bbeaa7\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"data\": {\"method\": \"update\", \"state\": {\"model\": {\"NUMBER_OF_POINTS_TO_DISPLAY\": \"numberOfPointsToDisplay\", \"ROWS_LIMIT_ITEMS\": \"rowsLimitItems\", \"TOO_MANY_ROWS\": \"tooManyRows\", \"TOTAL_NUMBER_OF_POINTS\": \"totalNumberOfPoints\", \"constant_bands\": [], \"constant_lines\": [], \"graphics_list\": [{\"bases\": 0, \"clickTag\": \"\", \"display_name\": \"Bar\", \"hasClickAction\": false, \"keyTags\": {}, \"keys\": [], \"onKeyListeners\": {}, \"type\": \"Bars\", \"uid\": \"0787856d-7ed2-42d1-afec-0e81c5fb53c1\", \"visible\": true, \"width\": 10, \"x\": [20, 40, 60], \"y\": [100, 120, 90]}], \"init_height\": 480, \"init_width\": 640, \"legend_layout\": \"VERTICAL\", \"legend_position\": {\"position\": \"TOP_RIGHT\"}, \"log_x\": false, \"log_y\": false, \"omit_checkboxes\": false, \"rangeAxes\": [{\"auto_range\": true, \"auto_range_includes_zero\": false, \"label\": \"\", \"log_base\": 10.0, \"lower_bound\": 0.0, \"lower_margin\": 0.05, \"type\": \"YAxis\", \"upper_bound\": 0.0, \"upper_margin\": 0.05, \"use_log\": false}], \"texts\": [], \"type\": \"Plot\", \"use_tool_tip\": true, \"x_auto_range\": true, \"x_log_base\": 10, \"x_lower_bound\": 0, \"x_lower_margin\": 0.05, \"x_upper_bound\": 0, \"x_upper_margin\": 0.05}}, \"buffer_paths\": []}, \"comm_id\": \"4192613b8e8a400f8f1099299750f173\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "de550fd1-d6c7-4ef7-944f-7beaaeec7b42"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "047a99d5-260e-4029-badf-f5e0882fc9ff",
                "data": "{\"header\": {\"msg_id\": \"438609e3-f7e3f507efb8b289645f3afc\", \"msg_type\": \"display_data\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:53.078841Z\", \"version\": \"5.3\"}, \"msg_id\": \"438609e3-f7e3f507efb8b289645f3afc\", \"msg_type\": \"display_data\", \"parent_header\": {\"date\": \"2020-04-03T18:12:52.553000Z\", \"msg_id\": \"d9478c82-95f1-438e-b81f-7089b7bbeaa7\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"data\": {\"application/vnd.jupyter.widget-view+json\": {\"version_major\": 2, \"version_minor\": 0, \"model_id\": \"4192613b8e8a400f8f1099299750f173\"}}, \"metadata\": {}, \"transient\": {}}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 1,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "from beakerx import *\n",
                        "plot1 = Plot()\n",
                        "plot1.add(Bars(displayName=\"Bar\", \n",
                        "       x=[20,40,60], \n",
                        "       y=[100, 120, 90], \n",
                        "       width=10))"
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "047a99d5-260e-4029-badf-f5e0882fc9ff"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "316f080a-ea6c-4c2d-8e22-196a99a6c9bf",
                "data": "{\"header\": {\"msg_id\": \"fac2eb17-d171d2f29b26d4f40858197c\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:53.080354Z\", \"version\": \"5.3\"}, \"msg_id\": \"fac2eb17-d171d2f29b26d4f40858197c\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:12:52.553000Z\", \"msg_id\": \"d9478c82-95f1-438e-b81f-7089b7bbeaa7\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 1,
                    "metadata": {},
                    "outputs": [
                        {
                            "output_type": "display_data",
                            "data": {
                                "application/vnd.jupyter.widget-view+json": {
                                    "version_major": 2,
                                    "version_minor": 0,
                                    "model_id": "4192613b8e8a400f8f1099299750f173"
                                }
                            },
                            "metadata": {},
                            "transient": {}
                        }
                    ],
                    "source": [
                        "from beakerx import *\n",
                        "plot1 = Plot()\n",
                        "plot1.add(Bars(displayName=\"Bar\", \n",
                        "       x=[20,40,60], \n",
                        "       y=[100, 120, 90], \n",
                        "       width=10))"
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "316f080a-ea6c-4c2d-8e22-196a99a6c9bf"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 1,
                    "metadata": {},
                    "outputs": [
                        {
                            "output_type": "display_data",
                            "data": {
                                "application/vnd.jupyter.widget-view+json": {
                                    "version_major": 2,
                                    "version_minor": 0,
                                    "model_id": "4192613b8e8a400f8f1099299750f173"
                                }
                            },
                            "metadata": {},
                            "transient": {}
                        }
                    ],
                    "source": [
                        "from beakerx import *\n",
                        "plot1 = Plot()\n",
                        "plot1.add(Bars(displayName=\"Bar\", \n",
                        "       x=[20,40,60], \n",
                        "       y=[100, 120, 90], \n",
                        "       width=10))"
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "finish_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 1,
                    "metadata": {},
                    "outputs": [
                        {
                            "output_type": "display_data",
                            "data": {
                                "application/vnd.jupyter.widget-view+json": {
                                    "version_major": 2,
                                    "version_minor": 0,
                                    "model_id": "4192613b8e8a400f8f1099299750f173"
                                }
                            },
                            "metadata": {},
                            "transient": {}
                        }
                    ],
                    "source": [
                        "from beakerx import *\n",
                        "plot1 = Plot()\n",
                        "plot1.add(Bars(displayName=\"Bar\", \n",
                        "       x=[20,40,60], \n",
                        "       y=[100, 120, 90], \n",
                        "       width=10))"
                    ]
                },
                "id": "NotebookImport#1",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 2
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "stop_progress"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "4192613b8e8a400f8f1099299750f173"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "4192613b8e8a400f8f1099299750f173"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_dirty",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "finish_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 1,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "4192613b8e8a400f8f1099299750f173"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "from beakerx import *\n",
                                "plot1 = Plot()\n",
                                "plot1.add(Bars(displayName=\"Bar\", \n",
                                "       x=[20,40,60], \n",
                                "       y=[100, 120, 90], \n",
                                "       width=10))"
                            ]
                        },
                        "id": "NotebookImport#1",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "rendered_execution",
            "payload": {
                "ids": [
                    "NotebookImport#1"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_finish_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_stop_progress",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "send_info",
            "payload": {
                "cellCount": 4,
                "undoCount": 0,
                "redoCount": 0,
                "selectedCell": "NotebookImport#3"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "reexecute_cells",
            "payload": {
                "cellIds": [
                    "NotebookImport#2"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "start_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "import random\n",
                        "from beakerx import *\n",
                        "dataH4 = []\n",
                        "\n",
                        "for x in range(1, 1100000):\n",
                        "  dataH4.append(random.gauss(0, 1))\n",
                        "\n",
                        "Histogram(data= dataH4, binCount= 10000)"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 0
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_mirror_execute",
            "payload": {
                "id": "20bc1b47-aee2-4337-a9e7-3869ea9f9e7d",
                "msg": {
                    "buffers": [],
                    "channel": "shell",
                    "content": {
                        "silent": false,
                        "store_history": true,
                        "user_expressions": {},
                        "allow_stdin": true,
                        "stop_on_error": false,
                        "code": "import random\nfrom beakerx import *\ndataH4 = []\n\nfor x in range(1, 1100000):\n  dataH4.append(random.gauss(0, 1))\n\nHistogram(data= dataH4, binCount= 10000)"
                    },
                    "header": {
                        "date": "2020-04-03T18:12:58.226Z",
                        "msg_id": "20bc1b47-aee2-4337-a9e7-3869ea9f9e7d",
                        "msg_type": "execute_request",
                        "session": "ddd80db9-b2d8-4d42-8afe-437d7872f23e",
                        "username": "",
                        "version": "5.2"
                    },
                    "metadata": {},
                    "parent_header": {}
                }
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "native_command",
            "payload": {
                "command": 14,
                "source": "mouse"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell_and_advance",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.execute_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_action.send_command",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "20bc1b47-aee2-4337-a9e7-3869ea9f9e7d"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "start_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "import random\n",
                                "from beakerx import *\n",
                                "dataH4 = []\n",
                                "\n",
                                "for x in range(1, 1100000):\n",
                                "  dataH4.append(random.gauss(0, 1))\n",
                                "\n",
                                "Histogram(data= dataH4, binCount= 10000)"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 0
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_start_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "19a6e913-5b0c-4394-9f92-5858fa228af5",
                "data": "{\"header\": {\"msg_id\": \"79fb5851-0936a723cd84966dab9f6830\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:58.733186Z\", \"version\": \"5.3\"}, \"msg_id\": \"79fb5851-0936a723cd84966dab9f6830\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:12:58.226000Z\", \"msg_id\": \"20bc1b47-aee2-4337-a9e7-3869ea9f9e7d\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"busy\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "19a6e913-5b0c-4394-9f92-5858fa228af5"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "1c67dc77-23ef-4ce7-ad33-820ecfbc921a",
                "data": "{\"header\": {\"msg_id\": \"8803c48f-915e4c1c22892c96c33d3f6a\", \"msg_type\": \"execute_input\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:58.733186Z\", \"version\": \"5.3\"}, \"msg_id\": \"8803c48f-915e4c1c22892c96c33d3f6a\", \"msg_type\": \"execute_input\", \"parent_header\": {\"date\": \"2020-04-03T18:12:58.226000Z\", \"msg_id\": \"20bc1b47-aee2-4337-a9e7-3869ea9f9e7d\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"code\": \"import random\\nfrom beakerx import *\\ndataH4 = []\\n\\nfor x in range(1, 1100000):\\n  dataH4.append(random.gauss(0, 1))\\n\\nHistogram(data= dataH4, binCount= 10000)\", \"execution_count\": 2}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": null,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "import random\n",
                        "from beakerx import *\n",
                        "dataH4 = []\n",
                        "\n",
                        "for x in range(1, 1100000):\n",
                        "  dataH4.append(random.gauss(0, 1))\n",
                        "\n",
                        "Histogram(data= dataH4, binCount= 10000)"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Busy",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "1c67dc77-23ef-4ce7-ad33-820ecfbc921a"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "1362010b-e45e-4ff9-bf4d-3c6b0119615e",
                "data": "{\"header\": {\"msg_id\": \"e0dc0880-3360b451906efe6e3748fa1e\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:59.480261Z\", \"version\": \"5.3\"}, \"msg_id\": \"e0dc0880-3360b451906efe6e3748fa1e\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:12:58.226000Z\", \"msg_id\": \"20bc1b47-aee2-4337-a9e7-3869ea9f9e7d\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_model_module\": \"@jupyter-widgets/base\", \"_model_module_version\": \"*\", \"_model_name\": \"LayoutModel\", \"_view_count\": null, \"_view_module\": \"@jupyter-widgets/base\", \"_view_module_version\": \"*\", \"_view_name\": \"LayoutView\", \"align_content\": null, \"align_items\": null, \"align_self\": null, \"border\": null, \"bottom\": null, \"display\": null, \"flex\": null, \"flex_flow\": null, \"grid_area\": null, \"grid_auto_columns\": null, \"grid_auto_flow\": null, \"grid_auto_rows\": null, \"grid_column\": null, \"grid_gap\": null, \"grid_row\": null, \"grid_template_areas\": null, \"grid_template_columns\": null, \"grid_template_rows\": null, \"height\": null, \"justify_content\": null, \"justify_items\": null, \"left\": null, \"margin\": null, \"max_height\": null, \"max_width\": null, \"min_height\": null, \"min_width\": null, \"object_fit\": null, \"object_position\": null, \"order\": null, \"overflow\": null, \"overflow_x\": null, \"overflow_y\": null, \"padding\": null, \"right\": null, \"top\": null, \"visibility\": null, \"width\": null}, \"buffer_paths\": []}, \"comm_id\": \"95112dfe2d7d45b5a73f81de2de5650f\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 2,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "import random\n",
                        "from beakerx import *\n",
                        "dataH4 = []\n",
                        "\n",
                        "for x in range(1, 1100000):\n",
                        "  dataH4.append(random.gauss(0, 1))\n",
                        "\n",
                        "Histogram(data= dataH4, binCount= 10000)"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": null,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "import random\n",
                                "from beakerx import *\n",
                                "dataH4 = []\n",
                                "\n",
                                "for x in range(1, 1100000):\n",
                                "  dataH4.append(random.gauss(0, 1))\n",
                                "\n",
                                "Histogram(data= dataH4, binCount= 10000)"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Busy",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "1362010b-e45e-4ff9-bf4d-3c6b0119615e"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "925fac69-25d1-4c1f-9a24-b353a81161d8",
                "data": "{\"header\": {\"msg_id\": \"acd8c223-1cd64b8e9f91c75c8cbc5cf5\", \"msg_type\": \"comm_open\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:59.481262Z\", \"version\": \"5.3\"}, \"msg_id\": \"acd8c223-1cd64b8e9f91c75c8cbc5cf5\", \"msg_type\": \"comm_open\", \"parent_header\": {\"date\": \"2020-04-03T18:12:58.226000Z\", \"msg_id\": \"20bc1b47-aee2-4337-a9e7-3869ea9f9e7d\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"version\": \"2.0.0\"}, \"content\": {\"data\": {\"state\": {\"_dom_classes\": [], \"_model_module\": \"beakerx\", \"_model_module_version\": \"*\", \"_model_name\": \"PlotModel\", \"_view_count\": null, \"_view_module\": \"beakerx\", \"_view_module_version\": \"*\", \"_view_name\": \"PlotView\", \"layout\": \"IPY_MODEL_95112dfe2d7d45b5a73f81de2de5650f\", \"model\": {}}, \"buffer_paths\": []}, \"comm_id\": \"e3c83a0f0db348ac998202152e2cdfec\", \"target_name\": \"jupyter.widget\", \"target_module\": null}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 2,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "import random\n",
                        "from beakerx import *\n",
                        "dataH4 = []\n",
                        "\n",
                        "for x in range(1, 1100000):\n",
                        "  dataH4.append(random.gauss(0, 1))\n",
                        "\n",
                        "Histogram(data= dataH4, binCount= 10000)"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "import random\n",
                                "from beakerx import *\n",
                                "dataH4 = []\n",
                                "\n",
                                "for x in range(1, 1100000):\n",
                                "  dataH4.append(random.gauss(0, 1))\n",
                                "\n",
                                "Histogram(data= dataH4, binCount= 10000)"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "925fac69-25d1-4c1f-9a24-b353a81161d8"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "8ff32a9f-420f-42df-8bb4-917ae2c0d319",
                "data": "{\"header\": {\"msg_id\": \"7f00c2f0-72299830a9d6f10f655a3ef8\", \"msg_type\": \"execute_reply\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:59.534234Z\", \"version\": \"5.3\"}, \"msg_id\": \"7f00c2f0-72299830a9d6f10f655a3ef8\", \"msg_type\": \"execute_reply\", \"parent_header\": {\"date\": \"2020-04-03T18:12:58.226000Z\", \"msg_id\": \"20bc1b47-aee2-4337-a9e7-3869ea9f9e7d\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {\"started\": \"2020-04-03T18:12:58.733186Z\", \"dependencies_met\": true, \"engine\": \"7dff0983-4251-456f-9569-dff7da120c60\", \"status\": \"ok\"}, \"content\": {\"status\": \"ok\", \"execution_count\": 2, \"user_expressions\": {}, \"payload\": []}, \"buffers\": [], \"channel\": \"shell\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 2,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "import random\n",
                        "from beakerx import *\n",
                        "dataH4 = []\n",
                        "\n",
                        "for x in range(1, 1100000):\n",
                        "  dataH4.append(random.gauss(0, 1))\n",
                        "\n",
                        "Histogram(data= dataH4, binCount= 10000)"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "import random\n",
                                "from beakerx import *\n",
                                "dataH4 = []\n",
                                "\n",
                                "for x in range(1, 1100000):\n",
                                "  dataH4.append(random.gauss(0, 1))\n",
                                "\n",
                                "Histogram(data= dataH4, binCount= 10000)"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "8ff32a9f-420f-42df-8bb4-917ae2c0d319"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 2,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "import random\n",
                        "from beakerx import *\n",
                        "dataH4 = []\n",
                        "\n",
                        "for x in range(1, 1100000):\n",
                        "  dataH4.append(random.gauss(0, 1))\n",
                        "\n",
                        "Histogram(data= dataH4, binCount= 10000)"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "79eb5a3a-5fab-4a96-971e-af4fe686e26c",
                "data": "{\"header\": {\"msg_id\": \"a44bd502-e67d2fd10412f7b1670468b4\", \"msg_type\": \"comm_msg\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:59.514264Z\", \"version\": \"5.3\"}, \"msg_id\": \"a44bd502-e67d2fd10412f7b1670468b4\", \"msg_type\": \"comm_msg\", \"parent_header\": {\"date\": \"2020-04-03T18:12:58.226000Z\", \"msg_id\": \"20bc1b47-aee2-4337-a9e7-3869ea9f9e7d\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"data\": {\"method\": \"update\", \"state\": {\"model\": {\"NUMBER_OF_POINTS_TO_DISPLAY\": \"numberOfPointsToDisplay\", \"ROWS_LIMIT\": 1000000, \"ROWS_LIMIT_ITEMS\": \"rowsLimitItems\", \"ROWS_LIMIT_T0_INDEX\": 10000, \"TOO_MANY_ROWS\": \"tooManyRows\", \"TOTAL_NUMBER_OF_POINTS\": \"totalNumberOfPoints\", \"bin_count\": 10000, \"constant_bands\": [], \"constant_lines\": [], \"cumulative\": false, \"graphics_list\": [[0.07523533479728801, -0.1731296762360363, 1.2941917865160562, 1.0645589962998228, -0.7852242253563556, 0.06061597299417201, 0.8807748315253858, -0.6126649402638719, 0.0638000286459625, 1.3251138849676278, -0.7088153925479604, -0.4409900865518098, -1.9295516912568467, -0.429510787049191, 0.054745045818673135, 1.820478566931056, -0.4900861761301497, -0.14118699966072498, -1.0838466641368352, -2.34833663519849, 0.7026962108179009, 0.17195341083872479, -0.43965900011762676, 1.3217595198993097, 1.2921092447539673, -0.47532312768766966, -0.9284908391407954, -0.09308870433415836, 0.43881310924979666, -0.23487097174836868, 0.6578755695809585, -0.7492486282713279, 0.7174957470054145, 0.261638592041969, 0.27277749050477, -0.0255695482198039, 1.505314326427597, 0.5260436562731448, -1.5905830696716556, -1.091375378556195, 1.8469975032000778, -0.7436278122393251, -1.3144653858632491, -2.5855281695357064, -0.0583384235359091, 0.1692242082819335, -0.15544717355136287, -0.6304625920253472, -0.44495386886294697, 0.37234159714137965, 1.0018679157902421, 2.4791262060476025, -1.4650417111093315, -1.1554144776097544, -0.06602978907116748, 0.4134769645150594, 0.5336153274792131, 0.579864012326814, -0.9105694370891223, -0.8247954633602907, 0.6728314087323433, -2.400294057375569, -0.15823056121794066, -1.0325435398268443, -0.17003838359467577, -0.9282613812150899, -0.2094599594084755, 0.6940220276181567, -0.2823085382039475, 1.5904930920159743, -0.31071712453240313, -0.7315641676112342, -0.45987682563173976, 0.42190711807345205, -0.5029175264456093, 0.703239660273447, -0.05661944982998633, 1.4041957983858318, 2.223843647087675, -0.12071815117414393, 0.4779469091440916, -0.45138286561377383, 0.9302271916403461, 2.1908526902025693, 0.16786353935844564, -0.11009870983214826, 0.4177654602647497, 0.9323322751331251, 0.6331619931846266, -1.6007823979875972, 0.11089034051878771, 2.0754858846707362, -0.4339446941711738, -0.5212975761192775, -0.22045089143000415, 0.896988654202744, 1.9028430461344397, 1.574314598491659, -0.32067087091687035, 0.6970516873986105, -1.4748321209644324, -1.1163641871259495, 0.4540072490529812, -1.2650210279362155, 0.847633934809171, 2.1060687291035167, -0.25395361457173343, -0.9341890018573759, 0.1742670750267496, -0.0786295577668503, 1.5038372387464942, 0.20983888946351162, -0.6172196660309033, -2.5114635905689537, 0.6341358719921493, -0.8231511010469185, -1.4048150956736467, -1.0022722179723458, 1.493474063853609, 0.6716625900394337, -1.4839653765924237, -0.36850927889267426, 1.0032616637812541, 0.5371285952294127, -0.5744981107577662, -2.027246641204915, 0.1642908170650873, 0.5091278007760576, 0.5327150227719399, -1.194974112142885, 0.3049113091090638, -1.3679632993430675, 0.14521626624866307, 0.10559121118166953, -0.7416639203429128, 0.5413059113288499, -0.9218167248938766, 0.6937769702053295, 1.1361264524700052, 0.16310517222791782, 1.5268758353017056, 0.20315123817780162, 0.7159598431050748, -1.1444851069616542, -1.2514189390907293, 0.2498412312562619, 0.6237432008507309, 0.8806685558448517, 0.7202119422173445, 0.08298780897664539, 0.6447802393171785, -0.41644913114558596, 0.6653161972001344, -0.604208614089925, -1.084189239397107, -0.657655520028566, 1.224406630036697, 0.44215453690053913, 0.1019684818966039, -0.800409438479987, -2.100208960493061, -1.8607687330223952, 0.6962930354859744, -0.5949769414893088, -0.6761899246951955, -1.826302832334128, 1.4015448599716054, -0.41931493302273504, -0.6307136303148754, 0.16275404943935715, -0.4201989822975572, -1.9003299139567533, -1.8775047385881547, -0.28471575351796047, -1.545927841982177, -0.3099751760404454, 1.370120672500157, 1.304956131295052, -0.8987269906896452, -0.3711831322247815, 0.05695922338042383, 0.6483112743076346, -1.2294564631142926, -2.1947843288164903, -2.3488880760060677, -3.253355421788437, 1.5012570442655424, -0.0917959533215105, 1.747850560378371, 0.07171474379133984, -1.0270086635506976, 0.41320643553957626, -0.46226808534607267, -0.19654444992564962, -0.42926259724000704, 0.40691736119060373, 1.330946296981258, -0.7760970422886889, 0.07295609832130467, -2.443311758160798, 0.5777728350360956, 0.7420090041404593, -0.6559347208531535, 0.10767814155491229, 1.4036604053518975, 0.492897628812965, 1.435548718605824, 1.9285774878387811, 1.1300085279633378, -2.0793990217319984, 0.7996455109536751, -0.3472213776126036, -0.32821951545653333, -0.32696788850468267, 0.683530471623079, 0.7625486218824309, 0.5377710174952266, 0.15477396627712725, -0.8153442453439917, 1.272896819524847, 1.6684550790784114, 0.8846250695338711, -1.1562381783378106, 0.2334511614828987, -0.5360288187448758, 0.20481135379318302, -0.7816697292026917, -0.637197395642305, 0.24894621715544088, 1.7515411111051369, 0.7371841811597666, 1.0227838465274217, -0.39898641613042374, -1.8040107452206997, -0.7266429187134698, 0.3080532543716711, 0.8632490039154953, 0.306028903899267, 1.2329536025240977, 0.10467329357331628, -0.45010048214652404, -1.10157613325555, -0.795114907407234, -0.6528854503377589, -1.0407881138022157, -1.4386149329994726, -0.9802707187280605, 1.2645210230893236, -0.1303718792690554, -1.218538661604926, -1.714328215999755, 1.7585526149406108, 1.4528128088446213, 1.9000961978528914, -0.9777170887513983, 0.26095868947782375, -0.39530367942875994, -0.4056607025273505, 0.3702920199386868, -0.2559526023142308, -0.19525091790692614, -0.20375354420662395, 0.2500756008855773, -0.664843858875498, -1.1860617266688134, 0.20166237756131247, 0.23205900191849005, 0.9999177693535587, 0.7781074324268588, -1.811849769743312, -0.4273238698222557, -0.1601771940794929, 1.217396088394858, 0.06784643156630561, -0.2218294091485676, -2.9310268466061653, -0.2438129668496976, 1.5819283334871974, -0.57727343471956, -1.6129501418425176, -0.0737869609420072, -0.007130486008098661, 1.157720222074071, -0.3289027287400595, -0.4822468191231014, -0.35788761155731363, 0.46164803323109677, 0.3971125137578439, -0.5943814785953059, -0.72231502509086, -0.5618231490986244, -1.2308888140089795, 1.283186388994508, -0.012435013247291229, -0.21458757424598224, -0.55363152976562, -1.6733447086114883, -1.153734499488027, -0.2536885854256833, 0.5523797777168705, 1.120570023970116, 0.1898521385391416, 2.21089981043539, -0.21582949435245344, 0.15629235383539766, 1.7758145644721406, -0.7936517156344312, -0.24476106008498477, -0.7916886840993073, 1.4613487098903442, 0.5361567483039122, -0.47718983144044697, 0.10225998221903544, -0.09309353906612176, -0.040953159486394455, 1.7050417414283783, 0.021176088245054212, 0.5219762635582672, 0.20850453351628218, 1.107975198529444, -1.4270778533766246, -0.8610157541204004, -0.8189388102294909, -0.6454407694823838, -1.0018202787816104, -0.3595233631482231, 1.0180837080469438, 0.5832965906952615, 0.7818425600845826, -0.7959928524037608, 1.6096521079124284, 1.034316642595179, -0.7825620339837059, 0.336215838224086, 0.6653370944453121, -0.041680862665565366, 0.9377987066139111, -1.2780648106758963, 0.6910988925581011, -0.17821255689228396, 1.0121247645608349, -1.5137148799609275, 0.18801383207970845, -0.6862408424240449, 0.9280250421660834, -0.6702760211370523, 1.0344662478005606, 1.1239144882844794, -0.5305409290880939, 0.8517279935187745, 0.11245163423767014, 1.290679487791612, 1.180351892557224, 0.8135640537167395, 0.8261588232598904, 1.7620702097710594, -0.05768613381831938, 1.1165519306904321, 0.03000066474547414, -1.7765109720381884, -0.9746198628994978, -1.34422670820018, -0.3798844284711327, -1.4211020874676294, -0.06406154895030702, -0.020900716184402337, 0.0038840818399670995, -0.5612167583843751, 1.9228702202927206, 0.4943428920015108, 0.2312727495478416, -0.6499793714328332, 1.1834723078518545, -1.0588019718988277, -0.7708548111377858, -0.7008578046362539, -0.06955843185622619, -0.278755866771363, -0.9451278377526979, -0.3206983326338357, 0.3827088375418431, -3.1857227979311533, 2.5841949339226535, 0.5625525203680449, 0.013442879595583079, -0.3238271348860621, -0.2901494194714079, 0.4859571822237823, -0.5507466742408776, 0.9075449645797884, -1.7750772259996943, -0.6283281191174395, 0.20049366062190935, -0.15604289014847203, -0.9985959842076689, -0.5470780811245961, 0.8145990387206744, -0.8400070964844567, 1.0189872012416086, 0.567682658457834, 1.850697251771854, -1.350368066022578, -0.4450659481435002, -1.0834434131740127, -0.9894140923024782, -0.17413063733581036, 0.18757780681564998, 1.6873791462972765, -0.526536560667701, 0.022305355329878075, 1.3449610402969376, 0.7619003995710266, 0.7033058046390936, -0.27155201075391744, 0.7544717980700855, 0.04180266786947562, 1.554613129871016, -1.2806135342710234, 1.5487903600749016, 0.28639525797593857, 0.6155962004736458, 0.27758083790007365, -0.442358316822556, -0.5426543995972121, -1.4352917520900166, -2.450842782987216, -0.9526269590855534, 0.6503996249521923, -0.8973848256526381, -0.9831317805653613, 1.1515304291901354, 0.12299701745026637, 0.029812663386526096, 0.6174165717460142, -0.5616688242767675, 0.7837800291669789, -2.425745620188715, -0.9377143286508187, -2.07962240643502, 0.011905443717912013, 0.2680483018180826, -1.0178356761482816, -0.2992057399061811, 0.18161922635904038, 0.6064552118299311, -1.0716423373618105, 1.1328790606321373, -0.012617241619158339, -0.3902667828371565, 0.738874859658862, 0.45616549346860386, 1.0765199200030133, -0.7738497464268026, -0.993462628370364, -2.48735133727521, -1.0380433565745306, -0.8304154140501948, -0.4220968623020216, 0.24467537508405166, -0.4275342657189751, 0.9109807037632073, 0.32175568526858506, -0.4441948528468219, 0.20181773500391165, -0.5181809833884397, -0.2045571567135845, -0.3113197774803624, -0.6812187088725649, 1.1466294656925844, 1.1990740959321025, -0.6579269527471012, -1.6864261134467595, 0.005893825709609993, 0.3764445384311026, 0.176881734416368, 0.3396671190674631, 1.0934432860044498, 0.4764750152028725, -0.30312629917147976, 0.05004111284451912, -1.3757457829809958, -1.4102265997947354, 1.2727451931612928, -0.903450973015592, 0.03549327013075958, -1.4762678216193683, 1.3236985252959608, -1.5756101136130907, 0.6777817932172561, 0.24501381470499536, -1.4369797327895586, -1.299797121120206, 0.500537851302842, 0.7092000661424286, 0.36115662710228724, -0.453892625074697, 0.9359575601586405, 1.2241699820581906, -0.2313592612861454, 0.2381037520644257, 0.5990131912366881, 0.40457650992944044, 1.1639601464197444, 1.2385150508563554, 0.23266467770865137, 0.22792757672056166, 0.42591392391368527, 0.5105330578001162, 0.8742699144682546, 0.3898468079724071, -0.16540487279770102, 0.36375033410835045, 0.3021166547113137, -1.395117660789049, -1.9053910407040022, 0.6366292929452473, 0.9694768431925497, 1.009998738822922, 1.3918749078353307, 0.08265727017066408, 0.6249745062391695, 0.7430276459515873, 0.47707971131456633, -0.7917261483572466, 1.1814429287962163, 0.3558118011155713, -0.3186028881557895, 0.9668577302261567, 0.748646765310814, -0.2761521114584629, -0.481550112353928, 0.45586635517746993, -0.570804380965746, 0.3191116500094001, -0.42623102452107897, -0.8707745580164494, 0.4923927506448645, -0.48504795435371906, 0.9665985404467312, -0.2801380185208968, 0.9870118245413868, -1.0068876202452408, 1.2971825588994308, -0.1402070965034001, -0.6515838646401102, -0.3404912762129427, -1.0275551370180642, -1.0741990183247199, 0.6220105446939611, -0.24123823943154882, 0.28147553449971663, -1.7009423083831907, 0.27207824901296845, -0.9681027955922811, -1.0558262510029552, -0.49149537363492024, -1.8832129504599506, -0.5382083306781356, 1.0397285587175233, 0.44048884028206425, -0.9181118916874628, -0.48112297050588004, -2.065419413686926, 0.39369911659455975, -0.3285547906728573, 0.2662476357018516, 1.2135523759058071, 1.5428168414229697, 0.6348799539863855, 1.0873110281630138, 1.1108035618616177, -0.6940453523390643, -1.079629693661515, 0.9574118027496755, 1.2877101994243956, -0.20823725278020952, -1.9660601240453823, -0.37603453847820645, -1.434753863356041, 0.6023353369224764, -0.5128830147096686, 0.4666417779117656, 0.5105396847715334, -0.5838098858458959, -0.11409843321277023, 0.3837093864779699, 0.5955627347328674, -1.2744945240890488, -0.10818641069652235, -1.1589983373648176, -1.3452358031579112, -1.0720409109661522, 0.7193291681013688, -0.3034335949876543, -0.17542771001507673, 0.19959672789581176, 0.7930276965744096, 1.4863888909871408, -0.2882472300497944, 0.4520721454460998, 1.1661579348931503, -0.4634987985003863, -0.16797760026254585, 0.754478677035615, 0.19990840663736573, -0.5665655740661094, 0.06538012326673327, 1.0136994527419823, 0.5172481034732133, -0.1652734497022857, -0.7932151022988249, -1.04840099469853, -0.846782586532789, 0.411728675471082, 1.6124552681382687, -0.4586649352722426, 1.503347978946835, -0.9754677186200251, -0.7776878771576208, -0.41417676502765843, -0.7353086663204446, -0.7504988993369871, -0.08197693332348362, -0.3345551496465871, 0.38739310164364693, 0.2916210344974218, 1.1447897995939538, 0.9978075790153653, 0.945177804216254, -0.7895791694252168, 0.7531337326381471, 0.2730510162742109, -1.1672318838529523, -1.7231850188674296, -0.7286080370110777, -0.8241375962028393, 1.6923407207351027, 0.7486403380369046, 0.2508414604611027, -0.3317115740556754, 0.3439436359061561, 0.0691918814510545, 1.4474676285877024, 1.6361353934069227, -0.42349850562364527, 0.13751451651781776, -0.8152160640284756, 1.373775523734741, 0.5182319040134618, 1.6636000211744126, 0.7544303211575898, -0.10757472043709214, 1.2500996648309775, -1.505539025576636, -0.6956085725002745, -0.3648299801812249, 0.133814723110239, 0.15989583061103796, -0.5824372536817556, -0.5336229500070153, 0.4450943111260738, 0.7719689297940994, -0.6006001748495278, -0.3256423129278642, 1.0565833685437611, -0.8865533507275888, -0.04409537728861553, -1.1976792683985538, 1.376897877896144, -1.8060457973205932, -0.6342530895966556, 0.6994240025817953, -0.08675422106821779, 0.32204019909144904, -0.08100956236409768, 0.14167956653188887, -1.061328539127115, 1.4331177460276618, 0.5842613589649291, 1.0050960773453552, 1.2309563478173633, 0.025282930681596316, -0.32965229490851555, -0.4253364005154371, 0.5015671547242302, -1.2833532858158339, 0.8607511708749145, -0.2915738651231164, 0.07540790434216188, -1.6288077037794373, 0.25176596152493463, 0.48279588169010373, -0.07988720693176145, 1.0950756047524604, -0.006066709440472031, -0.93249535150663, -1.3330141114286307, 2.1240348639250506, 0.6281560459583213, -2.061402618442708, 0.6070202594222456, 1.1479892187072016, 1.4338051936002905, -0.5211989244947072, 0.4155938093943777, 0.723660614646216, 0.2570591721048433, 1.5013708077836732, 0.6070033457680014, 0.45185857372561467, 0.06766169655491551, 0.5398902743184117, 0.7597668682378036, -0.23957565871087763, 1.150655492837099, 1.892200393792519, 0.3066506111599786, -0.32825882434589293, 0.8790098154149492, 0.3420886341963948, -0.8346202158001286, -0.8081704363904428, -1.411363124133066, 0.24154596842532555, -1.8981613027467976, 0.36065131785925825, 1.2042774176860886, -1.7240311657704992, 0.5097828686347137, -1.0953009301819068, 0.528790916413199, -0.12422189245459062, 1.1897484921851613, 0.8815179613381461, -0.4342905234187231, 1.8435424207234825, -0.7073741571099583, 0.3128334173841826, -1.350971533574109, -0.04502304388270089, -1.5669286741142467, 0.4921365273669207, 0.0015601223015781131, 0.7291664472838627, 1.4004329239600566, -0.0016299330696723795, -0.11450494814694982, -0.5599135918901682, -0.5626858342671891, -1.0441413465891187, 1.8114192522526995, -0.9697055757852159, -0.9101614865781991, -0.9256242140606056, 0.4684156480887987, 0.07794392918966132, -0.21284832952952445, 1.322049023805332, -0.699019708987916, 0.10677821320994987, -0.3334539268608575, 0.35155388169842555, 1.964713965369587, -0.6983515959591092, -0.3851546282742352, -0.9612475932139308, 0.5517066679780418, -0.47938262575113677, -0.3438778916833996, -1.3931356127833063, 0.6408944682157984, -1.3224543767629964, 0.4656302669726191, -1.6344975191772724, -0.09401899507821836, -1.2043077324664175, -0.9519831452133691, -0.1381702566145024, 0.2520309377095477, -0.2331248116596479, -2.06003562094124, 0.322074284699102, -0.40759187302799393, -1.3307834398877647, -1.0564413432257147, -0.6477697007352456, 0.6459080637831179, -0.5581131673784079, -0.8586182869572896, 1.2824451288381935, -1.0359955303020167, 0.28691692744440783, -0.18287744871781186, -0.7380525104122792, 0.8141035184910783, 1.7328575794027314, -0.4348171101026984, -1.4040187830730984, 1.0969260205627656, 0.7449898930358968, -0.08704394582525601, 0.3171147823256369, 2.4862743596164845, 0.5994314521811915, -0.5576329545906757, 0.14537872759012435, 0.8479341142641773, 0.7404280129606242, -0.022978851145493157, 0.743318250398542, 0.19076196662696007, -0.7082355816899842, -0.825624466138431, -0.09641891013156866, -0.31794398811120717, 2.4495180474296467, -0.3755888643691273, 0.9649563615868115, -0.008011250051243025, 1.2680095388874673, 0.648085522331793, -0.1877657244070235, -0.9219238964958657, 0.538630971270744, 0.08485370078760396, -0.10639543120147535, 0.5725428025984228, -1.214454057593932, -0.7282823079157424, -0.7266831892616621, -1.9589784532747208, -1.4054214182495766, -0.41646621234441644, -0.6152547084347159, 0.27099055727904875, 0.6992382551902233, -1.4071751965115633, -0.1293519233023315, 0.16275538617502022, -0.37852129452571515, -0.9727581073216512, -1.8317363158984155, 0.16144739751479856, 0.33333893159852807, -1.6849551677444934, 1.0608501038307308, -0.020591091940905356, -0.011002435930057567, -0.15097013769983447, 1.0874150041772994, -1.393571873022777, -0.5090752409926054, 1.0216076789860415, -0.20667385714299502, -1.477109650953992, 0.09547218633800995, -0.658104013000395, -2.1313245584514, -0.10320346282654168, -0.26113047006991574, 1.81989032417768, -0.8889883278652391, -0.582421535324408, 1.7088031576745075, 0.9695437710993268, -0.8050471924549782, 0.02824988656780761, 1.0941997394060157, 1.8376943122903824, 0.015479273489953198, 0.6275894390781948, 0.0829918048639812, 0.8786808563828452, 0.48249304106372054, 2.4223829282385836, -0.9560704890411221, -2.3318584146620696, -0.46634543701653536, 0.9013297837309315, -0.6946417078079308, -0.09914625170955967, -0.314016974138003, -0.3880781600993421, -0.02465517761191424, 0.7674171745091642, -0.0783450848098373, 0.30876197452772103, -1.577287360778546, 0.8326978740875411, -0.3441813321055971, 0.0319284045241477, -0.5015340289883317, -0.32508228555464597, 0.92073456157898, 0.5612336578409685, 1.0325106865885398, 2.3847132391091184, -0.40852613539462196, 0.9554311198209848, -0.3990846134376793, -0.24510146119303652, 0.8335396760483668, 1.6467161878813392, 0.6568330326089455, -0.11276911905528217, 1.5294426664647005, 0.5483371360719848, -0.2329620083376029, -0.3967849357204008, 0.9148407555572894, 1.6050402938416357, -2.9428447011113548, -0.2168995725063932, 1.148739459759032, 0.4227955211813445, 0.13027536776153376, -2.2933559288739556, 0.2192341514600329, -0.4295738439632568, -1.6857302027738033, -0.1229881816928643, -0.38187251373288095, 0.5166119255258881, -0.09489863756784978, -0.45119424550752, 1.371051552564657, -0.37871552728713564, 1.2709752456831998, 0.44269716788900554, 1.780116533954443, 1.160280414366711, -0.5714399156502882, 0.8998960442422939, -2.090856664791562, 0.8091998646085418, 0.22000793764017826, -0.2831617842358367, 0.30116100838686005, 0.6049387168969067, -0.37163289511453246, 0.3811731767416014, -1.2772207582864032, -0.6895590782496919, 1.08479322735831, -0.9996332523062558, 0.512596292534485, 0.5878768401008256, -0.7881644833455189, -1.293819653727424, 1.0157398622674194, -0.3475429075529879, -0.949872445492896, 2.1878902458359413, 0.08840065979024929, -2.103902497653892, -0.16592833072731855, 1.0212483522763822, -1.140231748915159, -1.6381564958166155, -1.2111063358442309, -0.569981214074559, 1.0467942082609625, -1.3047737918211724, 0.2052785253391568, 1.0994199822235695, -0.3296649538470928, -1.9635008671957566, 0.22981969545828423, -1.026831259498087, -0.7399911015610873, 1.1639892470105269, 1.3006338711363246, 0.9371831441804881, 1.2781213098164248, -0.8494534016678541, -0.10983316739338175, 0.6093394242641351, 0.4492117490514758, 0.9669894407785137, -0.774063961073598, -0.36150801685760336, 0.30062434504543956, 1.1001191015346337, 0.005940161834401232, 0.5390455094287437, 1.5596383945487735, 0.367350776383124, 0.11721572055070084, -0.9253480596497727, 1.6200987139701424, 0.370881621545934, 0.7211670866130885, -1.7002608102040182, 1.6483965840986077, 0.9967339227561758, 1.8232414422366277, -0.16442750305245088, 1.2539791134817004, -0.14988237224542786, 0.895045708892189, -0.47974556794244627, 0.3135074301292443, -1.8118800140841327, -0.548817982003278, -1.2403533819187802, -1.4000353257555684, 0.7404158498379995, 0.5040104430094646, 0.3531554833987208, 1.0924663044675884, -1.5965108569046147, -0.9238234106497981, 0.9026759651250429, 1.5068020555319221, 2.031036497862243, 0.134638771896455, -0.5028977998001177, -0.9210020194124652, 1.3189031181965465, 0.599646302203704, -1.9679852061564835, -2.0381355781703627, -0.17591053199694667, -1.746341314784212, -0.8291363479173841, -1.4549708830154924, 0.6017608273021166, 2.5826964208862435, 0.49331869179565385, 1.217801863695843, 3.16577966955315, 0.7878451676747851, 0.42198702732317284, -1.6408343818081748, 0.10620664756089203, 0.06473111063313579, 0.28244740697884096, -0.1963726766899474, -1.404790650638808, 0.38647220334069177, 1.1478003027702137, -0.9805585118836945, 0.29048279481234174, 0.2524397162185937, 1.0627196019342553, -0.7506599827670327, -1.057535564063194, 1.4827560053164304, -0.08711430498496121, -0.25362184929384546, 1.1931987667004529, 0.8354182102188863, -0.18123014146220037, 1.0524952886850323, -0.030550329885946543, -1.4123745674128296, -2.163480327455573, 0.9398808849913275, -1.064960198716617, -0.7873537596110172, -0.432613110334741, -0.0801358884283829, -0.10262465285727645, -0.6394986927215275, -1.4335765159756146, 2.725456749463276, -0.3690246156682852, 0.8691883078511426, -1.5797598445528422, 0.7158698677170471, 1.2385315055975263, -0.19544428947996065, -0.6485800746765534, -0.4005643287870536, -0.04162557471489762, 1.1145737042746604, 0.9624946883346472, 0.20395530655480962, -0.1495293637698552, -1.9756795863189096, -0.28472178017673333, 0.05119346438133693, -1.7804678740170587, -1.856180059953171, -0.8003358948603607, -0.5857195355418386, 0.4761029584109475, 1.6996840689142814, 0.1476395216480442, -0.8527651177645921, 1.6981858989983343, 0.9119785010624852, 0.3953713844599398, 0.8330101971595705, -0.6556586300690431, 0.8819167089427922, 0.6162565946030859, 0.3026823886999152, 0.10589768478901616, 1.76806895784575, -1.5998928928060578, 0.8851050420006557, -0.3209833165273024, -0.045840339143634716, -1.5547913411912238, -1.988468649197632, -0.060907829955474994, 0.27924658863858237, 0.7774164343110216, -1.3129768892943472, 2.0473607319066214, -0.6501558838430478, 0.27143116046956395, -0.7284571168761801, -0.8477625937808698, -1.446297847254664, 1.1229974722191507, 0.3351845955651897, -0.513388264215728, 1.7888359233047841, -1.650934829089736, 0.9027325474114876, -1.514962585577527, 1.3187368573745177, -0.7469305735894981, -0.29652713446776685, 0.5615373577410228, -0.5659111286838002, 0.5346147351678664, -0.035320318588612856, 0.025738758511001523, -0.7750202878340101, -0.49291907394368717, 0.22262277643852715, -1.9063567265414338, 1.2931713341347688, 1.4039614107949354, -0.16670322877629112, -0.12753945611314327, 0.58486115065413, -2.008081326534357, -0.3940597601659344, -0.45737750188784115, 0.8025502021327587, 0.4957789809027197, 0.040978216611552126, 1.0627582695722342, -0.0840129780972946, -1.9848907326411416, -0.4875370787489936, 0.5095770707793722, 1.073961264766562, 1.1646128615894944, 0.0038386226808692836, 0.15897656819971434, 1.4127438826975625, 1.7001680671492485, -0.6572197790582149, 1.7345999678390729, -0.9130252728540633, -0.8717517567403511, 0.45966912528780407, 0.0703867284079051, 1.1839404440222745, 0.7527572999078, -1.4385925957182673, -1.6165701555376868, 1.7500359336098406, 0.24848724363006466, 0.5423174781913348, 1.6319419385002085, 0.028447322901912726, -0.2764271186338034, 1.0560053961507179, -1.0313602998779066, 0.98072968916184, -1.2359336655481186, -2.219809574698121, -1.6033565723572905, 0.37256415312125596, 0.49795627797636915, -0.28288989443449847, 0.06125560563218175, -0.4424674181566744, -0.08054467223426856, -0.16379087512270196, 0.6481782648858093, 1.012131908076042, 1.3059757520436746, 0.4345579788648326, -0.6085172232203463, 1.0162686308913167, 0.6695629961851128, 1.2745199742118307, -1.4867653234882952, -1.0876220473702571, -0.1968855059509232, 2.0670303611954637, -0.6484923576938678, 0.558881207442936, -1.1592230477134142, -0.1350232441525061, 0.156854055850999, 0.4375833758441586, -0.0011395214646760224, 0.7832333066626935, -0.3527537139082735, -0.21114467748346538, -0.6035311847459858, -0.11924748498851316, 0.9537245072766892, 1.3633168856122495, -1.227427631530738, -1.8722233460812585, 0.6606904026005856, -0.15756158086570227, -2.2264157834963143, 1.0656296003497172, -0.9758487715749253, -0.7974168038541928, -0.044763845191282736, -0.4282165497596246, 0.7222035708228616, -0.9382025166033617, -0.3704880246526787, -1.5010397495657277, -0.3188611423117426, 0.37738040067779643, -0.8320837294243392, 0.01254436177733252, 1.1471520284917676, -1.6740524223348157, -1.1734293928316473, 0.8132923572404105, 0.021641708734973876, 0.2535463271633976, -0.6105657098011463, -2.380760040461205, -2.171393045801207, 0.11515199492613193, 1.448074683246846, -0.14530082623748186, -0.9903946616765744, -0.049725041413907226, -0.2912627067336495, -0.5911316858954233, 0.5581215544919673, 0.3133607144538404, -0.4294045847507177, -0.6221800338116957, -1.8659214370235035, 0.0411571665646803, 0.15965472739387224, -1.0920294197848077, 2.8502327323795864, 1.7175502077256033, -0.9209826198095037, -0.8728444386876593, 0.2660823963468579, -0.46016851588388963, 1.532710304143413, -0.5527591067004467, -1.5556977054744403, 0.15707988140491205, -0.4477712502982253, 1.174251072406788, 0.4530251017910742, -0.7674367905069013, 0.5734678986270018, 0.6254234275015116, -0.15752590568424865, -1.3564826217689596, 0.5185660130969852, 0.7250788794170488, 1.5631324954854433, -1.4974278428206287, 0.30622562861236186, -0.44238951422113715, -0.09182878424376942, 0.8052985359603301, -0.2706954518384788, -0.8877833256970493, 1.407163214584611, 0.019927967258273598, -0.9787929356221388, -0.9804366290585916, -0.16896285605985542, 0.33671952513174624, 0.3732623977844279, -0.3262977084013707, -0.08685034436325625, 0.6150894092276582, -0.8293685891736742, 0.6550396358588055, -0.2178685862284234, -0.03058388506235782, 2.306404441715685, -0.9001720330865628, 0.4676678276589463, -0.07093410300165336, 0.9767249255013635, 0.5665154397801794, -0.8906350177229292, -0.665012303135202, -1.2005337267144705, -1.000683540916806, -1.106467843753669, 2.1569626537569517, -0.007838870279620486, 0.6376097980089762, 1.1082985427039542, -0.6377471929404919, -0.6513535993241832, -0.4705757816935439, 1.2686998203691462, 0.19473250432230044, -0.6611900295697214, -0.5068824722394452, 0.08382790963450965, -0.4066635299646873, -0.328625978297716, 0.023526145980600516, 0.0636593090536897, 1.9248503898601657, 0.07016876813495301, 0.5226633622243447, 0.5214485468960784, -1.07518484301886, -0.9188321006894494, -0.39274822567862416, -0.7088638771769386, -0.8633822078600005, 0.1897333507220454, 2.0697474219315355, 0.629892409700198, -2.7112634822342123, -0.4366430969484709, 1.130353809561808, 0.5583172109178611, 1.1184254434860827, 1.5060316190388383, -1.360958175203834, 0.01600002389124473, -0.5255131725387969, -0.690581095024149, 0.3755804738095618, 0.526859420561271, -1.053650331349689, -0.49388659344329766, -0.6337305186329181, 1.8269953263485759, 0.07825633193150484, 1.0858971707147114, 0.754504397875651, -1.1859790099106307, -0.8677950079520502, -0.543141085510603, 0.23546839833931044, 1.322245206879988, 0.6698280962997023, 1.8504153472900453, -0.6311852735727442, 0.15501862191868063, 2.0081022767463916, 0.6170128477940043, 1.5553238932055766, 1.9272046700007261, 1.1618804480251392, 1.3974204722858976, 0.23266330529325846, -0.7000792685138665, 0.2324949670482979, -0.4124325284905427, 0.4663448272314028, -0.7467809754709385, 1.2323803546597887, 0.6642480319123225, -0.6688827455897826, 1.369007434726811, 1.937882693659258, 0.1349632839438473, -0.8323864411271736, -0.2805984630528308, -2.073450346298981, -0.553453484549816, -1.2200739036756623, 0.3179022784971839, 0.6879689281868161, -0.3430425093110234, -1.6212880351557482, 0.7072720215438522, -0.49230473141813663, 0.54939686650852, -0.11646541548811642, 0.28234168419071537, 0.3585047630431376, 1.3860725933423448, 0.07836172914874678, 0.8981857196849432, 1.34400183469014, -0.301021045027562, -0.8099838705769579, 0.36044089601368834, 1.0833435644414844, -0.33900876094429533, 0.5412413880277562, 0.8572177262718091, -0.16297823449058443, -0.2762335410373378, 0.07312833184954602, -0.058239160292505684, 0.29801382878928967, 0.6907189871466571, 0.34005857447740967, -0.20123360386688716, -1.2311727555704712, -0.0009102056668295407, 0.7505911360268127, -1.7638524890482736, 0.6196141775492424, 1.706473547010287, 0.05006098762016003, -0.7352323024591914, -0.935407141030994, -1.8684027215891792, 0.6773610082424658, 2.9241381804612288, -0.2907660824890056, 1.8532931078995933, 0.5590130485817911, 0.8163053838596627, -0.6626849775777717, 0.6244999322090526, 1.6560629226581987, 0.4740205086795006, 0.540102736499839, -0.2723677466553013, 1.5424811709147077, -1.1353357059980995, 0.5494717869273678, -0.13310960473544992, -1.6818823952428983, 0.6868755616206629, 1.1338306628339134, -0.0810610986454658, -0.7503401582950576, -0.9667627282537631, 0.47924289833833905, -0.1662345402539003, -1.1917840042455174, -1.3538333970433494, 0.737725987099514, 0.07849418349946452, 1.6114841766747903, 0.09201911901749125, -1.5422815715886458, -0.345622744326855, 0.5801750134960231, 0.2391259028399196, 0.11445569702954521, -0.17184210250074958, -0.026216272800815236, -0.3842981291750186, 1.4927464715678764, 1.730575888709393, 0.24440259916646245, 0.09293360364501212, 0.5344075150312367, 0.9856479097508337, -0.046953898869987756, -0.22723454123920675, 0.07660435640966358, -0.43745142213471366, 0.7758360949526776, 0.9453782878985922, -1.422391931512346, -0.8916363123610663, 0.055298698518328596, -1.247953683842785, -1.4711375031686162, -1.558574556827057, -0.09839937594428481, 0.42849379319989345, -0.15118874284176376, 0.7033332458423611, -0.1863365247668859, 0.14043552039773044, 0.7006655964779972, -1.0345594692203113, 1.1642674961678225, -0.9059588832101285, 0.2716946968027884, 1.4332991236780788, -0.9833622225434931, -0.13904066861858094, 1.5304537230564963, 0.11046044598613695, -0.04336540537469752, -0.7899925354113908, -0.3841949627521676, 0.21376482104943137, -0.5601333491276549, -1.6631000933977789, 0.0451214232403857, 0.9792819502702249, 0.08086441714838388, -0.06817008271609193, -0.14148479610788564, -0.14334077809339352, -0.9224651546770906, -0.07839911635347602, -0.30325535143882715, 0.08277609129382084, 0.9152295050511218, -1.808791471783784, 1.4633072528299886, 0.12820249829865094, -1.448952240808923, 0.9640887897479967, -0.4428618833954216, -0.026830836598622957, 0.10762482475297422, 1.4920806998604224, -0.8233381772387715, 0.007109818933916967, -0.3206480915513808, -0.6228664368621663, 0.9502027139681976, -1.8505898166321255, 0.8630194107940736, 0.45686026926042217, 0.3279085195755141, 1.98194947802797, -0.7458747309920756, -0.27388674436694554, 0.9828246876263236, -0.3196969333313605, 0.677147622899748, -0.2348300735217973, -0.880560599479651, 0.18932589886311343, -0.0009627933649361237, -0.714981168333204, 0.3246638664994222, -0.46965868818929524, -1.133566870038267, -1.4150187840980573, -0.8237851473207559, 1.2473513745187725, -0.5760301236587846, 0.9187812387843977, -1.218207443372477, 1.8030328252292112, 0.16573364837152343, -2.518084917336931, -0.5215593938869663, -0.7927160218762137, 0.8435704175171518, 3.2638317007717843, 0.20970319786088376, 0.3361427559430515, 1.1828327579191658, 1.3154576573920531, -0.5442040207003702, -0.7201532836572945, 0.6523090305640161, 0.9387384213990361, 0.4744374631227944, 0.05112088556864101, 2.3450085212173444, 1.5948321033589934, 0.294833094099205, -0.5310673161158714, 0.06307472743242996, 1.0221008983760647, 0.6805778382063766, 0.2372244557053817, 0.008345869862231918, -1.5530349499839209, 1.3793818680525787, 0.9776278447939383, 1.015204876412018, -0.2540168251998875, 0.13749577549867584, -3.129072763250114, -1.8053538576113273, -0.11084659472961096, -0.1291501476787894, -0.8318624143609997, 1.5328277475562986, 1.6679174153522704, 1.765775338804282, 0.04767271352533868, -0.31109206046179017, 0.40233296550256176, 0.8869500963282051, -0.9320095047227178, -0.5928161601372426, 0.42895452780574517, -0.2542949642667967, -1.1546011937286191, 0.7877670768947806, 0.05340508686571764, 0.8313073091372811, -1.4692554434540785, 1.4786256413492105, -1.5017018623508178, 1.363391285957861, 0.40841370112823205, 0.07953073329728189, 0.3761412624953665, 0.08580933903636573, 1.1156030914905979, 1.1244995147673555, -1.2938560273689603, 1.516148987575013, -1.2462500643773806, -0.2900549860813824, 0.25795786965853484, 0.004254848095274977, 0.8315836686362941, 1.2895064811922325, 0.34196330155866883, -0.1596492108470195, -1.0520107869916517, -1.5429908615926335, 1.7758364336226498, 0.22179646767716302, -1.2743569249260185, -0.011547460414047191, 0.9948098656363951, 1.2540247180863058, 1.2885192916991282, -1.9698674665685096, 0.4101020748380603, 0.4154363369920941, 0.44783886986362303, -1.7037203368311253, 1.0778241161576048, -0.5529553600944668, 1.3709562253055159, -0.9984545718603309, -1.6162933326565514, 0.8403711554392964, 0.5299091188096366, -0.7227892816181949, 0.8827120319776675, 1.1030917562145592, -2.634895184574381, 1.2473882858992085, 0.2895114803418397, -0.24355485543495595, 0.5322958807004866, -0.7732328661330035, -0.3184188302939072, 0.15053206063624316, 0.3429271146249122, -0.20363340716919842, -0.2955601041351464, 0.1689127589534459, 1.4469829945818864, -1.873631334095751, 1.279079474718257, -0.5781483950073876, -0.05275756537871449, -0.481213067179667, 1.0570560426436535, -0.4396951183442218, 0.08033213214376955, 2.0567595641015224, -0.019518320175053373, 0.010909267800924497, -0.2481385444485116, 0.006125843174185822, 0.3047714221148442, 0.6183689722702874, 1.7914365897653128, 0.8924990107772286, -1.4164352560199638, -0.9006995422410198, -1.7110905742026359, -0.3398041108331897, -0.48241651169864735, -0.2958518737253035, 0.44247011818112264, -1.2985236064566303, 0.04240394707821163, -0.3745733329629594, -0.32389879778440694, -0.7127456897611489, 1.303069810194132, -0.8246591560162854, -0.4490926039915208, 0.5788538273302509, -1.4133951421887385, -1.1578511816563875, 0.06953843675535708, -0.681261225905841, -0.988922415364371, -0.5508868446500444, -0.8815091221953466, 0.6609784736060261, 1.0519380528291207, -1.1100436332584305, -0.8719349948358224, -1.738364160746553, -0.6957363755030911, -0.12789610437588464, -0.5695736139568665, 1.1328404960856373, 0.6542384213601453, -1.744547565594446, 0.9283367736893351, -0.19145046223672071, -0.9163953849230017, -1.970201775303873, -0.20879735038129435, 0.09133329013024494, -1.7853658309646765, 0.025666916355822127, -1.1814359171850015, 0.5633486733417415, -0.17244238434376155, 0.3450284371241652, 1.0608587874068869, -1.329399887681715, -1.116739896170456, 0.2764172291963254, 0.4406319275651669, -0.9480667437905903, -0.15957630610679158, 1.6530377345600944, 0.4363777665603931, 1.027756803772952, -2.4595446658985174, -1.8653228855785615, -0.07451081564517849, 0.7602005482496128, 1.2570771308478246, 0.5045831622158683, -0.1753698266080349, -0.36655345127066885, 0.638217714270415, 0.33017267962932106, 0.4773701293295076, -0.0908587664955484, -0.252998373273862, 0.49270714884505395, 1.3165497598817597, 0.5816784469627271, 0.595547363237925, 1.3943649068053103, -1.1540859932198384, 1.1724741787921071, -0.7019082221121142, -0.6668309150471265, 1.3788829238653608, -0.2754152418358549, -1.0790759729120887, -0.017758350229449466, 0.560310968739699, 1.0107853415528583, 0.8879135055107972, -1.7932614870119192, 0.5888359198191978, -0.028086043605193692, 0.4740011349475199, 0.7148328560085182, 0.6477706542335196, -0.7067998444844801, -1.9431735009651927, 1.7629228188336885, 0.3655866415429492, -0.4675861126019703, 0.18175192336471743, -0.9431794576382292, -0.7369212656544064, 0.559958470439987, 1.0217970108262058, -1.8375715091622087, -1.9947554671619152, 1.2334811919489894, -2.0740799463959148, 0.18467743901538003, -1.1870528448851958, 0.9676962188511465, 1.5466159721177701, 0.060772253339051834, 1.2530381515605784, 1.33082356064584, -0.3974115884788491, -1.7454815768316045, 0.16579114380338186, 0.027721956551349243, -2.7448681432355446, 0.37492444502465644, 1.2711960563998053, 0.5081424500486753, -0.508209175748621, 0.03961330186186245, 0.47283629611717953, -0.5319482891553065, 0.3469979894511824, -1.8640525280635767, -0.0470815073889694, 1.0221385438455206, 0.7190640924382905, 0.2942349081057214, 0.614643584636105, 1.6006117257439723, 0.6671761528621447, 0.018515517661954906, -0.1159376441226933, 0.6900480772581778, -1.4506790614379668, 0.17951525035459373, -1.2857313570764002, -1.3261527656984569, 0.3606883706185159, 0.19667047158250048, 0.06699887008710252, 2.2673623514898322, 1.2132240202631877, 1.3236114733891422, 0.4652436632157841, 1.3126921151154958, 0.6336942473628713, -0.4703441893832061, 0.15427844164144763, -0.30816365983155214, 0.43981724544776474, 0.14998407821383383, -0.03669898613824293, -0.6196310589754589, 1.0800602805215693, -0.1943481725961507, 1.1029029678599016, -0.3903003255255865, 0.0965579691226314, -0.38588361299991747, -0.7110244421818451, 1.060191538089787, 0.6725836083435238, 0.9793882658069887, 0.22946440305315852, 1.1896920422978132, -0.8497695916410661, -1.3094859188945276, -0.2958628771698636, 1.2465874787516211, 0.0861895629896425, -0.05922364611815001, -0.0026308594451011943, 1.5975265785322483, 2.7608441719881034, -0.32182404114595087, -1.6732448211090645, 0.698251392717236, -0.20273869909822248, -1.494002916919861, -1.101161748469121, 0.29769604706737307, 0.7771028556728877, 0.9819902149636953, -1.2663619805749031, 0.45602545390033644, 0.07979263292064342, 0.09735565583240037, 1.2019162413111346, -1.5522274564652263, 1.4935623439283345, 0.09646963526013265, 0.04684201987184277, -0.5718136681217395, 0.6488465428372744, 0.2657583384871201, -1.6259642825561218, 0.29757198852703853, -0.4233733778779413, 0.1399461801002825, 1.0499162645037172, -0.6985073797267204, 1.2738483116642474, -0.14654736057741657, 0.07501020284279059, -0.6740742268734452, 0.09060204189202169, 1.0439609760139366, -1.9239507929255162, 0.8575649584576374, -0.6509888332618443, 0.040745668120563884, 0.09295389895286503, -1.6981649056640593, -1.2976974649716475, -1.54588622568227, -0.423432387902, -1.523966728820435, -0.4347960566391261, -0.6229831847289149, -1.3597855467786786, 1.8780343363293284, -0.6585923786105817, 0.275951361378256, -0.5972007100882359, -0.34868317447471564, 0.8508701644870708, -0.5339298154072609, 0.8729353366195509, 0.4406854499562739, -2.2018793352349224, 1.9080207541384013, -0.07584333787833752, 0.5959853863146333, -2.5010313590193642, 0.9239178615400208, 1.2063370833267226, -0.0038741633210369214, -0.42267846132621295, -0.27916704763066674, 0.8697618392751716, 0.7404965255558674, -0.28969497563294133, 0.6832160541582346, -1.0345581705558702, 0.162297576978053, 0.9080370107578135, 0.234319090937345, -1.5330086352626584, 0.3180862611930098, 1.0293817173243731, -1.1737157324763199, 0.20586112389747663, -1.3690149711685713, -0.3132998109168797, 1.0092866791790616, -2.25243408926124, -0.7682934348612936, -2.2468744748791813, -2.5229230897029407, 0.09743682062698433, 1.4650162017602248, 0.8416278078433088, -0.5750732755253578, -0.4408731900760829, 0.39163269903307524, 1.1393967723803422, 1.4676924016775652, 0.1658800174457904, -2.009796656686934, -0.8202360329960682, -0.39363397898785474, -1.648843226510575, 0.4487797109180175, 0.6859738286266193, 0.5074440897751826, -1.5465599470838793, 1.6905418252294457, -0.0773944995643729, 0.6581658264224163, -0.886152116897144, 0.8999252005589892, 0.36279856904334634, 0.4476991816972373, 0.005782165930632618, -0.45008133685802737, -0.560212417696619, -0.8931230938144323, 1.700970880199116, -0.19397160543408337, 0.30498769429627604, -0.12518264066062743, 0.5230853218521622, -0.34193445323425314, 0.12113524110097536, -0.5032116287073438, 0.4269781631310903, -0.09386889936206765, 0.8238339169248542, -0.29152569051052457, 1.1872006044454384, 1.5854985877779257, 1.483583150216275, -0.7549046790780348, 0.7819081679054819, -0.7784451987027868, 0.09526198376083922, -2.1467322746713555, -0.005312624744224765, 0.5695950271017218, -0.8416559708806651, -1.1447318174112164, 0.41682422234249666, 0.3976565070317297, -0.3712156919682918, -1.3640842749015587, -1.84395433571043, 1.9347789227340404, -0.14805692526518616, -1.4601388846445962, 0.6268953845339557, -0.5469623098390588, -1.0856784734260365, 1.9370358438464597, -0.7109916416946255, 0.027559394850760508, -0.1889322190192024, -0.0717034450165176, 1.067705149446601, -1.0927431268715562, -1.1337638678089415, 0.2645753932970023, -0.02217405180727302, -0.16844428568431927, 0.2733265320606315, 0.41755458547062807, -1.0853376272636048, 1.1581604541227821, 1.857007614308509, 2.218446285591359, -0.9967135180071782, 0.5756165136206333, -0.25675769959280165, 0.8063608477758305, -0.21193257743419688, 0.5868120040087623, 1.6214595400213059, 0.7842867688169761, -1.1903957954683242, 0.12214457479004305, -0.3645503187016929, -1.0559496929493302, -0.7533041216855882, -0.13125294193302986, -0.8089875221758599, -0.13926519027512616, 0.5149141881243251, -0.5251240550271697, -1.0489099206707277, -0.9875147950607542, 0.17493212457599636, -0.34226012793480276, -2.307689733787823, -0.8917929834893448, 1.6318853358065326, -0.7001119525929917, -0.838689026914328, -2.3655953451051794, -0.9495236143213276, 0.6453545861312434, -0.041687944503056254, 0.8353073246292643, 0.17928051340868573, 0.11566162663982396, -0.7896531167082044, -0.5332840442754242, 1.2639564686129703, -0.957536244630091, 0.39762415172622106, 0.5486169460680425, 0.14337005633541133, 0.6656024595788864, -0.9506158483465207, -0.23412803096733312, 1.0498822102513077, 0.25566363260800296, -0.904004957832869, -0.8570369921363565, 1.0765764338468657, 2.342620506343627, 1.5761800652232394, 0.5847466103562466, 1.1414507898753945, -0.1527620351174307, 0.023865093946965264, 0.08397609807481017, -0.7090289584056292, -0.27888828844125746, 0.41715062071152526, 0.07188593489757557, -0.7866022613996545, 2.0250201111865542, -0.20756586079536854, -0.368061507076177, -0.12093046446969723, -0.6626609732639108, 0.9496519143450587, 0.3472888393896991, -0.08561157119707678, 1.4093793471338238, -1.046087521090749, -1.259702037444012, 0.9229611528621875, 0.2640019216809605, -0.574675450912096, 1.3517084932375012, 1.3956727379757927, 1.5145990356287002, -0.2773734563253485, 0.6769535880984279, 0.8818938347740919, 0.2537844456590237, -0.9783338713541552, 1.457605149627475, -1.6394947719694237, -0.8488988725598013, 0.5970817875018619, -0.4140944606788279, 1.3064731192191035, -0.7458844129262706, 0.7724108105585458, -0.6799622125856203, 0.9037415503829513, 1.069275902242942, 0.7435148004555351, 0.18984748774581942, 0.3547607615719452, -0.30404440664145854, -1.1197078563814842, -1.3033829239950863, 0.18300821415074386, 0.3357148087010729, 0.7431007090937297, 0.8512499719098795, -1.1664752679114658, 1.030205034368, 0.7029278509454566, 2.233851539389384, 0.9114153489574032, -1.360841593061865, 1.54232348885283, 0.009763963572766939, 1.235794822998317, -0.15831772545514766, 0.13743815473916424, 1.9909488454040123, 1.156380767373997, 0.1949070145763459, 0.5260201352978258, -0.9310142793687067, 1.7045344325263236, 0.13695206808336813, -1.2113391102350497, -0.5657796596266355, -0.8208639147158913, 0.6794489045539824, -0.06459963238006784, -0.21804636626058094, -0.15721303433466335, 1.6132369514968226, 0.9729072402822502, -0.33183886274635305, -1.1572598994697076, 0.36095564154484805, 1.3894808334152782, -0.5728482993978468, 0.7251874303434344, 0.1396374332069056, 2.1303537114755797, 2.0133145200781923, -0.3657741326102631, 2.2705479966050306, 0.5299861858113986, 0.6335346295752912, -0.3314339378383591, 0.38020238974946574, -0.9682250086704508, -1.272491263332963, 0.23407350151232756, -0.720888335451771, 0.9405128165991256, 0.4994882470135031, -2.6520144165083868, 0.08345943881114422, 0.553496101172654, -0.42800403929161507, -1.6756745837347282, -0.3293948182313464, -1.1357763405613084, -0.3007098184914033, -1.46159309416392, -1.173274129745711, -0.5798293296829652, -0.0907769383531068, 1.7097100113516688, 0.7356842170070965, -0.19971134161999182, 0.20648747484498403, 0.8289163547677876, 0.22469687488491372, -1.5548422815499052, 1.2538972749595672, 0.32508341249914685, -0.43647940459500356, -0.5757132245523308, 0.4259207046954131, -1.0143771359724432, 0.7324825777119296, -0.05809651082479777, -1.9046206062109963, 0.553089662515791, -0.879435278731561, 0.42215716857975844, -1.12762394026551, -0.16416827266813808, -0.8922758435057219, 0.15512673002591734, 0.11544716610182224, 1.0764673529754312, -1.3609727750111034, -1.080889718423884, -0.3593482907813052, -0.05131689693151676, -0.675264388351774, -1.1084882485639993, -0.6124554913453815, -0.5281168798825057, 2.48042307314554, -0.3299973562812229, 0.9267069205683517, 0.44345705808928976, 0.3491958861933233, -0.9409535067662383, -2.169994816022599, 1.7508434107031396, -0.00295525490504545, 0.07405653271012069, -0.8674397828734751, -1.28997152554171, 1.1058326770607754, 0.6167302942315611, -0.22417806696649448, -1.0371078213899723, 0.062446789777764244, 0.0066600796646675295, -0.6964429139937913, -0.014053259565029242, -0.09937607430541451, -0.27571576849444596, -0.6685839596487613, -0.6838768842258313, -0.5820036745235002, 0.9868634098198749, 1.633197959617818, 0.8639777444591575, 0.9024750392065173, -2.382727738442383, -1.218049193210701, 0.3478129820162172, -0.47190398084671864, -0.9753766164745742, 0.6213728141485527, -0.05319851395227097, 0.7884696207547368, -0.2913636661555047, -1.3929543341518988, 1.682706104963043, 0.13397894838883434, -1.1829406455029614, 1.4906434882740232, 0.33868746092108654, 1.199979468817106, 0.1923672240981514, -0.2716685091852922, 1.1356139506526424, 0.206148770081912, 1.237944864418918, 0.15706595251701214, 0.33466539582488836, 0.20136249287038216, -0.15429635114250123, 0.4132569041818818, 1.9743007091538625, 0.2534573997875559, -0.5370542293497457, 1.2713577451848714, -0.8433208964066056, 0.04314586431066395, -0.9706737457485609, -1.2170096584928223, -0.15974548137595215, 1.0884915235989132, 0.05295148955462371, -0.5433862051897259, -0.17598314219988492, -1.4822633163998418, 0.3243907723951258, 0.49233107785144964, 0.5752079924962656, -0.15253935153905684, 0.9373630947001915, 0.29881227820880146, -1.0031772810446036, -0.2837591698822613, -0.7339777647172884, -0.33239094983466505, -1.144858510201061, -0.057298701672962096, -1.1301455418524786, 0.5405811161748013, 0.5602744708163906, 3.992714505693128, -0.678845939348167, -0.654705156708982, 0.4132904984998697, 0.6083902539918379, -1.2424225257054506, 0.3393228711535323, -0.4582201281140989, -0.14212124204108326, 0.08145046578502971, -0.3950563538709759, 0.7065762587604302, -1.827578873221707, -1.039624125294536, -0.5983202335754164, -0.7938254479530423, -0.14472081665374695, 1.6908378494964982, 0.8947838778340156, 0.6109547990635441, 0.8861339761320531, 1.0981155265416789, -1.034129590546406, -1.14974326913641, -0.8882825635718355, 0.9133962280234255, -0.18278701364147182, 1.9163718497473454, 0.39989260972731855, 0.6481958605665036, 0.30268657179630154, 0.6315251064442446, -1.8937290779408478, 1.2114126514984558, -2.2735883038883227, 0.37112873993254275, -0.07230698508530588, 0.1258179678091828, 1.1475374456873162, -0.8235106281634472, -1.0350157610200623, -0.09305388046584397, 0.4224038974923068, 0.8117802062276467, 1.4941032057562396, 0.7864596209058016, 1.5810122941739329, 1.23417268204683, 0.7605785696786382, -0.5255999211361958, 1.1192832334499625, 1.4378165908649896, 0.7309271498740074, -0.46266909630772673, 1.2129560784937767, 0.03762215542721108, -1.8985829097200977, -0.31963058032353453, -0.4910920875139571, 0.8654503025420774, 0.21309658127796496, 0.10103739449793021, 1.065684652798399, -0.6578048039516534, 0.8856468485809211, -0.729200492049555, -0.27367406705323055, 0.26841055814640835, 0.2009975488761084, 0.940442222644645, 0.618646819197494, -0.3476011299790221, 0.6884698150946083, 0.19294309083216443, -1.0986878965357654, -0.17230027552125834, 0.3938944785211409, -0.20222603474918693, 0.49389252913726417, 0.9810293840332255, 1.2982648273832824, -0.17340827879168297, -0.6519864340321816, -1.5287780524486225, -0.5760009574124626, -0.6785745069990137, 2.5013589050542278, -0.7133594495902965, 0.48701967367180365, 0.3982450698166647, -1.4592175332523385, -0.5344144916022111, -0.8312233017441937, -0.1238635152522253, -0.32003552278613434, -0.3985562678631181, -0.992060062728994, -0.22257155716645982, 0.7667223479075087, 0.6376028538101293, 0.5856864025589902, 1.528794992301549, 0.24711825779589028, 0.9019773636517647, -0.1520520954497012, -0.123173809120899, 2.0378280548996606, 0.4571912126015543, 1.0006385770156745, 0.6874923329265946, 1.0613589231614537, -2.422147704823769, -1.7201455187368262, -0.5225062659229093, -1.226184160729911, 1.1040676414435746, -0.10977700937199482, -0.8227469361243331, 0.5929340483174174, -0.532466081201338, 0.10525967307152279, -2.7276452703681944, 0.37809465269756337, 0.5598783440468109, 0.14956045295413262, 0.3625576971049404, -0.6269274754069051, 0.6144090451082433, 0.6787017534419284, 1.7060032652936985, 1.173569789980873, 0.35690783760111244, 0.335679332810326, -1.2840311487472487, 1.4816902388535098, -1.0032384653854758, -0.29683212419571653, 0.16588508300559354, -0.7295620564510034, -0.05951145473701557, 0.07239750201815155, 0.08255251233565421, 2.0056513687028863, -0.03277261507026624, 1.0264070903550284, -1.412857093307768, 0.12982986800789909, -0.03970062799803985, 2.600998473417486, 0.4409469213043299, -1.065294476524842, 0.14148889880514592, 0.19839031735242335, -1.3747992694344733, 0.984652373569222, -1.2583828478905779, -0.9783029145877289, -0.022634473820413285, -0.2498794079374561, 1.0717089321407909, -0.9294329347666324, -1.689329027404834, 0.643137385602866, -1.360136951317938, -0.7399551874208239, 0.2197360822580579, -0.746423874832499, -0.6642492072217488, 0.2788179711381753, 0.31823833379365224, -0.5034488775614319, -0.23671990527320946, 2.741203807871993, -3.2514425097545003, -1.2424573702403474, -0.5603513127960522, 0.2550185445666004, 0.11942864185624791, 0.4625602407089838, -1.4607643075543113, 1.5175741936157177, -0.95897072122958, 1.4214217743926758, 0.7544620045855759, -0.03425935049758631, -0.6370593857246469, 0.018108775971533285, 0.5130907564615963, -0.094449532587447, -1.8884569490806355, 0.20219403572293146, -0.7725348984804303, 1.3431720059192234, 1.3639516935946965, 0.32921709510686037, 0.06470592374190941, 0.8543554176720718, -0.9548585178177994, 0.009387129826827717, -1.938262641983603, -1.4569736732597336, 0.7747224037573681, 0.29536087748258033, -0.24888637637381178, 0.6555241784812377, -1.0424555339437591, -0.7239745711318142, -0.5715796577066817, -0.06564183774982638, 1.1982273168430178, -2.4877976986746537, 0.36894774117658163, 0.11496819263264184, 0.014216571155784936, 0.6026834238194702, 0.6003516133516335, 0.6769329910278066, 0.6353175403787799, -0.25673697919253013, -1.596884046888913, 0.5171679334264685, 0.10640376678036659, -0.02561857682392886, 0.836068464634064, 1.0076130833558836, -0.15157652351107034, -0.9641776298102551, -0.4213294303512098, 0.47759753589133, 0.640109160896976, -0.8161917509652443, -2.097207460849745, -0.7641568896840027, 2.186252269149323, 0.14657946610167785, -1.153210877188174, 0.2062218871602294, 0.13812399272897702, -0.3196990855403417, 1.0342050325161283, 1.0875796528467465, -0.922181840797895, 0.5030931584088275, 1.2526172889282225, 0.04606504764283412, -0.7809780314635251, -0.2377584303715141, 0.22054619604928868, 0.26305877568326214, 1.1382649220604208, 0.7676513556555259, 0.4947469214800789, 0.27180150673178105, 0.6241209417901843, 0.33261645915793164, 1.349843979877439, 0.9728728062816965, 0.3878556149881947, -2.5487261929778495, -0.021567916240807984, -0.2542131376007586, -1.8319002182762463, 0.47998261858614355, -1.2639664773464032, 2.4194087583028807, -0.6213302144028915, 2.664878361700944, 0.8655855127193967, -0.7078046380544839, -0.6786318573060484, 1.0079165891748794, -0.5799867828155101, 1.1355745832978605, 0.2581316096184622, -0.7338492598300022, 0.007606205098614337, -1.5064384462972193, -0.2598907698792651, 0.48893806840175585, -0.09168359936231373, -2.880837337276343, 0.6486923642947441, -0.15849962493935144, 0.37267819886508663, 2.3099572793793977, -0.32932925790069956, 1.089966458235986, 0.36695608929298956, 1.1837855917266027, -0.08314275271830955, 0.6727974105690013, -0.06775733509493329, -0.7879817641729795, 0.5245315671362394, -0.8940546706753323, -0.12634519536042418, -0.8728058769162322, -1.942133449193203, 0.29079796335637265, 0.9929228910424645, 0.7007794646756232, -0.5913979158186541, 2.5081835168068345, -0.0403342331371333, -0.6643176226759293, -0.1715561429788788, -0.9868599441297035, -0.47660872603763327, 0.9811062782288453, -0.9956153212494456, -0.4425998161109285, -1.286642313305233, 2.409094028979052, 0.40670178235814886, 0.8500923362061918, 1.4672436657244423, 0.4767558509739758, -1.63982901456506, 0.8607900681725265, -0.7600997991218551, -0.8485817447237384, -0.23513102783984458, -1.1496946260944607, -0.7182723536125235, -0.6865696193227134, 0.12476999499144772, 0.690698244312843, -0.4026213235468643, 0.7551454931219217, -2.2651988450054032, -1.5092743566696443, -1.1381147124827482, 1.120520660790425, 0.0013611813626835199, -0.5588818950605422, 0.09410529976435016, 0.2603707738705393, 1.2098410119764456, 0.3008730757933455, -0.3518771471493688, 0.8506188922623207, 0.8873196988363031, 0.36408236722973114, -1.8395052114294668, -0.3001382215697174, -1.1408825092987749, 0.839410842238123, 0.1727838523649478, 1.392684171053879, -0.43616017187083167, 0.763869974915399, -0.5097201959769455, 1.0307175036270124, 1.4087177615707431, 1.3398285924548783, 1.4548558805590974, -0.6345970871282783, -1.0705983156038787, 0.8059610606923844, 0.428489646417499, 0.592692791579698, -0.745945603204289, -0.7262751972135478, 0.5387547459223485, -0.30418499619976214, -0.8191734500172533, -0.09725932797646206, -0.3827807164460617, -1.1222055507937436, -1.6929503529995023, 1.4986992955640408, 0.8602533684705281, -1.2312267102980987, 0.7763832747678279, -1.0975949484770953, 0.28023159516225365, 0.8717652354095506, -0.5023649224973856, 0.42101564264621766, -0.1190383223888924, 1.2381981026891196, 0.03083389332127311, 0.5234261117096237, 1.0051151790723474, -1.7354348103668888, -0.26293340374712976, -0.23581301654199371, -1.4019669768285103, 0.0989646276063568, 0.040740232067340176, -0.7920949023560558, 1.0686067743376668, 0.6129648751373444, 0.6222932272149215, -0.41662373832243166, 0.4282814441792623, -2.130942173217617, -0.8254917019799897, 0.4262935620947009, 0.9026778405408068, 0.3233755964427905, -0.7160913105938194, 0.3325096158199788, -0.3284110662400666, 1.768292455353842, 1.76188695664162, 0.45208302684874924, -0.17115088976826967, 0.2763951967385692, 0.927456483086641, -0.8470859883923704, 0.25814244085741644, -1.280635297775903, -0.04485624023984228, -1.0921419242509969, 0.4824712735018986, -0.0897114712415604, 0.7634089905262683, 0.1446133658892012, -0.41104209474089365, -0.06564544448053164, 0.40736036654795277, -0.9017465277655942, 0.623493213646174, 2.689458368114898, 1.27339516729365, 1.4070531319572352, -0.23414184497055995, 0.2741992708583814, -0.5545002808707312, 0.4098618258633221, 0.27137443641264863, 0.8103058302268545, 1.885276293472379, -1.1743863567443098, -0.2248004296144872, -1.3152621052277143, -0.00045208119121558705, -2.10484782186583, -0.761738015301666, -0.2660712613641677, -0.6930931406768892, -1.1421579444841392, -0.7834640278783463, -1.4157780033683287, 1.0467701813099863, 1.3883203061691174, -0.7277464790165188, -0.021597260805819866, 1.5040623467580747, 0.7255897555270675, -0.5674226517992905, 0.1381782852985324, -0.47116275803195196, -1.604096185511991, 0.6037632714426098, 1.501704091576035, 0.3231482017593995, 0.5188168355436036, 0.46008721389353124, -1.3123457925707476, -1.4335166681136235, -0.45272344514527907, 0.7164714434229613, 0.821058009089515, -0.8389038893870595, 1.5780222296187982, 0.21229002963534516, -0.6225925474371448, 1.5005464444160455, 0.21185163181961444, 0.7092466778804171, 0.5923418321378195, 0.38218199300237116, -1.0583843806706497, 0.008793951960877818, -1.0475117805883567, 0.9527570024200169, -0.30864080345590567, 1.023985907969262, 0.7065511107989679, -0.21295598193539428, -0.5683916430530467, 1.260618364116642, -0.6438366952595264, 0.34442879804771, -0.4280422679871164, -0.5691124936658767, 0.6296760033130623, -0.32388939074340634, 0.6453751080681807, 0.4514433750780366, 0.16531218532306005, -0.9724237774090443, 0.5426369289661508, 0.15608060236377885, 1.2551147966698208, 1.4106476970901212, 1.5545814161247786, 0.6929441777573835, -0.5227934952542113, 0.642762909937115, 1.1506617961483512, 0.030419918272211983, 1.2339888048786922, 0.5744907545112368, 1.1364395858546295, 0.32562608205797644, -1.9299561200178084, 0.12098255920820553, 1.4048698601290468, 0.8412190680839369, -0.787064388525277, -0.18990251038571768, 0.3793720264598098, 0.9168750882029912, -1.0610057708955003, -0.6038725950466981, -1.465051202721334, -0.540418667366263, 0.14735701731994427, 1.4896490251506866, 1.3111505025703674, -0.8039815663555158, -2.9503961150593208, -0.9212398414088779, -0.2799978451376243, 0.5609520345165439, 0.17729178310581795, -0.46937583738810496, 0.33134508965023907, 1.172954574511905, -1.1042336615793633, -0.07919516747498863, 0.08433103035142675, 0.586425121648387, 0.36106144927220096, 0.109684099879436, 0.42982338249631574, -1.1991249908689698, -2.754312743766403, -0.022542190128727574, 0.36382631928352965, 0.7626356853802829, -0.1112824450938843, -1.9592488558579275, -1.4253631540127667, 1.2864196192430855, -1.3688621860819221, 2.013929217670149, 1.1781157498838986, -0.5474965250766721, 2.947919634247622, -0.17011327272330795, 0.028778553202360672, -1.688315331990868, -2.231602123836522, 1.5095277055604794, -2.343444466198123, 0.027023071274744435, -0.36116904672056194, 0.2344560319393464, -1.1721293582874894, -0.873332218432007, 0.5086034924395614, 1.4472032012236835, 1.0898432064054255, 1.655555799663596, 0.18315700977746557, 0.8721198224485615, 0.24944213391822664, -0.580610204222158, -0.9996820698930834, 1.3772669658773957, -0.050990717041385136, -1.1082486532942097, 0.6180905190602723, 1.2827461388690007, 0.577345170255301, 0.07389791351009574, 1.81223891212547, -0.5141875366096093, -0.7273102656263484, 0.9715206432714675, -0.31796542170215686, -0.13213927323711364, -0.9590622359619784, 1.4336153354244423, 0.4362551285998926, 0.10382739441279716, 1.4440207145196013, -1.1612885958019825, 1.415402340295014, -0.21807208073638149, -0.8013378129561279, 0.1033776776737011, -0.34291427496212346, -0.01794280245744443, -0.4882739630224828, -0.23909906822338448, 0.030093098478104822, 1.5407243797167853, 0.782602206771609, 0.7572816247382932, -0.10470434759424856, -1.4351808455882666, -1.399353692699124, 2.11854026098791, 0.6495226583792941, 0.3118097313177649, -1.2229023663997851, -1.4533266000777136, 1.3878085491700711, -0.8090562052504102, 0.8271497214155612, -0.3741546121476189, -0.8323880958463103, 0.634828558415933, -0.5979557051047101, 0.2495344277238997, -0.27425940599635196, -0.7300327578595771, 1.628142702096856, -1.9838697748222023, -0.3809511403174668, -0.061791309476625755, 0.31511451601298707, 0.6185817590290371, 0.3222185462522009, -0.009653576145313475, 1.0316269389937256, -0.9178061554136502, -0.3438042995697897, 1.1534809332250548, -1.4856276785571176, -0.07959365587430527, -0.04688486048769934, -0.9161332361660538, 0.08427819022552858, 1.3518779700920336, 0.4577058801865242, -0.6898500258887091, -0.6199824537950855, -0.4624080690857492, 1.9019215867289005, 0.3647922620491116, -1.704381260186116, -0.7843036210737873, 0.8416670173253115, -0.36926396833100866, -2.2144724286135653, -0.3798187049420632, 0.44957108887168246, -0.7696979545022082, 0.3313359445704587, -0.8675253565775416, -2.0306204290528633, -0.5885323044569478, 0.96189702691507, -0.9381127923000514, 1.1341301870139382, -0.9367512398885268, 0.4912251654651547, 0.27617089168378534, -0.7657712935485881, -0.5174787725826708, -0.00204430934385902, -0.6957307536998042, 0.4834709096195589, -1.1574873662350456, -0.13980648624510314, -1.8468516204100123, -0.19692301081266272, -0.22469679764149741, -1.3382039433150774, -0.15873283662248147, -0.7144091478502074, -0.9451088328381148, -1.7894354582176508, 0.2205406702929234, 0.1256707549766895, -0.9233701643231385, -0.9226923145853748, 1.710697278231994, 0.27887652682650893, -0.5293749654695973, 0.7714141838408798, -0.29985321642796753, 0.2190775948273233, -0.5397264459624831, 0.558597677560364, 0.3945692690730438, -0.5455619420575457, 0.8384733700290123, -0.01637531821965818, -1.1420360309982367, -0.20948832559039232, 0.10504276553667148, 1.6180285822569453, -0.5710238363310144, -0.5264060565235592, -0.7790552114525312, 0.8324909336729731, 0.8772732176378233, -0.4248174431233726, 0.4562541742074801, -1.3812582287997335, 1.0955850108239786, -0.18370228750638848, 0.810662776171255, 0.2626383799992122, 0.7492126302640985, 0.5536502423094987, -0.09110654951292647, 1.322157181272673, -0.31972049871607144, 1.977585807846008, 0.023586840192787735, -0.43880574585033116, 0.04943060465044906, 0.7790030795850557, 1.2668457333662844, 1.6240836163970997, 0.996184782380938, 0.3761501439466266, 0.22098642769800267, -0.7379286780950627, -0.7572637019105288, 0.15645556904422755, 1.1378670307492558, -2.3103301335457846, -0.16780306790835345, -0.6283663904717744, -1.6661796989470103, 0.022609904409371974, 1.342764311517541, 0.25549867515423097, 0.042298451361538474, 0.5442100444855174, -0.6787901316305901, -0.5225787177717736, 1.1432299990189096, 1.7102500973845844, -0.80412833132013, -2.7441401769050615, 0.31415149494663397, -0.3946575047832397, 0.18887608708816195, -0.5364180859134166, 0.017334567172926175, -0.6073386849388699, 0.22308275870459743, 0.15771214735780725, 0.23236630380906098, 0.1400225694491257, -2.337041958295465, 1.8138499711390452, 0.3802051873781221, 0.37619390670441094, -0.04260106824571996, -1.551682775111344, 0.614992067727814, 0.5991615895341874, 0.9735453827444137, -0.23615742434150705, -2.726071300929387, 1.1120178133477687, 0.3563532190906159, -2.0250371940304515, 0.06860887942300455, 0.31518799483756516, -1.001487264209747, -0.181736189500634, -0.3060506639806884, 1.043184840344501, 0.08633397593416244, -0.650104185343144, -1.2487224931103549, 0.3498600962496628, 0.03010628634649941, -1.8720461523822152, 0.1658047742605963, -0.6229081863468334, 0.4066340560117128, 0.4612633462418924, -0.9209364085312407, 1.081257885791857, -0.6639261093435214, -0.023442738834274137, -0.7968044692250087, 0.20348262743246434, -0.5712433974573351, -1.024032793349123, -2.0327069649911382, -1.0884101098065282, -0.4128349947375933, -0.6398019252874451, -0.1606168447774978, -0.1573762925794799, 0.29407331286503624, -1.6308470929789551, 0.28021756873757603, 1.6637135474596083, -1.2072267740860256, -0.2062913378087315, 0.5190997567214145, 0.1356159342382202, -2.0114669234645173, -0.42690548350370816, -0.14637851148337155, -0.36026958030501127, 1.1997264452220766, -0.41157709647901647, 0.6056108232123042, -0.25269760960697474, 0.4553924246546746, 0.6664421861386056, -1.9627423636982275, -0.2921012018674692, -1.0891324484359264, 1.0926238451791415, 1.010971321803559, 0.29100944059622785, -0.7240969026145292, 0.10104946730571614, -0.7338131074903523, -0.717100206730475, -1.4246027171008118, 0.9477214068573916, -0.3528870404327382, -0.6283221688742359, 3.1751952540852533, 0.8237597795185947, 0.7732205693952852, 0.6788917584302897, -0.987693698296215, -0.8479498086688082, 1.3001337685250012, -0.3112732612265046, 0.24987975590848482, -0.8224277629902669, 1.3677654190495683, -0.4453448915976031, -1.443731798515847, -2.7511108992964872, -0.5165926874323951, 1.2261701133330425, 1.9421676659786111, 0.25355017331382507, -1.4482736623192112, 0.22956696205134827, 1.2949586778107298, -0.002903877904420451, 1.5156221068897973, -0.0721900993928615, 0.7997211349214016, -0.41162203367062444, -0.6903133608293525, -1.2885405549843718, -1.104981839065757, 0.5930303357748284, -0.09406246156994384, 1.1780412201910673, -1.1954932522080965, -0.059185160296403104, -0.3338782990790378, 0.7119927341449062, -0.26934894520771346, -2.0747224823317056, -1.7111135803460142, -0.1632589155163514, 0.8370230644383874, -0.07905025627243076, -0.009505054488436944, 0.8273053599605863, -0.7637057678278342, -0.3281841962724742, -0.9123599357370357, 0.47771516084369225, 0.407577490680597, -0.30689079295757893, 0.32325579171185836, -0.3918951370774596, 1.2448647943595095, 0.5040363174366104, -0.6765462219693222, -0.6266830944463738, 0.06657937261091092, -1.6881028478184477, 1.0220392856957499, -0.16847157214246034, -1.9272256734180033, 1.5667385487410972, 1.6576921138015324, -1.47652554741673, 1.364927918970783, 0.6564916741707434, -0.6257264552506491, 0.7241380695819074, 0.6564181275475814, 0.30253508293680875, 2.802855468660584, -1.2243029503506457, 1.2713559950358078, -0.009004611735276481, -0.44223043972372034, -0.8937247507275494, -1.062520685101388, -0.2708098956044421, -0.49313441896286503, -2.1589874477169952, 4.017916414414475, -0.1758544897437171, -0.9312835414176995, -0.33718856096895516, -0.000812020782088488, 1.4420222180040676, -0.6689104288750609, 0.7894336834865996, -1.3446398781929338, 0.25554020945986217, -0.9999601253290903, -0.046011944718946325, -0.25229826744424183, -0.14757827798704048, 2.182530446083268, 0.46378167288759176, -1.6267404265065857, 0.3973707445372086, -0.004390111069500232, 1.5668207068594497, 1.0175997605594715, -1.6122810178207505, 0.2479017966025003, 2.1810994686487217, 0.11645655713814877, -0.1516199007176254, 0.19183408716281794, 1.260403442903916, 1.9954100898210856, 0.5130823595704698, -0.1289947529925301, -0.3458043674614167, 0.6335023504909589, 0.7802962031486398, 0.18177255974980341, -0.1317019472607984, 1.6507046588081236, 0.31901255694132874, 0.2290972761048181, 0.13780855642474094, 0.8493738436834707, 0.7348346235821076, -0.7370831709983103, 1.2970450046304294, -0.6946838459877481, -2.1393410139259794, -0.7355221105556569, 0.09159681839425364, -0.5311951057356723, -0.16757424088073122, 1.1198636955628811, -0.11107873463289784, 0.2872141471582099, 0.31432184464710133, -0.045164436078238716, -2.3314311862327406, -0.5709291229702309, -0.04887371832635007, -1.0287553213405882, 0.9398352441142048, 0.11282523383182691, 0.5376982470759185, -0.4208589187071722, 0.6722086909424962, -0.21271459757767483, -1.3949108653284226, 0.34486925482617653, 1.9673898520208442, 0.05023936635338637, -1.0567266108197875, 0.6612627964310286, 0.4584149610747174, -0.7472137650488032, -0.22833344410409684, -0.514259379740211, 0.5818980427831979, -0.008712019730157195, -1.0737893951169246, 1.4181991582952573, 0.011913962352126753, 0.44406465759603203, 0.12992239084352253, 0.48516048363793995, 0.2889395964387804, 0.2967672965733426, -2.0356935032057617, -0.7353182417779315, 0.3427275085072886, -0.30932080174583215, 0.3078869289905295, -2.2206710645389327, 1.06247743949695, 1.8044598398134306, 0.09059516926822547, -0.7781113522955594, -1.0370771673454917, 0.026927312039894683, -0.5125312623870627, 0.19833220021355205, -1.0622326389020842, -0.012782904894443272, -0.29904509188584466, -0.10741373851873101, -0.44814603893004246, -0.4456747054873548, 0.019947255133601415, 0.5696505466383975, -0.6676686964100678, 0.9812461708017872, -1.7815042207505818, 0.481808653516143, 0.20125095550401836, -0.9948936520793897, -0.8110288474455066, 0.3092061438092845, -0.9284009731099536, 0.5105713840318484, -2.2010860614075916, -0.245391913452591, -0.2620775870799105, -1.519537603134545, -0.2290299656486093, 0.40029294585616887, 0.014228763175464568, 0.6355881544813151, 1.0852400559504864, 0.31290449629698885, 0.2478741784183882, 0.1108478966379858, 0.7760645800355424, -1.4575461218772199, -0.30887904775984115, -0.6906906129756015, 0.33249082539232244, 0.6547976863664855, 1.62828464888676, 1.12851161809248, 0.1081365078293875, -2.1126804164885487, 1.8596516092798894, 0.4654452828073751, 0.694952911634451, -0.13380858323291836, -1.4433473615471046, -0.9653590817400042, 0.3279034293799623, 0.34043592960267366, -0.4374354289850529, 1.208646853618779, 0.01270457076138605, 0.44798412043556607, -1.3278858395690527, -0.261726204694598, 0.7871235361119199, -0.7610558046986385, -1.1035313294844111, -0.16301774357110854, -0.39069119607515196, 0.2523202781937262, -0.4475491670607501, -1.4152157981899736, 0.5064521056477524, -0.6111197634203067, -0.8074552381758614, -0.5239985447523329, -1.1976965144927023, 0.2707109991511933, -0.26756242249429324, 1.5306789771868585, 0.09804064591361003, -1.3626288557030495, 0.2868128450228725, -1.508098478884813, -0.7718610593342673, -0.9043167253429785, 1.8457998573207557, -0.5481957876573351, -1.1298356020601623, -1.536222754839104, 0.9538057440116787, -1.1947542457286404, 0.006276220111860786, 0.9018620455310515, -2.278550276844676, -0.0005762846664613374, 0.8265280842015609, -0.6257806185604459, -0.28200192398693574, 1.275806065857338, 0.9525408833958945, -0.15222894466327883, 1.9418117851345558, -1.089797717264478, -1.586531655140754, 1.7367548677848, 0.5704392695905509, 2.243020583739281, 1.822888434114798, -0.04967706357985214, 0.4040041215835214, 0.3718667167872673, 0.21690200212954966, -1.4604346411396527, -0.4761631050394264, 1.1553119292710043, 0.16449179866071775, -0.012151695379635803, 1.7956463836566428, 0.7943331772620625, -0.05198266776368223, 1.690335745196591, -2.9238512146816205, 0.21334477779571354, 0.5704836831881688, -0.00834934185596014, -0.750327259113328, -1.5251202371398687, 0.07684023967317408, -0.07091584686271954, 0.2839238197916693, 0.6879735441149306, 1.8273743435635486, 0.8737091648107156, -2.4361107289870096, 2.5352918736338323, 2.806278050452971, -0.12782778290371297, -0.11510084131251631, -0.9519211486454757, 0.25926517437117685, -0.49392908109626654, 2.6820509691420162, 1.3055136704365597, 0.9905808142248377, -0.5860035119885808, 0.7515403190425957, 0.7091783275763494, -0.21954098460432558, 0.04155786975404706, 0.9389519492261323, -0.19932068541942788, 0.4621763567997222, 0.2733154937915466, 1.1901552669625852, -0.55881426840896, -0.5818096820645726, 0.8744373496082396, -1.5552107011962437, -0.5225786651610802, -0.6048660488851805, -0.09333058745524075, 0.36521021992744673, -0.07101128720029805, 0.007820705175317534, -1.0989208410946385, -1.703459074197063, -0.545958724893337, -0.8819229940513011, -1.328223548373178, 0.3067418082611631, -0.42469202722115473, -0.7821502450152334, 0.00046918182234863005, -0.32578715609785036, 0.4953134008834336, -0.21838395899512847, 1.2547760915483162, 0.20637861190371637, -0.8018894846376932, 0.48603089223359736, -0.531751087140618, 0.16343489730080105, -0.9961432271932424, -0.21331175550069836, -0.9356513342727559, -0.557946786194107, -0.8079306101989701, 0.8052813626123472, 1.2797320044161293, 1.0293094936918261, -0.4796222044991875, -0.010784256583378673, 0.1190709665757585, 1.3280808115075184, -0.0028605265385485855, -0.20361938946698152, 0.1493558323049484, 1.5307064586269747, -1.5586112477989635, 0.16602408398664123, 0.6360099032611569, -0.8693961788252909, 1.6364243163213004, -0.32215859816564724, -1.2153295960022619, -0.8793525990770427, -1.003369656467281, 0.051018456418840216, 0.8398773359391682, -1.5902667318117967, -1.645124898335306, 1.2731586708953926, 0.47576490714770453, 0.2828512147501651, -1.028260147490974, -1.6185223279326175, 0.7105899030395949, -1.3501018463741739, 0.2764334612116799, -0.35226029310824486, -1.2041198567504658, -1.3920237260654527, -0.48939270556116765, -1.729318363957541, 0.6779588732629861, 0.04822323135108785, 1.6657941309363664, 0.30694533535659585, -1.6750672012241834, -1.5044509597457878, -0.289557700654486, 0.11424664713020907, -0.2630182706495811, 0.606377952021122, 0.6407147593247444, 1.160157295333822, -0.18504236375633365, 0.15927199160425187, -1.3791650893553795, 0.25847433063118586, -0.005797115668811988, 0.9886185148266783, -0.36909994257386486, -2.1907432533674407, -0.6458294686105736, -0.05522890078955779, 0.6623693768202743, 0.23515936574314913, 0.30676372015855524, 1.2042870268374133, 0.4660956294878849, 0.3338909765686568, 0.7904613872751052, 1.9397448882390753, -0.20690848148752636, -0.2781468247647047, -1.0697949006215133, -1.2640130147629332, -0.313057744801934, -0.5144508267795179, -2.941564806493232, -0.7891952102336878, 0.44129181007075147, -1.5434902863731483, -0.10672094773901183, -0.15006544418229778, -1.3414932682839027, -0.9212281126446729, -1.2006237631129129, 1.595077268097241, -1.029919111916416, 1.19212673975162, -0.5235780134258666, -0.46059995907920964, 0.03546273777996981, -0.06180782567961534, -0.8807087750347925, 1.4248399837522838, -1.8030789315502498, 0.23312527315383721, 1.5211197195541994, 0.11723118873517742, -0.3326059578473358, -0.5963268767281293, -0.7947124820737883, 0.884891342063396, 0.3061873173187275, -1.3602833340906595, -0.46286914317267136, -0.3211375151656933, -0.246190193244925, 0.26607245903793586, 0.6631757384411798, -0.14991112926992503, -0.221871669273833, -0.5749323400780646, -0.6821390456923129, 0.19190018444713916, 1.4346145761561007, 0.4192251793240886, -0.5335335376729108, 1.159951290406653, -0.019342922420925456, 1.3829420655664404, -1.4045981483653807, 0.7632592815131249, 0.8441596062057034, 1.384465423555609, 0.2802246581578352, 0.49583441504508624, 0.5142040107612311, 0.16966281442662443, 0.3402042200666597, 1.2032536256116129, -0.40010196988138086, 0.15657267767711008, 0.8265809216043493, -0.24401393886705136, -1.0322451991259984, 0.07758449129684704, -0.32786209824855483, 1.3985926018146215, 0.6511588437926945, -0.6925549791726541, -0.005399836161401602, 0.13363729405561384, 0.8450885872178473, 0.019526954299476634, -0.9849063308569528, -0.695706564533138, -1.66082825289817, -2.0397899608007104, -1.3594712448572377, -0.4809217044744069, 0.2289173761484796, -0.9274754085144734, 1.1889481989513533, -0.21632700124697188, 2.1761278476387376, -0.6424067840644146, 0.31850998738378544, -0.22463921543564697, -0.9875284331843069, 0.3228815028844916, 0.9314752023002195, -0.6277037025020415, 1.378903315936376, -0.7350292099264178, 0.27038751143240647, -0.9187491532281479, -0.12522992213237014, -1.6033165821464574, 0.22263560156688558, -0.3854983442709179, -0.4659574100013025, 0.027862952073362885, -0.09774194495449161, -1.2149619039594863, -1.048010344208548, -0.8699669252313917, -1.5718224865068713, 0.6141833279972774, -1.3144177599512739, -1.80285908643437, 0.8496912798953654, 0.29592604509638276, 1.1713922775243355, -0.6910821408010501, 0.4856407399307416, 0.2443353949112308, -0.9703229333325215, -1.1835101990114913, -0.4817082512155801, 0.7640814153190079, 0.5604964497299183, -0.05144722722751519, 1.46842971006857, -0.9956035745624195, -0.6268839525271488, -0.5055167435533359, 0.26941876761017763, -0.08826119318526915, -1.0423051515360753, 0.20131512148090333, -2.5766716303846504, -0.10908944468152397, -1.5458150974202685, 0.8056488197783442, -0.30658065259612444, -2.257591150994566, 0.2949865856834803, 0.5654821370506242, -1.0014855312283513, 0.3032333044156975, -1.1833242854254133, 0.16239995776730387, -0.7848736240714759, 1.6968820848101729, -1.5600482725874318, 0.20420916248244372, -0.6054499292813593, -0.7911363105306398, 0.4648241887386994, 0.036293566670086215, -1.0184153603933854, -0.06240770585621786, -1.096926545409115, -0.1932392930316149, 1.325206410719856, 0.8303431539110921, -1.2519472876825237, 0.40665959841987376, -1.152002653729722, -0.535000701095911, 0.059539224427479956, -0.4751385931609155, 0.47517100275780155, -1.096155500291714, 0.18251088652148867, 0.493124135167806, 0.3422375951835894, -1.428868163403394, -0.005695643361898266, 0.28158230575297705, -1.4949511418636934, 0.8788144043694478, -0.590062489044937, 1.0858092646021054, 2.106323629529273, -0.3337376532450788, -0.10613021741578366, -0.3697733939746991, -0.8660330243476834, 0.3760396083736844, 0.9902826770143003, 0.49052472024444416, 0.9489185518309908, 1.1630187078185128, 0.5161928981540557, -0.15860581976304672, -0.13770655992172684, 0.30877890760699295, -1.5756809543825725, 0.7671542735571499, 0.19597418703059544, 1.9356313380039922, -1.3824592574111094, -0.16644831709565672, -1.6743549625810625, 0.5969528837855751, 0.26093288022491756, -0.030004673880156922, 0.7305824778622784, -0.24258024875796655, 0.19972862311337308, 0.5721814939122422, -0.9740411518251177, -1.0526105213551709, -0.9623269924132307, 1.0440642559352065, -0.34229999370604963, 1.0787647687224446, 1.411996137529934, 0.2502728085786253, 0.3867977404118406, -1.0562368586338493, -0.7028793630923991, 1.4578205148710874, -1.2380868926356254, -1.3309519846984965, -0.07699937499677435, 1.1604726553780975, -2.033684505873414, 0.3907387398009557, -0.9225912396372563, -0.14477690321864223, 0.47112922695045717, -0.7253997516452572, -0.6568178304595019, 0.6274861712065929, 0.9587736625801696, -1.0030417496654331, 1.1081821482158913, -0.02697624948925232, -1.333169385054478, -1.2490683698246363, 1.645498215044175, -0.2144434052650386, 0.6752442525619763, 0.6200935595387067, -0.514700622085572, 1.5461404923545738, -0.477369416990872, -2.2715732581961268, 1.461604331846287, -0.7442293633960324, 0.9516180366833092, 1.5124576758426518, 0.23081608780624696, -1.9269965207120794, 1.350512319854224, 1.7147001007419809, 0.7795470521147808, 0.5374280148951665, 0.009657402357915054, 0.7500220456424705, -0.7891721293790956, -0.68768854691622, 1.1166464241081568, 1.3557253844526163, -0.1722641447313901, -0.02766901081271013, -1.3990235875693129, -0.3983905076258297, -0.5857790228171171, 1.0777786746608498, 0.08828485972683564, -0.3681833299789569, -0.9168463272998055, 2.179397643656627, -0.19146469938516836, 1.3533289345439632, -0.7832982370379092, 0.31256822154109326, -3.1648436965286195, -0.5742466208954924, -0.8011383404956941, -0.7245709887700655, 0.09790525425945737, -0.7102541767152396, -0.8656813941081248, 0.38205343083263527, 0.3626988485860935, 1.054981078703705, -0.5830820650417949, -1.0541803060723798, 1.6826420757827114, 1.6309966589098126, 0.49107702859006575, 0.8502200223269863, 0.4706232221137724, -0.5455640474182779, -0.4154248009379443, -0.8806018298573968, -1.210048100993504, 1.6426966990218572, 1.096346336567827, -0.359612064311955, 0.9275068151704604, -1.119922177606778, -1.84300750650034, 1.4267258558409297, 1.2424928550114114, 0.754142206589933, 0.2708438942952505, 0.5478575416077439, 0.6305398809708951, 0.3777837833947122, 0.3657120546183546, -1.3866332497218987, 0.6920899188798068, 0.4875990168731323, -2.2765031754187723, -0.2668963717610324, -1.5242075889998994, 0.740949788165708, 0.5951953135052008, 0.7961877454609682, 0.6089737398918399, -0.6633805448693422, 0.4335718920607702, 1.455293676118805, 1.0022467098241394, -2.840151932757887, 0.48023133479275504, 0.88239360252634, -0.6033982028498086, -2.389141642223848, 0.40317704142003064, 0.03876825705701316, 0.007290623410917869, 0.19132756336231857, -0.2039774015333521, -0.14444588938543215, 1.6246377248230959, 0.24155889355940804, -0.7911622274567425, 0.4087158939289985, -0.910923532424775, 1.4567318080843168, -0.5930583390604899, 2.8114381392555914, -0.22395040059686228, -0.3014671871002661, 2.731093736337992, -0.6065882799503389, 0.8899346883109754, 1.2749692169058588, 1.1256081441694679, 0.4986956932158736, -0.029658783661429954, -0.3000405805004481, 0.3931530788712904, -0.9617950444093274, -0.19712562370313425, -0.07991308008747636, 1.469641538014329, 0.6022983080209366, -0.8386330301628661, -1.1341600459111103, 0.5740925182655553, -0.6507385766794433, 0.23489936223807295, 1.9585140530042326, -0.1176870837841183, 0.3408957863553232, -0.2252657293280488, -0.1268961279436031, -0.442398446297356, 0.30564129498197823, -0.3346977700757778, 0.028590925265846612, -0.674300866239394, 0.8021971227951344, 0.18455857742299472, 0.4481151752898202, -0.492918229810857, 0.5208162101019825, -1.1899824951723734, -0.34355439083143646, -1.362730794969769, -0.027003172306646516, 0.3721817960125601, -1.198915904788917, 0.4917706248901001, -1.2977035396780303, 0.7825163679382511, 0.6243738742575302, 0.8394678642937401, 1.2278157397519671, -1.754619753950524, -0.5847157301927052, -1.9606991849598117, -0.8222958026139077, -0.9548742376836357, -0.1566521319492955, -0.21118697904891348, -0.2044538811703136, -1.2913956052133675, -1.7241935077200148, -0.8110944096214696, -1.9292220266967133, 1.702109052405087, -0.5991915862633522, -0.19604525046752846, -0.08388809577946496, 0.064373163519089, -0.05313517064596727, 0.8462788909923123, -1.785511398934247, -0.8786312435793313, -0.12812484426271945, -0.30892724168419095, 1.3513914531993205, -1.2459574009228696, 2.2752430962288877, 0.37225868915686217, -0.7696631854618611, -0.7668539752280991, -0.5827477262027452, -0.5825388590745673, 0.8685197839586415, 0.4293287763831327, 2.042222405987822, -1.5910068708852738, 0.786789861207364, -0.13469907388388516, 1.0910403782338889, -2.762967108328565, -1.4898482285222798, 0.5190201633255456, -0.6859182202287375, -0.21990542632674628, 0.6483133622357202, -1.3768303394667276, -1.1874003753356799, 0.14026369808362518, 0.8112587091669977, -0.515700335545053, -1.5473300133699015, -1.392147845190975, -0.9876997759843834, 1.1881845828429685, 0.2715519758513765, -1.232294204828278, 0.22162662027659877, -0.4548568606012722, -0.16308526809509494, -0.8653250836402574, 0.5843165872120956, -0.8917792464052531, 0.15249462399967617, 0.6122933418236757, -0.48487416663435223, 0.3002516544940055, 0.8227662631920968, -0.6515713623418298, 0.4760448260784937, 0.9716333160192956, -0.7503614694770615, 1.6684599086190632, -0.305771488625948, 0.4017839665749806, 0.0713039276515398, -0.86216519710459, 0.5925454873878637, 0.15089942436650522, 1.1583854381994843, 1.4287299415281876, 0.1169597290150573, -0.30058666315601895, -0.39168143055093996, 1.0812107929591654, -0.26704249865204815, 0.4479648777683868, -1.3360871785609572, -1.1217052964491698, 0.4704566449280294, 0.7546685013837744, 0.09351585539783479, 0.7558070549841155, -0.8756645022158613, -1.3265669303059817, 1.2327981875171212, -0.033563977108564666, 1.1963419418393992, -0.32856875538949465, -1.7829310370894043, 0.0903650063847139, 0.9975424784631676, 0.12458858635032188, 2.0192700381198962, 0.016734435540309595, -0.0937560484813402, -0.13137631081394466, -0.20867954064645514, 1.1355024696944793, -1.6883005208455064, -0.43811612855560983, -0.9624676384922753, -1.521426582752303, 0.7709972576661231, 0.40881880552861144, -1.1827873588241897, 0.3853251284453597, -0.39556733998758903, 0.05653887201464929, -0.491934191408705, 0.42279780837803044, 0.30354574558866154, -1.196967438425328, 1.455593278596666, 0.6472909985589337, 1.3129463795891188, 0.7566666623913861, 1.1635624955352586, -1.2310603577599424, -0.27347066744745696, -0.20027373107224053, 1.3580875948005522, 0.6839754656427045, 0.09610902364260322, 2.086334384455515, 0.10260721646905055, -0.2946247868725237, 0.604130750547423, 0.3304811954315548, 0.21930756420891848, -0.6941258267085844, 0.20321822052694063, 1.117326153043042, -0.46498494054180267, -1.6459172478537778, -1.5761625723138615, 0.8268001082385419, -1.007799949118061, -0.28645024725470697, -0.2568465137110816, -1.023309321520232, 0.3516429005588672, -0.8786002726196029, -0.48902193428711527, -1.1249985719308957, -1.5026082140992885, 1.2165412020910376, 1.209053313275995, 0.5928380070989486, 0.2537730200260762, 0.20606738555184204, 1.5356494536552212, 0.4257993891015, -1.3568246897296798, -0.6530278252955193, 0.41824838170754525, 0.08024875589637917, -0.31737302183749216, 0.6249666175537462, 0.037964129882012164, -0.05336335478236834, -0.8849713001370179, 0.8168345346059461, -0.04827029039464614, 0.11770187612646081, 0.05611424617104515, 0.29533883839694547, 1.688273529965658, -0.006959464281094336, -0.11531774656601089, 0.8853635816973608, 0.23310785105646029, 0.5727742724965321, -1.6924512213508258, 1.4816146346066215, -1.961725352322681, 0.3492543070440772, -0.09842455533652779, -0.9001464154573704, 0.019074680467752025, -1.645014230037522, 2.486672304423999, -0.4574581276333702, 0.09384581921888935, 2.4141464241367756, -0.03555619486094847, 1.0381162872467362, -0.5853554498547529, -0.9787270462701055, 0.1463720369841853, 0.393376154871294, 1.3849576516230497, -0.10729464147557737, 0.8066335379178223, 0.37396192982652354, 1.0940105695594167, -1.4103238423558464, -0.7696416057927593, 0.07558777404168744, -0.9896805513747512, 0.6769310135466224, -0.06694882986780239, -1.0001977648465297, 0.9197605620625998, -0.0650516373112582, 0.37501882795568003, -0.4454393680338258, 0.6310897390547844, -0.6997548017822502, -0.5539695174275217, -2.2898941997742295, 0.6069464499579986, 0.726896988227642, -0.12033927740588952, 0.6826108130404697, -0.9758838188861348, -0.22274072777040055, -0.12595827769777462, 0.7606249243380525, -1.6057950207337783, 0.862439206597184, -0.780206835049467, -0.8055679864952444, 0.6788227620050177, 1.0617408774118984, 0.016379986994354306, 0.2993200713706888, -0.019216578105361974, -1.236543360492093, 0.6878204800602985, 0.0993042898323438, 2.0847672326147553, 1.5693584553291857, 0.07687496783704194, 0.357224953967779, -0.2621600306058391, -1.3919487745438168, -1.234438539564151, -0.8156523444966352, -0.7420894376545553, -0.7438810495708943, 0.5092664028681635, -0.27657868975622985, -0.5926779020239641, 1.2016548555295772, -0.15989315028641576, 0.863900922872757, -0.3063812189640832, -1.8619355000064115, -1.0115022176105308, -1.1981552726999187, 0.09348296731620181, 0.39078035157338303, -0.1485983917814596, 1.127246653659602, -0.5980408841567715, -0.0832757692395289, 1.1612077739669655, 0.7036925230329821, -1.7202176384038583, -1.0327036145640582, 2.7765483049699786, 0.5326799396220809, -0.35583648647703, -0.46434714742619476, -1.7572294745162833, -1.3086170094423761, 0.8422291731545244, 1.674000162051283, 0.1962176587514423, -0.75098791234879, 1.3743630968021538, -0.5341476587710708, -0.19061675428749666, -2.0937346925175504, 1.0351128683098403, -1.158569471499019, 0.8133399245347073, 0.9784443005565902, 0.46652753001690644, -0.18410261226093283, 1.2043697962313897, 1.0703163148225254, 2.0667890000891282, -0.2621892626689933, -0.08794439449202052, -1.0556308869710944, -0.8301108613271041, -0.5264413588120729, -0.2859452349274755, 2.213182999960223, 2.117452194132127, 1.1353882999997402, 0.25917092982818957, -0.8264694400293326, -0.08656659108030094, -0.3845691927192515, 1.105130446715696, -0.5255441628260132, -0.536619315568256, 1.193294908411591, 0.9992483878358271, -0.44003341188299644, -2.5709173303593604, -0.7904668677613977, -0.6816278439047482, -0.7579452861250445, -2.0841438510140216, 1.0170849919515779, 0.3724001420279982, -1.796207687049664, 0.385446104203479, 3.358629773934533, -0.4254688370768973, -0.6850036373016568, -0.626000834121013, 0.13642232361695478, 0.13686852803984448, 2.0543220032558795, -0.22313123443211472, -0.8202665215137634, 0.025519360139313062, -0.84169700742652, 1.2970048731187325, 0.6720514970442835, -1.6975217661577715, -0.03957084807764404, -0.7755481083041771, -1.6157818096620074, 0.30448675172079154, 0.6909394160450528, -0.7569244985566321, -1.0438692300019072, -0.275383314842804, -0.11967237240119441, -0.2913706003138213, 0.23899083169493557, -0.4756794122447845, -2.17742581778596, -1.6814718778085196, -0.2994278853861469, 0.5087467195556602, -0.6233058845932588, 0.6646369786437889, -0.14544477523148447, -0.11677942695183208, 1.2278413851214358, -1.226872760777352, -0.6292233176418364, -0.047221301030573155, -0.6258201916415592, -0.8494100126941041, -0.9322691078872181, 0.9885593861038275, -1.4811912586846376, -0.4177416583259601, 1.9195668507953392, -0.8077935154037434, -1.1166471057838352, 1.0961330786097179, -0.8083406669421945, 0.4308349256899605, 0.3729561066527054, 0.6728741266831793, 0.0034065967884698988, -0.012384028000687962, 0.24885979488514404, 1.4939220855569095, 0.39317436454320537, -0.32459012634150947, -0.03973511889990741, -0.36994871760549586, -0.7884042313854454, -0.4873112734300192, 0.10919065901958565, 0.24563686399803533, -0.7016433644318549, 0.288328408920658, -0.421670071130776, -0.025987999224693043, 0.5814749465245906, 0.018280400145487832, 0.25372338672468164, 0.6146328658173437, -1.246924982212648, 1.3727354179052225, -0.2293197145388259, 0.7740334398508362, -1.2865412612685567, 0.33081367861466776, -0.6025742987934578, 0.7300895949058815, 1.6168868663863092, 1.3492481845099553, -0.2309248195578242, 1.1120583116181615, -1.4090948739364346, 2.8144575396701983, 0.2743320403764038, 1.8028796309509922, -0.06425714961153016, -1.475406496787565, 0.5339111776751403, 1.1441626376250202, -1.4960810125027435, 2.104835631080849, -1.2273888464730502, -0.1565680599803187, 0.7187470615882645, -1.273381070808098, -0.5295834548912844, 0.11227521453345687, -2.3726251282381705, -1.0698893746854854, -0.22585890622989824, 0.6733624941455193, -0.8313811465046401, -1.654824393791985, -0.010674814172270002, 1.288012933407593, 0.6438757655696681, 2.0921379495136128, 0.8055911113488897, 0.15752352056222566, 0.5667166188114162, -0.5132682162506701, -1.0120188612493235, 0.7290911372279548, -0.8150022749570998, -1.4054918736505426, 0.6918683052811426, 1.5571394688543665, 1.0945482815843781, 0.250672222824315, -0.17880839605823243, 1.5036988085202245, 0.3894429394013266, 0.08713822399084424, -0.48469537590076134, 0.6359662196828809, -0.5366302045508529, 0.22611102712302433, -0.267755342552508, -0.3273571011714177, -0.9965025358615521, 0.9693830359272223, -0.5177106077194429, 0.9360375976212091, -0.0836158748103152, -1.6323452420289801, -0.42166963138820296, -0.22657287685984864, 0.4273901702613148, 1.0428105043055123, -0.8418882843941647, -0.5815060565419641, 1.7228902849606609, 0.33395185075700173, -1.0662743301042694, 0.8030396680457904, 0.3938782919631513, 0.014794310276353998, 1.8344008704019201, 1.6768757701833434, -0.47380578208347623, -0.12163221988460161, -0.5123941668975375, 0.0941382983842456, 0.7026227765548794, -0.23165134960229772, 1.0216686504123156, -0.991972395456462, -0.790662264926659, 1.0170669728323514, -0.6348019744580472, 1.8172924897472922, 0.40863323344434976, 0.1103953795264611, 1.146073401571682, -1.5566236919649428, -0.6743775867675982, 0.49700000976425984, 0.7514182337972116, 0.557933539969392, 1.6888459599500905, 0.7225552170452301, 1.0930533839846746, -0.6046336096458714, 2.0747444049975416, -0.0032257284636737506, -0.12373166203101181, 0.0011765503195632744, 0.9596705921351832, 1.1391475965611306, -1.945800719465351, -0.568625981193303, 0.2174804949849897, 1.1288998507144987, -0.2505963445972258, -1.7991338267404158, 1.077299211417462, 0.11138159461295923, -1.175861622895023, -2.4979667480857097, -1.0696404043867616, 0.5166756284138676, -0.7862832007145703, -0.28734130844372757, -1.8522213516576578, -0.6386967355107808, 0.3215492360749211, -0.16222379471721027, 1.2372485612073083, -0.7766637346175522, 2.0430915966124488, 0.7959288794710153, 1.2101909862931977, -0.4494781290053385, -0.19497804635940488, 0.7616930082762967, 0.6569772675926967, -0.6421530976892815, 0.5626370227023985, -1.0016070246868807, 0.5298856107596487, -0.9668610993979592, 2.6804786784236656, 0.6787570661550711, -0.07172106940271576, -0.41355518484013754, -0.076758712311748, -0.5739990766741557, 0.3862538134853528, 0.9867633929268137, -1.7050839331473215, -0.5658115544507707, -1.1243638520537995, -0.12354557304529613, -0.8088987399755561, 0.8130850582898533, 0.05558390121349635, -0.8663641569624279, 0.2536277164536859, -1.513273517044503, 0.6061393784959785, -0.37769702277577605, -1.2884185148270304, 1.4876220743741693, 0.4923537930513754, -0.7201638409208148, -0.6945471576094602, -1.5974007463696038, -1.3493933769575126, -1.212992157937191, 0.46295340231693316, 1.9514402912990023, -0.49584075609233286, 0.7329546387675271, -2.0669284129442804, -0.9104487849315039, 0.16436089611977195, -0.08073358730815561, 0.9254394940575896, 1.0854356129693303, 0.966872374191219, -0.2556838347099938, 0.6887851690237758, 0.3057639723534942, -1.8598484155098862, 1.4194954821654284, 0.29085483470845486, -0.43995028613035747, 0.7200673297340959, 1.5042980787769697, 0.16154585681941105, 1.0048362185702104, -1.3607616220295986, 0.5483821903336951, -0.6521195021285512, 2.91393433697356, -0.6696636793283244, -0.34621706583803485, -0.4226458561881851, 0.049101058065513584, -1.7182187830486728, -0.5325468432793692, -0.7085014768780435, 0.3445116766198358, 1.8182175338680908, -0.3966043595952512, 0.9098480523594399, 0.9317204304124193, -1.5099303068341363, 2.2854592038218837, 0.27575051547864593, -0.7163747858292686, -0.5729706270445608, 1.0389950163262438, 0.3669778083569414, -2.2629969129512326, -1.5628230661985805, 0.8709777410175881, -0.5751020129584887, -1.228106708266595, 2.4249460741923605, -0.9868579749105688, 0.27377797063414533, 0.7486913483357636, -0.30286887248865085, 0.22372488559525358, -0.6217368829015194, -0.21570601924678026, 1.5540880541499091, 0.7995170583917439, -1.431854451032095, -1.7050777432442747, -0.6195287995662895, 0.3241774365041107, -2.6306255230427187, 0.5602848751014449, 0.11622709706085997, 1.833553440158681, -0.05057086797769685, 0.3110480663109903, 0.7062216898480853, -1.0592867458773998, 1.266231749707714, -1.370333576436184, 0.218686189181728, -0.4362782209490614, -0.42965143941994466, -1.3985471968647434, -0.8318353220202817, -0.5615428449293093, 0.6852201002719852, -0.5216367250729392, -0.14853748911809606, 1.090013784000117, -1.496734675649012, -1.1223354891295243, -0.43591221833382493, 0.48214586926411374, -0.4763024767682056, -0.8884838685595468, -3.3027535105362436, -0.08490289807992972, -0.9479315324175698, 1.8371970431856315, -0.6083922205734794, 0.6766031643900691, -0.5072010227664492, 0.5061928077038537, -0.37968527915795547, 1.6893008183071452, 0.9231315903330563, -0.39399429220096516, 0.2504999619990821, 0.7593768777867497, -0.6952817851528891, 0.6925713582944992, 0.4046585953286958, 0.3912082151118869, 0.6831095861807497, -2.102800318894072, 0.8860723741051002, -0.7732352825328185, 1.3564015776966645, -0.038089317951800886, -0.3909566176237661, 0.7918318148753669, -0.6411224605807486, -0.6202018814503382, -2.518156388838028, 0.6866856210662964, -1.4879639499360593, -0.4609073449143807, -0.18151741427529228, -1.2605474440083515, -0.7301294604762919, 1.4956713153990036, 0.30851210619276914, -1.220413511267379, -0.3661838064932822, 0.055769655118921325, -0.45808849587124456, 1.587216361834872, -0.6833642762159432, -0.6806436871050278, -0.6184088953656676, -1.2163375495598658, -0.37526058243609445, 0.5552973224019052, -2.133001093152979, 1.412370344507345, -0.16955737330938522, -1.8842591796618149, -1.4253600513097078, -1.2095239545642802, -0.60076605451404, -2.0995961165182684, 0.21455743909459604, -1.6856367871744464, 0.6073491056263353, 2.9543478410443313, 0.04446469087387057, 0.6878561050616057, -0.5461479884006629, 0.6910094864473381, 0.2947134117896721, -0.677807570221198, -2.0297749733811914, 1.0259230850835481, -0.5236287315913647, -1.2905742152157702, 1.432746522438498, -0.8608536369003992, -0.37955413527254395, -0.4399770290310127, 0.19148122067992016, -0.7438783565022514, 1.2809451637684979, -0.18289092108195876, 0.07276983527761845, -0.38273305437432614, -1.3800401752003821, -0.5509156126189627, -2.071172867706233, -1.297479131575994, 0.3598190528644172, 0.8356101573446689, 0.3379419004098199, 2.2860730253136343, 1.3866782635187755, -2.5584226759791053, 0.5020801525502437, -0.6020190195945525, -0.643544062754444, -0.9810251187214792, -1.3668408200071678, -0.2684911840970973, 0.5043694002000049, -0.971041526170128, -1.615657550280158, -0.6494096799808831, 0.8549385973200314, -2.3128573241991046, 0.8134406507071184, -0.41921578097747364, 0.7064300033642371, 0.2495469377633006, 0.7876082770114718, 1.3317041519567645, -0.2702625745740278, -2.962894206264344, -0.5995996715225417, 0.2512953666008711, -1.0090607261942046, 0.11448512981004902, 1.6134175428063855, 0.3038373702231432, -0.10119915231543593, 0.20687098920165556, 0.3736968601715249, -0.7780856227301883, -0.8123214673300297, 0.7464633201098386, 2.233468171509935, -0.9685274805376771, -0.7730693507856613, 0.24914600489234473, -0.07671282004740411, 1.6013002819508328, 0.6254910953062971, 0.5757976640054355, 0.06580180456159748, 0.3824773018489286, -0.7856667005557456, 0.3978500907464216, 1.3803745696045278, -0.06356534084293809, 1.1714652354607402, 1.0493644020857553, 0.1445434828316506, -0.05958819704177392, -0.7999265012409305, 1.8109884860482566, 0.7102075871615324, -0.7976735185875133, 1.3642345633879296, 0.6943394116717333, 0.3720304585137007, 0.4763136639953065, 1.4131668543850142, 0.7762139801946262, -0.05365042686374824, 1.2931321592169938, -0.8230540944003246, 1.6890057314652573, -0.264882476100015, -0.09110882357795116, 1.0445581044266472, -0.8567718611184221, -2.095202314117622, 0.3212546690268144, -0.3659831365480492, -0.20368256455135125, -0.959214765086476, 1.061930521574234, 0.06089210370583044, -0.1842673457650128, -0.08028426338824361, -3.891188587884746e-05, -1.3540854801461202, 1.2609138424911104, 0.021485668768210932, 2.690627087604959, -0.26526623320788884, 0.4405938352546951, -0.7176990742761692, -0.9438693704140283, 0.2356158338067448, 0.34034246078671815, -0.5581980135420322, -0.8991015098697156, 0.7913652358552203, 0.891727085114366, -0.42364158216411407, -0.9110037796443088, -2.071622858860336, 0.7883843860412882, -0.12257848630007794, 0.23526137395577773, 1.1395306509268996, 0.17070567506660625, -1.3259353013662885, -0.2851754256608639, 0.9501177459324243, 0.8113325262998003, 0.36441708799923633, -0.8305112174165521, 0.4797180855552368, -1.7687000423091972, 1.0614158177948239, -0.6484792338940852, 0.9655325653162261, 0.5696501272143109, -1.035862995605186, 0.05665684175818677, -0.7906084962604928, 2.515503865010673, -0.32712466927428363, 0.8541295282505874, -1.4362343402821893, -0.3487479373759758, -0.1819307372666547, -0.6929422167603663, -1.6943309985481048, 0.06125974391038373, -0.7593610038786128, -0.3573445596051205, -2.037412539900344, 0.040530004802216656, -0.3717326994636419, -2.4714306260704064, 2.53106800172008, -1.1747313830766122, -2.2667641308939914, 0.9466788419537632, 0.22450315556176653, 0.8270399712840427, 0.48645718974405155, -0.6458699375662766, -0.2236018048127673, -2.338394163329623, -0.7768819140934587, 0.08174882361436116, -0.6326757537248123, 1.3039779732039296, 0.2021710212045168, -0.7333436181032966, -1.266153341883451, 1.1894870978523748, 0.015496369260544785, 0.35114521792538056, -3.810289645679524, -0.6586930648000762, 0.3897932497273252, 1.1244978798441505, -0.7835358905206514, -1.4621010434206632, -1.3472281985708845, -0.935989822484989, -1.0651061385526912, -0.41128545249727555, -1.6009480901722224, 0.4793169866415034, 0.998411943678432, -1.6436273327134783, 0.04505257291280831, -0.2435107907762324, 0.3912997014169924, -1.218323978823774, 0.43034009568217807, 1.46603505891769, -0.9150282129444526, 1.722515921263877, -1.0708297913938247, -1.5753292726639638, 1.6757823375081315, -0.8189363495149943, -0.6012720840139815, 2.2755518789716764, 0.5833824572334673, 0.9695794392346727, -0.4045848186895252, -0.3180271322438126, 0.11558863311830633, 0.5456381368550545, 0.19195984687961526, -0.2621564287157816, -2.0364925103291314, -0.13666433753407306, -0.8348992217235883, -1.1349534042749387, 1.5172205939786734, 1.8441932653294837, -0.3520105871211955, -0.08557284050150138, 0.7694969794525504, 0.24354776587980637, -0.08216709852156409, 0.2516779837053798, 1.1528531994182205, 0.9420643920132151, -1.8299517592741243, -1.8030255478739217, -0.36530141299367686, 2.099906756368656, -1.516447338505281, 2.2150535096898687, -0.4684563752688896, -0.08431095845410705, 0.15322353138704342, 0.33784232311128853, -1.8620595684662824, -1.582673545727974, 0.24757296731612166, -0.10401463903889471, -0.14600452146420262, -1.5111887978601202, -2.433222238682976, -1.5087740852615532, 0.3198665148728169, -0.3205282236378058, 1.6468332638924503, -0.9492189788369272, -0.4470175121992755, 1.906309179505844, -0.0832126083633006, -1.0174879816875002, 0.6884983835208849, 0.20870891378765968, -1.8718783639662657, -0.8855832450660303, -0.2087916074391892, 0.3497754221022336, 0.856585474776643, 0.7374067196411265, -0.04938686149531799, -1.5293606579043169, -0.16865954675975542, 0.09487753624853876, -1.5468468970127596, -1.118828002144808, -1.4686022412807682, -0.7739436840824091, -0.40219179020855, 0.010656298646415194, 0.6209379437461406, -0.5633665995868415, -2.198764945070447, 0.2534987904237745, -0.44992493505509296, 1.0166534042783122, 2.5268287109770657, -0.5422597160993388, -0.17267795709706119, -0.6835060286328662, -0.8501684656849942, 1.0745453217238738, -0.7609692721622191, -0.07486074288238355, -0.5321281571160231, 0.19816358407754214, -1.107720278153398, -0.2330758701796758, -0.16862503944378687, 2.6969302060336426, -0.06465111109965509, 0.14489867069656592, -0.42657219510246, -0.8348898893168599, -0.940133709151759, 1.4272324238697631, 0.37363252806055786, 1.0625975901666307, 0.07366635515668213, -1.100067173647075, -0.9883673584208835, -0.050049087453231715, 1.140355372797999, 0.586221965319429, -0.9942549404961496, -1.1367200998509703, -0.5791625702321511, 1.297141169639505, -1.892705164998715, -0.7781102588788875, 0.059516203767426036, -0.4115460075468236, -2.4442945247364216, 1.302379082432036, 0.026988575670390494, -1.3414167754137152, -0.3033572766229313, 0.6793902019594502, 0.266447558962908, 0.6438223083076343, -1.3712759139602546, 0.35707047676947284, 0.3654982813818071, -1.562968829845302, -1.4620348035617787, 0.3839945254987178, 0.7044312677521994, 0.5900145775399909, 0.14114034887046542, 1.5904329369108492, -1.0019357450169515, -0.2572247963568257, 0.3467025155360882, 0.15287682557992854, 0.411795643843895, 0.793879806987228, 1.7659698506501378, 0.43692247396194006, -0.2974048454940531, -1.223914065783236, 1.08448286390394, 0.5603686259176787, 0.24244768777331305, 0.581004066408637, -0.7702984785114223, 1.0065107512561546, -1.8040331913888334, 0.1250157971540751, -0.030997252062454232, 1.0867011695000415, -0.9007153185502608, 0.28075867874860033, -1.8373580111052659, -0.04028987338208034, 2.2734401829299156, 0.8029142460111275, -0.21915423131784414, 1.3395512295804581, -1.9240564023564664, 0.597346372491136, -1.4589901931833757, -0.911900132095261, -0.03853079577823579, 0.12892744231810194, -0.09952727338949797, 0.3267993421322951, -0.870367212049236, 0.4880801580789984, -0.878484514074302, -0.3852251640750756, 0.9040235896136876, 0.04373293246933239, -0.20259784440761855, 0.9940080359695457, 0.31246698094650954, -1.6410797758103246, 0.7612583149565861, -0.9460332788035242, -0.14887755768876, -1.1567503398241468, 0.031241371473668463, 0.5986617599318724, -1.8135582681876956, -0.8310300157079525, 0.2862028924636936, -1.4763117673816797, -0.18739880946815954, 0.6640157758190922, -0.11963401028666057, 0.828390688523818, 1.6718435039236783, 0.0775785672106439, -0.30918096245808196, -0.26563672241361114, 0.455143427639933, -0.5336097722030055, -0.07394414262469447, 1.2120743590092444, 0.7626075285123624, -0.33420161340282145, -1.513426466741918, 0.33925144669192814, 1.1615500946333526, -0.16982517418718662, 0.8715404142689304, -1.6944485127769793, -0.2624331149225252, -0.1858402891104502, -1.0591093105556426, -0.13333143619632232, 0.4135948651944164, 1.6772961650937386, -0.4386392546016145, 0.08165803744960463, 0.21284623420454088, 0.46070524960445974, -0.14564718977026928, -0.27841781081173256, 1.2809336415911337, -0.3579902517929819, 1.8911221128629545, 1.7420196424779202, -0.5524810254125412, -1.4319640996467562, 0.5487760894331862, -0.06354047693411202, -0.5937689359905413, -0.4895799856514988, -0.5271928420009011, -0.6329532556607345, 1.1750617772495109, 0.32263307738586666, 0.3960333115218367, 0.5848865471319976, 1.5928484571126111, -0.3420253317343202, 0.024097300086195744, -2.244470745413727, 0.603010033865504, 1.1671010308369458, -1.360249362585748, 0.3577071206634267, -0.882610472526802, -0.23762087088518458, -0.6190586589827083, 0.010995995024653316, -0.42104729663481194, -0.5670184092681123, 0.8655925549200357, 1.1784753960293008, 0.8980408054378148, -0.14493286938481623, 0.37381092560251045, -0.5542954864473496, -1.1049604320598496, -1.0663585660515547, -0.29686115695023335, -0.82054693730271, 0.404986794070364, 0.36003995149805895, 0.5174214521161158, -0.2919151555361215, -0.1662900535193911, 0.9328693592723925, -1.0028999648756647, -0.8610427751861625, -1.9498401787258934, -0.46654160909091513, 2.201370380627713, 1.4379528142040914, 1.8115258411724429, -1.2612540355837858, -0.2854073745878721, 2.4060059889419887, 1.5024696936200466, -0.34210034205934603, -0.10809399313886925, 0.596358100111605, -0.0008194848661813735, 1.1419940192860496, 1.5988153953749396, -0.07222238342093397, -0.02703893343345724, -0.9909088135922836, -1.6452635627692913, 0.45088767582172434, 0.20473310076474013, -0.8162005868736053, 0.5546373866182149, -0.8843584550444138, -0.40771124838075123, -0.5690406340442097, -0.9492027193283589, -0.1034637174939285, -1.0231014844453534, 1.2310795182488676, 1.0421895183366905, -0.7064909015165457, -0.6247421873585441, -0.8286025112350532, -0.5381076169606076, 1.0774160128475077, -0.3284001563861256, 1.1126292494824517, -0.3105553369962202, 0.9436470069826873, 0.6920203726055506, -0.7451229570400285, -0.41222488068655194, -0.7400600174429918, 0.2791053784128726, -0.6230954212844415, 1.0380679150087468, -0.37950640654047635, -1.2598682184882268, 0.5575127746854104, -0.8365145406264628, 1.4744002322286127, 0.26097154721547217, 0.16943746890978123, -0.25923415589406557, 0.20449166976050187, 0.6777224966195302, 0.1444317269450926, 0.4267318146780364, 0.6727074060281044, -1.0354775521414905, -0.4378457094731928, 0.2361132158011661, 0.6859749674885796, -0.7347152786056327, -1.3015067788793688, 0.7528732311629437, -0.9721382273429948, -0.9129202998460059, 0.46566994049565197, 0.19096656740045462, 0.5486464093925498, -1.1310176662186506, -0.8853977971197741, 0.060982620498936414, 0.7932703171568537, -0.3393635536827589, -1.4963232609016224, -0.9404704425558696, -0.011465402009608307, 0.49945069608966686, -1.1280817823055047, -0.14881234499420157, 1.1463619834696899, 0.6615944497941824, -2.044035255104768, -1.3366411312733464, 0.17161112492034317, -0.1434327155897565, 0.29165072344353443, 0.726175923729785, -0.7238561596371086, -0.8392116041511459, -1.2822750539113923, 1.4781121029399882, -1.1165297858686147, -0.3719803259355769, -0.21604211647787538, 2.116147962684683, 1.6604970309289855, 0.354533096252471, 1.2807098804207642, -1.1359579380962939, -0.23851460781582584, 0.7665087404150881, 0.6445966219494186, 1.9242412085718832, 1.316769810894926, -0.7946622192351087, -0.9084562647169218, 0.6060536404309251, -1.1745641541351535, 0.4490445276278494, -1.4614754804531562, 0.6518953616774478, 0.05495054089617801, -0.1732326756861171, 1.0327036162764822, -0.4792690709102113, -1.3072574409562652, 0.3196601127959703, -0.5754643383744248, 0.5964102804485173, 1.5518843486249616, -1.1401219406160183, 0.22231259418100852, -0.3367706085231136, 0.7087365504900245, 1.4289601714978184, 0.3632101551004794, -1.5121297263917237, -1.6546695039049597, 1.2210979162060418, -1.5089385129445974, -0.5481429254746663, 0.08006430772623714, -0.43349723566428744, 0.6992695625756677, 0.8899627046953655, 0.0061327245916740596, 1.001111354847836, 0.09755875531362065, -0.3493936051697452, 0.20592085266862684, -0.45121503956989556, 1.8312284560530203, -0.4090309556606313, -1.0838982210052857, -0.893912386933001, 0.7093601691228023, 0.613441559872206, -0.30396964008884814, 0.4329890147172746, -0.04346835753191784, 1.7243880659753648, -0.6233680607234756, 0.2823336106350827, -0.237691626109531, -0.8588593512458431, 0.20182120935882805, -0.025463503683206518, -0.18045785383038163, 1.8509047113135995, 0.5430845445461242, 1.48360609669917, 1.0782490428051947, -1.5769564344728115, -0.39909362201886006, 1.3312334980489788, 0.04365793054016891, 0.8775473385967455, -0.8249781915395438, 0.03516563389235393, 0.6238539637161077, -1.4579390445915934, -1.3612505750613553, 0.25492795923696676, 1.3217176410527578, 0.9397496348510737, 0.5248303604753682, 2.3260219627953687, -1.3318656007669167, 0.7475014209599581, -0.7767560771370041, 0.586161387629779, 0.9903440336668198, 0.5753714477647844, -1.2928096302946932, 1.001383556419739, -0.04768058915648365, -1.2943856773244147, 0.6936230384022805, 0.3934594178297332, -0.28396373977717404, -2.2390959641046897, -1.137442677306366, 1.5979631030761545, 0.15945465474356305, -0.10841532737077238, -0.6103525486302814, 0.4389401969214742, 0.30874941486566215, 0.8541898677107159, 0.5398590872088153, -0.12259790847891575, 0.7798783992117264, -0.8552333104745167, 1.3777738548731708, -1.2478939231971686, -1.17193834530934, -0.3073831305603241, -1.8353370905270716, -0.7078449171695347, -1.2327717245395946, -0.5842647785365738, 0.19502843561471994, 0.05973214770511972, 0.6723724285147971, 1.0095830452948165, 1.6461089005754033, 0.7720969940491936, 0.7530077930792508, -0.07730843205366075, 0.30725312334961363, 0.4465442172806615, 0.36115968775224155, -0.00941675843894699, -1.4600077075677065, -0.9938573316342132, 0.6221628937403831, -0.8006130168932217, -0.45865640413652575, 0.8420460725063547, 0.8202824664299005, 2.1281914799991544, 0.19280096366494867, 0.6922045865353804, -1.9911898240521047, 0.5277765602772332, -0.01872313348834036, 0.640909435547949, 2.0997061586988988, 0.601510884693265, 1.7447808786344527, -0.868661568558919, 0.3627608092144514, 0.45659657611491133, 1.3827308061759152, 1.0671578683252432, 1.6493646213449038, -0.6831739176303318, 1.081590920082986, -0.8206048248626443, -0.9572034185666584, 1.2747359076411027, 0.8193608973635016, -1.2650841011401706, -0.1417165451996888, 0.403996248509392, -0.6820577314574545, -0.199561968651941, -0.21366072915428805, 0.8833586043556415, -0.7430649758846355, 0.9711064563908266, 1.0077061036093764, 0.2378300552033923, -1.2438152411869354, 1.0302103809437781, 0.02782188132015164, -0.5607525032298539, -1.629132904905645, -1.0266110331533247, -0.18197393314851915, 0.5869758632642648, 0.9387352188255044, -0.8767400826861015, -0.6451897798260965, -0.050346661732584175, 0.10434405128402968, 0.3023961923552487, -0.4412889980140813, -0.3939498117732735, 0.2455038770708934, -0.22913623256144341, 0.5601751273778854, -1.1066930521090532, 0.20825261544352214, -0.31144992255229526, -1.1321255849837168, -1.0078557491714364, 0.40211976195121485, -0.6076655291782834, 0.13589006608273274, 2.1543414364857467, 1.2359110129976485, -1.7453592765307748, -0.47160032998391604, -1.1698669188471615, 0.06533226399012755, -1.0654352242487295, -1.0767492842576694, -2.019566436031998, 0.5568757706851912, 1.2086469404471556, 1.3954376796337091, 0.8892502250311765, -0.8025050972941346, 0.5074802533346692, -1.0193611492978236, 1.075376651886973, 0.6576380090412243, 0.47774713023003584, 0.4531450398716145, 0.6366432972108599, -0.007927388671197974, -1.315682664757405, -1.1332326742821452, -0.8135027422226602, -0.8479359612179409, -0.8259319048560965, -0.6475774709071007, 0.21669168398392688, -1.4861247625343847, 1.4276576047934628, 1.3952175446214539, -0.26262835623196246, 0.3479818723959859, 0.20431471680476043, 0.41111330823568737, 0.19259150560134033, 1.7726598555687634, -0.43523347599446743, 1.5350797667955771, -1.4987316459263351, -0.2576876775348694, -1.8741888179561033, 1.5826699925079775, -1.2860476223561381, -1.3790998339797333, 1.8070078907154097, -1.0410990804558153, 1.2248016661048882, 1.3290934277556525, 0.15714428890387674, -2.857309819337885, -0.49927507485549694, -0.17026276041939245, -0.45150365734050557, 0.8988840381012748, 0.07401637661868991, 0.989460807125555, 0.39567109029098047, -0.20362216076569017, -1.2531883040755534, -0.44857690542713335, 0.973299537829812, -0.8146210485955593, -0.7808192193076043, 1.3359040322271174, 0.312983416444713, 0.09713098959194716, -1.1227877615805233, 0.2786794346074193, 1.5758189955287147, -1.2805106623821543, 0.014455054774630334, 0.7432192854860206, 1.009999898045225, 0.4522804209973658, -0.20639445286876001, -1.442676282167432, 0.0026989493542165436, -1.0961005572529896, 0.3718135521017994, -0.42153983435150416, 0.09598346538992902, 1.5811320923933492, -0.5043387948143971, 1.168928750360437, -0.5686226474519566, -0.4691396606998349, -1.0208567103200779, -0.6430988860160084, 0.9072026965001977, 0.4501761157301604, -1.9474009949041655, -1.4455199214524215, 0.39455975831852313, -0.8585365210976135, 0.7855126133897953, -0.8548016779667, 1.1790661868808097, -0.33292335454727945, -0.5286137589963692, -0.6725281752206773, -0.6845912073482018, -1.0305250888629531, 0.39510466714049214, -0.026594864957346386, 1.2386786529286755, 0.5915672370160657, -1.1722834524720012, 1.2389235793805018, 1.5638023416182651, -0.5706748632640932, 0.8606768202385471, -0.5148973633431891, -0.46269351392315883, -0.2669640123271732, -1.1327716671174366, -0.0039729744602692565, 0.1371406684465323, 1.2049029015329278, -0.4794848609229171, 1.2598060989316096, -1.745848682191326, -0.8391515338326917, -0.0809974329619867, 0.5131856576732637, 0.3054394069328795, -0.11680423212713359, 0.4923728854806282, -0.1043641298587801, 0.696544218054841, -0.21656032591541502, 0.23209584642017017, 0.3525117612761207, 1.5817339801012809, 0.04262231696813284, -1.1224405297343973, -0.9727712356562283, 0.8117881756233418, 0.13988550517717746, 1.4335605138370726, 2.0511660475514137, 0.08110638315684626, 2.0259537043227733, -0.47412122083656183, 0.38175548614097504, 0.7816090254597717, -0.5017261917914645, -1.345119849582741, 0.41302970573484815, 0.049245534018952306, 1.104295757567607, 0.13105789748299912, 0.26695728094658905, 0.12190743356321547, 1.7849153463184109, -0.12232994356031439, -0.01459903471023824, -2.190470978571164, -1.2410128677938324, 0.00029037354084282476, -1.5105937113236094, 0.8415005185080661, 0.7576773872787439, 0.47190837080023035, 1.3837633458129677, 0.019371928028081405, 1.2337066474655929, -1.3568671252039282, -0.23889877802059145, 0.15669983821864336, 1.8519363571384722, -0.4593238139326881, -2.148365613066234, -0.36210383254602624, -0.14245268492611768, -0.18084202553774925, -0.05160341707985254, 0.5133155054717011, 0.05968492170476094, 0.8474966959143598, -1.5731442120631596, 0.6461920566190671, 0.013358201503470571, -0.703212795942045, 0.4643089781924388, -1.452172602045238, -1.9419330487850657, -0.25224909791411043, 2.6240283124718013, -0.9756304779434731, 0.1069767011357041, 0.21065277541761684, -0.6776994125575101, -0.25703897234109474, 1.6658902331011007, 0.4906791888672819, -0.6606912352417327, -2.0310970134039037, -0.3667091635890301, 0.0073295229316154105, -0.48691619641109524, 2.0934804845949375, 0.3398404578986936, -1.1411609702971226, -0.22685747281005864, -1.4712063014066543, 0.14737552941128598, 0.6262434681718118, -0.1402013725219804, 0.07180193220657201, -0.09245678525911737, 0.9730836711425007, -0.5403867014163009, 0.6367598141386834, -1.3529432163155692, -0.1183422217054614, 1.2144162229798237, -1.5703029126569361, -2.1541962980645724, 1.199923704577935, -1.270540124497382, 1.0168884550532467, 1.7706472771407196, 0.07405631653584673, 0.7655814986657109, -0.5125236361803119, -0.7195410834234878, 1.2301936099072524, 0.11087140385286733, 0.8363105862669576, 1.1159850975528691, 1.1366042474295914, 0.0018794588002968658, 0.7322442518060278, -1.7469750874906125, -0.11147207429486934, -0.8357882913201773, -0.24530683346245033, 0.8688632996707965, -1.1989980882560614, -0.6344865384040755, 0.5444207117660038, 0.9674152106270871, 1.5097340466189102, -0.20964470043977376, 0.5725920183986625, -0.7691083305687668, -1.142905744452976, 0.82130460716712, 0.6646329182328965, 1.1126960033815276, -1.1955590531555895, -0.2763948855442203, 0.12774394757631458, -0.9686064882265809, 1.365577705081024, 1.367250602632889, 1.681759903212274, 0.07201515760417324, -1.7160457155947928, 1.557861122642199, -0.6542742740292967, -0.2382267637109923, -0.6617411404597648, 0.0658252718411411, 0.040962837475046525, -0.11779242011914609, 1.2800862771697445, 0.7326115524716441, -0.8238644399014402, 1.702256344791054, 0.1290912731638706, 1.798766222686979, -0.6528919072815221, 0.6319040161858838, 0.879064308934585, -1.4680433190122764, 0.8702446616508558, 0.9550518045503322, -0.38649574383854546, 0.7105492665997692, 1.0287967268882385, -1.7840843985900314, 1.342113734547978, -2.0688691801267414, 0.5430230249555341, -0.149760546683529, 0.11873513111653257, 0.20277625030439125, -0.14953718883637968, 0.5109085355085753, -0.2394650707499044, -0.5478258247244806, -1.073670723020776, -1.2729460351341975, 0.49281540401457147, 1.4354731962885603, 0.26839416204645894, 0.6783818452914838, -0.06227338568794975, -0.39428250192300673, -0.6959257800169942, 0.09854411017104699, 0.22615826595761346, -0.4888755263139603, -0.4552194738685515, 0.07875899207918456, -1.327740957503751, -0.1495781461322876, 0.8341337509187212, -0.7225520915491048, -0.09328915645590773, -0.2685187438622173, 0.5786704655989914, -0.09669645437194133, 0.7475686527833375, -1.3196416128029735, -0.24441328453236794, 1.0062449207697255, -0.4923173690672223, -0.031192870882621074, -0.3714430183081635, -1.1411556124455928, 0.6119675535997015, 0.7573099292368547, 1.256239851289305, 0.3803695630169367, -0.2489835745943536, 0.2714819958813513, 2.8345520730547262, 0.23225960833624493, 0.7740068005192003, 0.30538682863037525, 0.7589508889235079, -0.10223322930455173, 0.3795578777558919, 0.5905244022696964, -0.41728843179387026, 0.46031510925501257, 0.3107167644129248, -1.1744656073497062, -1.0056218644371548, 0.6629676269532214, 1.087072060136239, -2.4151722612590074, -0.568282477635043, -0.6303885071908449, -0.023514801729055082, 0.522910394575176, 0.47534433461668624, 0.3697266895210127, 0.7069851960138872, 0.2066980863729263, 1.477006626903908, 0.33378663371312967, -2.568757542081625, -0.889905003129416, -0.633333730533475, -0.1520458624321794, -0.8206965219724902, -0.3969835349334501, -0.5077440649306807, 0.5491669400779243, 0.1804634007432507, -1.3053912306932711, 0.7782990265699289, 0.3991967169979164, 0.4813050769819904, 2.148628956638162, -0.8858502359894121, 0.15817574793569678, -0.992663714013597, 1.2764344518057553, -0.006916492821790208, -0.617470496913158, 0.2593087331682395, -0.5607627277762841, -0.08009870400880098, -0.9224687419010393, 0.8445058493080418, -0.10806425019686101, 1.1466698502553643, 0.8157278857516865, -0.600554045040596, 0.8898884972531231, -0.5254008312402575, -1.3180430052289591, -1.2311769292558157, -1.0602070005599495, 0.01565658664739557, -1.6938917738125823, -0.5365714670660253, -0.12224873302097083, -0.26607453759166183, 0.9849488497512616, -1.3342405571499016, -0.6848286252661577, 0.6494605613917515, 1.5510285058062978, 1.0675483270809878, -1.9021148456890027, -1.0681031249109414, -2.0776295418654227, 1.47017615473227, 0.5582578223819171, -2.204677913963905, 0.01853819059855184, 0.7905498144419051, -0.20061069978447113, -1.0329776087173375, 0.3016797451969676, -1.1155811441171135, 0.5579899599990651, 2.03724213241472, 1.0847372636911876, -2.825559533037406, -1.5832855017687812, 0.27935122614615004, 1.5936151896695518, 1.7399332446962406, 1.61881886007144, -0.8709312703748977, 0.44442998212451595, -1.252355880302742, 1.5046422252201002, 0.13719301834767106, -0.14209593351412148, 0.21529039850490125, 2.516288146026007, 0.1559716783734617, 1.4950283801464643, -0.7017583814553815, -0.7021400101388087, -0.8794873575056947, -1.3290960740098, -1.0455189071539983, -0.12658636020570024, 0.8348674483565559, 1.0424073110410381, 0.3840702554089481, -0.4524170514463551, -2.2555233718311216, -1.7012208913034848, -1.374729340003139, 0.32374023341975355, -0.07566598725402854, -2.368904092949479, -0.2391955953144554, 1.5884938607698436, 1.2305151061296364, 0.45405005334141363, 1.2880010651144904, -0.9889286812871685, 0.8295625004054384, -1.4391641606497996, -1.2112822530607985, 0.28188914939628323, 0.316580338980829, -0.901615172354168, 0.2904746750250969, -0.8216186030637598, 1.0900042957599232, -1.0809528730179625, -0.28589924621198104, 0.6694974164064135, 0.8128846002141202, -0.014537667888265536, 0.5397468569521043, 0.37263055401070655, 0.5149448551126483, 1.5255702818826045, -0.10011013736569309, -0.10299839178419476, -2.889497443665716, 0.2880742348504665, 1.16377424763322, 0.5988601766019375, -0.8335890747642349, 0.3263618878721541, -0.06367731818769841, 0.4042123106429418, 0.06779367106640442, 1.1336191299480853, 0.3647333071702055, -0.5926239181908105, -0.126157577990292, 0.8471489525419347, -0.05984571676838935, 0.43554365479657636, -0.7668546215090237, 0.8724408171841421, -0.262768618712425, -0.17971632567644097, -1.1955947827763767, -0.6043710125090941, 0.8055203767451393, -0.05396199118585474, 1.1567076780669565, -0.5271092309723652, 0.6062758511108823, -0.7902044514239126, -1.313114175779978, 1.4949047193638192, 0.7485391697796394, 1.1869853804494208, -0.1318818777628882, -1.0899962446482256, 0.03473046660450729, -0.30815412117368784, 0.9059592041162, -1.182865660485928, -0.5175975665140966, 2.207674942369709, -0.8204597360538831, 0.6992721120050922, -0.08535171010427836, -0.14522812410999694, 0.7198929614844771, 1.44973439778427, 0.44164822156180217, 1.3393355745568676, -0.5161545129148016, 2.7537421685480363, 0.8237122752480286, -0.8753161417094468, 0.9473994314143528, -0.35332612728107765, 0.5816625783738614, -0.7144682997313634, -0.7249431670601373, -0.3011137764613978, -0.7222361240504472, 1.53828008583083, -0.9270749922473646, -0.9217327152069943, 1.9450994708203744, -0.09960350530770899, 1.2591679055128346, 0.4707079385037571, -0.8195937567657904, 0.2626992067874151, 0.2782370835488258, 0.10863866867743648, -0.04031697506077486, -0.4152118461013588, 0.7137355052200853, -0.5160278821737281, 0.7431172231395556, 0.31960989048792515, -1.0317538547024616, -0.06544033973641201, 0.47375669090574113, 0.17102995160108972, -1.0115829296629741, -0.37574046981504194, 0.3001627573166027, -0.4985575978736727, -1.7456825587260651, -0.7035231691247644, 0.099520255609225, -0.9941421681536108, -2.070105679557728, -0.07537036823841223, 1.9457647529460325, 0.05967777091695956, 1.2732541244174094, 0.5946462887942431, 0.5404740848277088, 1.706788357029261, 0.5770804315712461, -0.10093830775195507, -0.39657630319342635, 0.6934736628974507, 0.4884684322062162, -0.9421329788387829, 0.5163578265648018, -0.11933615609139686, 2.2510700214454173, -1.050537621000532, 1.737874011108263, 1.1488149295560528, 0.38662645187577316, -1.4417508792225266, -0.2170552894865926, 1.4566163171349353, -0.7217456208320411, -0.5440205977832803, 0.026497126915280476, 1.6034725119872244, -0.27273196973030694, 0.7567084733780298, -0.16523975845432026, 0.5577520507184208, 0.13893424344981975, -0.9978682559235503, -0.4107432348211427, 1.666835574300982, 0.23142068017623785, -0.45541844403885173, -1.8903653028744731, 1.4085325026340385, -0.33980119325182795, -0.6551541439466418, 0.21737206936295958, -0.5171359437368449, -0.07517154586660502, -0.9253042912313917, 1.231709217820912, -0.7812821453752884, 0.233985638391549, 0.8124023406702421, 0.3344576874239622, -0.256925814422766, -0.025443744223714728, 1.377310343323739, -1.9332797667069685, 1.1468146872813827, -0.2098214614167321, 0.6597511290570579, -1.2749276487214563, -2.9436382955523923, -0.1716573130819361, -0.5252434168407145, -1.782419844968337, 1.0751377487753984, -1.9807281210744656, -0.9051416226810176, 1.0612037845817768, -0.1092999809792091, 0.650556513099322, 0.6922540048700515, -0.8029202599206479, 2.4974853164002067, -0.46682331356978224, -0.15988840263049528, -0.78261872398039, -0.20667954220972057, -0.5591743996952593, -1.0244329321714323, 0.45335590564759704, -1.809134511085715, 1.0210286852573063, 0.8056881147695613, -2.2084745544083244, -1.2278372518842262, 0.4749561898140021, 0.3188420601985783, 0.1813089532098985, 0.5162553190298531, -1.728554445081325, -0.08439530179538993, 1.7359799990866562, -0.5468299371674525, 0.3947818291429993, 0.6243447331693588, -0.10601721765130236, 0.16796176280606176, 0.6852881961198123, -1.8723557872627417, 1.006285132031107, 0.30354455342741027, 0.6893123221195995, 0.7639933471732082, 1.755699080015044, 0.19275173328093856, 0.006637658755399356, 0.06348141787341571, 0.5179919065508473, 1.1753686564147403, 0.7227850705189696, -0.9831316990070522, 1.267064272321628, 0.30925865257534546, 0.823056811246764, -2.0251141553062673, -0.2301611708173064, 0.8243438907404241, -0.23011290952028365, -0.8636397920021468, -0.07639796387825085, -0.40899655290559567, -0.36275874521736806, -0.47122519181985834, 0.7281427190658902, -0.5459013384234962, 1.0136103249817503, 0.30352130213173245, -0.5118172913626308, 2.1757940276450336, -0.41623118847421137, 0.16058479817436852, -0.8798015836545093, -0.670345427452725, -0.8570034245572548, -0.6569034987892192, -0.9128950099233968, -0.28116069333515664, 0.6787541951652389, -0.17931735448185643, 0.14635162641317429, 0.2536672532131996, 1.0579469050407244, 0.5566570096175864, -2.317233776549872, 0.3654333877975708, -1.0237360739474608, -0.7963750764091398, 0.7812378276556636, 0.08754406802941829, -0.34809056169617, -0.36421373318344097, 0.230205534218427, -1.818148582755094, 2.626892103208212, 0.2743031257887486, 0.49112644367361047, 0.05151297683206719, -1.1261485559591986, -1.6924941108087288, 2.3102139500569527, -0.0012351224629281116, 1.2599104919831763, 0.19140766401854323, -0.11050356688079536, 0.49036006629694623, -0.07613957607642806, -1.968674411715577, -0.13900598779461085, -0.15303196270231414, 0.1086662226322165, -0.07704556860767037, -2.750091639366437, 1.7638083362711743, 1.1817361336801784, 0.6024941581261999, -0.7163693122229671, -0.31579878206353856, 1.1468951363962077, 1.8869807996024506, 1.157914535381198, 0.21371656542480116, 0.327887728668051, -0.09443942939090604, 0.9439505820206368, -0.1337120474835557, 0.5174880137389646, -0.7093166221299141, 0.7106540094915024, -2.6821354441862777, 0.0555634330985636, 0.6588935672295264, -0.004579509716999836, 0.42818106720777693, -1.0166213155550023, 0.7733102747887106, -0.5764436313093456, -0.8697306378172311, -0.5069228265635629, -0.007474572946986594, 0.7991411635326126, -1.6761493992049123, -0.997371852817285, 0.45898170718466313, -0.35903954625303036, 1.9686366060143294, -1.5564231643242166, 0.5362208372514475, 1.7775279354094802, -1.5455180237897743, -0.5972829718396496, -1.0957502410515756, -0.4055022241650514, -0.9423415030331306, -0.12312506945315327, 0.7726229626782287, 0.2737485104150801, 0.49347047698184027, 0.2929347188993437, -0.9706622860698993, -1.198476860666316, -1.4252628100740923, 0.4258600009324489, -0.5159461616389933, -0.13025647929416007, 0.16353738400643159, -1.6704940620481448, -0.09940576898962447, -0.4924016788712, 0.8383306265382173, 1.3470458407219181, -0.16206545673955602, 0.673284080604467, 1.7590938915511067, -0.19497921626583664, 0.18066582902621775, 0.036460460735977925, 0.5253444793191944, -2.3821413101337385, 0.5006500035447748, -0.6021670557504912, -2.053916397110847, 1.3119748447789854, -1.1665092494751637, -0.7985790071178108, 1.6837785320434102, -0.10348915795338251, -0.3287559515246722, -1.4750499361284959, 0.8256598365647546, 1.929488277238166, 0.46745505986042835, 0.7715522655541222, -0.6576834262027287, -1.4705296535494596, 1.1255261255360016, -0.7006841217537491, 0.7773599461402071, -0.2699281472696309, -0.3446875847992837, 0.02124567794928901, 0.06821967084047244, 1.021126419280695, 0.40198500996095965, -1.2181586822427863, 1.7754633386850736, 0.9441325993376273, 2.555235355162013, -0.8971578699471419, -1.0103446782271583, -0.19443604261800368, -1.005394607684617, 1.7606738343652497, -1.7514079854472417, -0.5821768349035408, 1.0971789079653635, 1.1751570843218166, -0.13688158458606975, -1.0650508603019386, -1.7279083928509154, 0.020800089260045528, -1.640844543255192, 1.2449794072065137, 1.9256004381397986, -0.6339131598946012, -0.1370321898805426, 0.560078375613911, 1.2576262622653798, 0.9521885078677131, 0.08694205594616929, -1.190169992779369, -0.2634483325324337, 0.55720417746677, 0.9957022941619608, -0.24236837898727567, 1.5571427171554524, 0.9621429370397995, -0.7772659168086957, 1.5912896764307005, 0.365896175386589, 0.05289920690766669, -0.9332700074385026, -0.5038346833745163, -0.2479525370770347, -0.013748790119514478, -0.08351213348851505, -1.2214811316083627, -0.0882432136330419, 0.35200477758110843, 0.6705962530287267, 0.45985451413571904, 0.9503497247367684, 1.623641936128743, -2.7787918507817926, 0.6183228668914805, -0.10211106739296909, 2.149011541863154, 1.5856736710448502, -0.4021238680463935, -0.5751787690543193, -0.2492074303458584, 0.19626905222759855, 3.2267692051620345, -1.0796549597789848, 0.5259078364013767, 0.4687207550107649, 1.349693025864018, -0.42119967582869167, -1.4258812510461436, 0.27588713306119705, 0.963359667914534, -1.3283080353871297, 1.082596510917902, -0.9995600682491224, -0.2711418771930025, 0.14106719368521894, -0.717701316745478, 0.006086620357506482, 0.6776061185978304, -0.6675972142396667, 0.12899448252825507, 0.6046862452996029, -0.4139325229872555, 1.0501828629476824, 1.2801504858990633, 0.34369899879915206, -0.06621260122014806, 2.411758355909487, 0.9237271211450684, -0.3831453004590921, -1.1585183957172158, 0.4312157761177159, -0.08972129662578908, 1.387443013965094, 0.6919859932039713, -0.7400844462936212, -1.1386991462438525, -0.26792508288118166, 0.22557342345740275, -0.8191678625823582, -0.4702072776345643, 0.37977382272845117, -0.38604351300197803, 0.24134565738079583, -1.6215636803134428, -0.35538249991215204, 0.18472336864726893, 1.426315016611698, -1.432810008162123, 1.5770964174641804, 0.6041643638428851, 0.16017411014894917, 0.013628226451160342, 1.1678692695038604, -0.03567039491433677, -0.6400841478487644, -0.3961531966525717, -0.6697734431115185, 0.2951665221238445, 0.21306101006407935, 0.6127155383379508, 0.8241094660688373, 0.19585913239938071, 0.4162082991441147, -0.6942645851114823, -1.0392559675099786, 0.11968992056637831, 0.1371795013549678, 0.7627830384564721, -0.9213059380506069, 1.4357348420820881, 0.2896189839459134, -2.115315846119167, 0.4441506348251807, 1.3226812813295115, 1.6712631197154721, -0.20360882311701622, -0.01339519387122941, 1.168450909736742, 1.2740123866211723, 0.5544070546711756, -0.34978545171461506, 0.5536405764139399, 0.9522511113358239, 0.5229681648581519, 0.2076725281374459, 0.9665796221780651, 2.2390779121136215, 0.41720394729592486, 1.1769949586743984, -0.32425482915335524, -0.5002367286583733, 0.116750240358748, -1.9372128971384703, 0.7561426788762325, 0.15542832740040924, 0.10331571802938933, -0.3874881721934041, -0.2859193554259086, 1.5407143896030802, 1.1051910475526474, -0.597634741000371, -0.10435560670034447, -0.22897360803237224, -0.47814590762023157, 1.4336884153389116, -3.064429727713371, 0.3664950803198401, -1.6533396201981474, -1.6063707781326577, -0.4810559300471324, -1.0759947775471232, 0.3673221129815706, 1.176663537942836, -0.2055311442535335, 0.11740986870846568, 0.225534152860113, -0.3565259457706909, -0.04725984244261387, -0.4981012683969055, 0.27066506821062064, -1.355832282540043, -0.07137051119673173, 0.1684363821360801, -0.38283079084725485, 1.7828497781627861, -1.8617907158439782, -1.4942975149048467, -0.35368476943955857, -0.5404420719776233, -1.0062407209944413, 0.1473754585630967, -1.3642039101406531, 2.2653600553470445, -0.5467889208181013, 2.4746712509370115, 0.1301608238355052, 2.240532366048811, -0.5963936090055638, -1.457923386594101, 0.0669284270232473, -0.6984390412646188, -0.7241636378669479, -1.2695194750940517, -1.6436752226027975, -0.4825026401409458, -0.5955401113186818, 0.3988701632157371, 0.39359136359878216, 0.12674580016970638, 0.35066569140953374, 0.11445356916104135, -0.8561583264797362, -0.011498913438083194, 2.4381339179034742, 0.3641974903025045, 0.9702630433109177, 0.10462457776882443, -0.3053204424026727, -0.9195682377603956, -0.74134637420306, -0.45096829496663415, 2.033901817615707, -0.040845361739753235, 3.0737637023597095, -0.7342627340107282, 1.548008588146325, 1.0497220044133866, 1.6694381072150561, 0.17716288452032286, -0.541243296859065, -0.49608629460261955, 1.499462748064886, -0.49062837246331314, 2.143671978235546, 0.1907225367784219, -1.4433034268036045, -2.1579531667838454, -0.2564407974406327, 1.574312121265631, 0.7418159966461171, -0.8686524846577047, -0.20856712375882588, 0.7257924754309518, 0.27276803910060055, -1.2359739684898112, 0.7522873953320237, -0.6658436232142871, -1.6740834286167754, -0.401788184863778, -0.1273772798848863, -1.4237352520496631, -1.7683943335898893, 0.004174857107879421, -0.599535509421882, -0.5966183641832498, 0.7844396953743799, 0.7597117686724353, -1.67858414324602, 0.5138551318366008, -0.2805109884843243, 0.4579853431407855, -1.1929790672356477, 3.444661507226845, -0.47104579027141824, -0.8013566479793309, 0.21410467279215173, 0.33616405606528943, -0.7103382177871845, 0.9748585024256584, -0.7293060809514581, -0.26431031711192154, -0.349860193474961, 1.7588160908803432, 0.05174699800336361, -0.8508431780137726, -0.06094003963080581, 0.3493730792459551, 0.3292775138134809, -0.5438446008125757, 0.9622626637829457, -0.22345604975436703, 0.547033929432576, 1.494378226786404, -1.592581033958752, 0.027475927730741038, -0.8851398540588428, -0.420338138257633, -0.23847435437774453, -1.8717957663080687, -1.891529340405526, 0.8177134902116683, -1.5932096049631417, -0.5892539072950365, -1.6704590340640668, 0.8320689039602023, 0.2230131260873846, -0.011528054891441108, -0.20090562668936315, 1.4560712086346415, 0.23345007538238283, -2.0534080054251533, 0.02124543504622815, -0.7963911093018865, 0.455575317716683, 0.032435526621240746, -0.8185061929416392, -0.46327698852745053, -2.0426624420706196, 0.9541345210442022, 1.2053525453703804, -0.17476718549735573, 0.7185806694177314, 0.5318154551212814, 1.6578470645467933, -1.4960004589405063, 0.02811942875720222, 1.290056635683483, 1.3709487002735874, -0.9264845237815438, 0.5486315732668163, 0.9754038449245083, -1.2918029598006684, 0.5088103105279382, -0.10906184832313418, 0.28933319137185076, 0.0052531902366778375, 0.059552841843543536, -2.0154791836451236, 0.14279458302582468, 0.16895084556770604, -0.610331962137654, 0.47117528204806514, 0.8123525976854089, -0.833196256138625, 2.081157091058573, -1.5588764920996023, 1.3685882709019503, 1.0142770073667813, 1.1727409015054524, 0.14493741791387102, -1.5116671390493912, -0.08692091621208353, -0.008782520982657357, -1.1997807092011479, -0.8023740875111371, -0.4066487545634155, -0.16909709475211895, 0.5912136175338686, 0.4712203167165343, -1.3037708407376452, -0.25598365111931204, 0.09186362094265042, 0.7865773768652222, -0.9671502816494509, 1.1728079294990197, 0.21565761695227112, -0.397386499564145, -0.11351381134292012, -0.1104677280719895, -0.5842734431455994, -0.8794174068236307, 0.34986397469839386, -1.556106517884751, -0.012790473370607573, 1.5712466003189598, 1.1566314235075472, -1.2644085256118527, 0.14355454553908858, -2.338325158010787, 0.689938097671368, 0.13044967670203592, -0.6892755463443839, -0.5083349799819632, 0.7686800538970631, 0.07037222387140007, 0.11276035272137164, 0.6237630401332791, -1.5380960620067796, 0.16750124292181925, 0.5091952981466602, -0.9357472604832203, -0.44675196571571696, -2.3934180634824402, -0.04072998737527174, 1.3297619469529864, 0.055267846147574656, -0.28248140161592394, -0.06630817758417744, 1.6726269491846428, 0.6533825886648645, 0.9508468442252223, 0.3510031111651853, 0.19039616368522003, 0.140582825875077, -0.30148581733352436, 0.8034544636396372, -1.3837255506891886, 1.1260403181041319, 0.16891078340358606, -0.18939646502694435, 0.328989745201375, -0.8465686136742023, -0.010302453774897146, -1.308703233659118, 0.28592149169561293, 0.7617136744426832, -0.5016997304222124, -1.1140695580540065, 0.9802809658221843, -0.7791734856507584, -0.1341614992845625, 0.11567699322273287, -1.29673456671157, 0.6074930722969547, 1.222018841206796, -1.1682470990690723, -1.7533407051704308, 0.591024628707352, -0.22382920098648995, -0.04135042255692958, -1.7750526812647711, -0.52253983780706, 0.20202668616556932, 0.23804497727847193, 0.01869770117781115, 0.7772116466620507, 0.44172672292438336, -0.4120270536066626, -1.6523521308069116, 0.6799526287692279, -0.21708304864565098, -0.3122839212330006, 0.3629145788894393, -2.0154564643972113, -1.02296832028721, 0.42377470619487556, 0.29773688078648447, -0.06480500802554008, 0.5448292153698944, 1.2714378470436765, 0.9404803469462903, -2.6958389228168254, -1.1040865636849573, 0.037425049480685965, 0.35215661693882233, 1.052967272355037, 0.4819225713792894, -0.34734747421160594, 0.6788220843281267, -0.660117184064188, 1.287578657218294, 0.29020103271057823, -1.2430969871096094, 0.872317361386874, -1.1098650742797747, -0.5872414530350698, -1.9104684421493496, -1.2495982497871598, -0.16779974510648524, -1.0806008784355943, -2.39263173708856, -1.3940920520729165, -0.092656960197086, 0.23249063366702782, -0.3101900830244256, 1.5372271721976847, -0.2862807104799182, -0.102542691410642, -0.1787121254028543, 2.4750341382062224, -0.5910072538106786, 0.7969431123984632, -0.4143150990301017, 0.9711213006369681, -0.7590358169871847, 0.6501132767631351, -0.7866892366675386, 0.03900990741232623, -0.7784681685854526, 0.6087790978438188, -0.556744894992482, -0.040733803668467974, 0.35565520230492337, 0.6481791765209468, -0.6216417109951085, 0.6112694082523238, 1.2903161217033647, -0.07194552914210628, -0.5644021739525283, -1.9914960804774715, 0.8982847908125111, -0.01803240669279298, 1.3515983105566878, 0.3066487631075639, -1.0052927311443465, 0.7914204627108047, 0.6450023208705333, -0.7528541976832904, 0.8927165926598883, 0.14595547280987264, 0.7399686529032454, 0.5492124605384658, 0.19164983982510309, -0.10362346074473555, -2.0747304286309785, -0.10181387061647076, 1.259713909266325, 0.23525363890416648, -0.9176391951039337, -2.185969712245269, -0.7768717644626045, -0.36526833069303327, 0.41760630017686373, -1.287676251074159, -0.18570927200851947, 1.6588753411447414, -0.30697862301187334, -0.5586687382595118, -0.3374707654864567, -1.2695756062863774, -0.680834109376477, 1.750212922358874, -1.0420768809899668, -0.5877451994775724, 0.45644155533556413, 0.848822309855389, -0.70375673162518, -0.4134818682230168, 1.3167897342159027, -1.5288442063366157, -0.4054170446796195, -0.7295259497621416, -0.95922845722665, -1.5444683729805089, -0.607772093379203, 0.6472563514154859, -0.7485834216410533, -0.6794196522043031, -0.03889520675167258, -0.9217463501167525, -0.008435892331089101, 1.7022667368537008, 0.38820875329821597, 2.818530902258571, -1.1921902410875358, -0.1755215948101453, -0.08492807970427235, -0.3518548008505526, -1.147671677383411, 1.0297489850692594, -0.22999010573968331, 1.45176190281731, -0.35962352702076167, -0.11272862825360128, 0.9514195918787214, -0.19554443824984324, 1.4860380110131435, -0.8043417806124026, -0.807264421774607, -0.4656794773162304, 0.2490114804018221, -1.6924696536915482, -0.7477956834648781, -0.7914368440771442, 0.28387391561761843, 0.5909617702773509, -0.15198390721411875, 0.38105309417259947, -0.8447680219204864, -0.9263470180542551, -1.265680049512629, 0.14566610463118937, 1.1858240254151298, 0.02908629342523688, 1.160925178790234, 2.183544433496267, -1.4417737266641526, 0.31851503646728746, -0.4778847364207387, -0.22837455720445202, -1.10431203828414, -0.6879253536323889, -1.010311130441623, -1.049102064958384, 0.21453679855747423, -1.8005197484103563, -0.46835992290919026, 0.10164461744053825, 1.519139782393178, 0.5591184318328217, -0.3711739611726051, 0.4408755719883234, -1.0983023871412372, 0.19332677702245263, -0.42387819219095685, 1.0346324759638186, 1.2055064981684975, -0.5655395567461791, 0.23849273844634555, 0.7645538186322858, -0.8209513787993764, -0.3349950697706804, -1.1709519558241301, 1.337820696346218, 1.266351939595859, -1.3118109541194551, 0.7021371642980825, 1.1707678448205363, 0.5106017206515046, 0.29481488469378914, -1.639203567765689, -0.1272469697420655, -0.2568114733319029, -0.8000283652816085, -0.4178867673117715, -0.18838968164714412, 1.311242677472241, 0.02140315948659808, 1.2251230828920052, -0.8436703961199109, 0.8649365234802162, -0.22131234787351148, 1.9671615117649743, -0.469527260513015, 1.1455485806432901, 0.01943571708318192, 0.49076063528144287, 0.11156650326061947, 0.15237324932557256, 2.0684546771082157, -0.7552548892097183, -0.04017986804633389, -0.5175556203840186, 0.06745536391180655, -0.5581887699012748, -0.21218238927772873, 0.11840841136739458, 2.072522539812979, 2.518196792642866, 0.6296822251533977, -0.11330813069884359, -0.5600460223777223, 0.07866256369725153, -0.2792996017801425, -0.4794568642014016, 0.21962640878277392, -0.46968879443749184, -1.8107198351016536, -0.3121195791118555, 2.704091473982784, 1.4465636617077, -0.5423204370009027, 1.1113199578894675, -0.6445257875762582, 1.4722191708704595, -0.671163480158731, 1.3930001349817955, -0.48741332293575734, -0.1834108557013068, -0.4082808694887725, 0.521428087890967, 0.02518454398828725, -0.22383195956094828, -1.3658037232798033, -0.8310829876748688, -0.10285109338424014, 1.051827616163094, 0.8224802509166824, 0.6964107320600958, -1.1634431680123398, -0.24967487661542623, -0.18810775872796295, 0.5525389157354925, 1.0958060305556652, -0.3086226695891949, -0.8179139475293058, 0.7402966872306735, 1.5762873514555067, -0.9034054966124209, -0.3626643335622305, -0.09752102590171602, 0.6204796417441357, -0.5650519191572416, -0.24135821060338178, -1.138602288378984, 2.149147516401321, 1.0764833830953249, 2.0465869931898677, 0.984195404892985, 0.6335160386147237, -0.12755784896626823, 0.7645276169034014, 0.05527528964452218, 0.48527565025622255, 0.9274711882783484, 0.06540459295650272, 0.35332103121178493, -0.5858366846382235, -0.09704252215345247, 0.3067905596932887, -0.5481783232332295, 0.41663186668387636, 0.29633641638521985, -1.8040700195614978, 0.4312264238532457, 0.9245546988250163, -0.26138530539486277, 2.618321928259325, -1.1323182052144387, 0.09780233385255283, -1.208046661478144, 0.29835295595436984, 0.7981165781565889, 0.8219525411680036, -2.018713509540491, -1.5645806198609986, -0.0358692447458223, -1.059982675204145, -0.693467074724974, -0.21609546166253044, -0.132030926955358, -1.0192315433548038, 0.17958395105272862, 0.4530656872877374, 0.4916673715128897, 0.23433620448564424, -0.7964041545014461, 1.2431037247347976, 0.7958881990201401, 1.7752792886391466, -1.0950275301614114, -0.20555935533148334, -0.18771848878919387, 0.7823424141221321, -0.9947277961009177, 0.5419628272986656, -0.26262988804112586, -1.0533096768545616, -0.6448588823973364, 0.20918216113469806, -1.647324453821108, 0.6822900802927832, -0.4153787309636267, -0.5835992321255646, 1.387561588028563, -0.20137846335962503, 1.1055772253568108, -2.0542633771176178, 0.37770523505687886, -0.1789113185024417, -0.35692732946610467, -1.5780176398009904, -0.6994184448884541, 0.8569700596948433, -0.409953794225296, 1.8258978527615095, -1.5373078911021951, 1.6658439494438344, -0.5378931686190704, -1.170714500283128, 0.17159207065935814, 1.1412940721262157, 0.4574075108887106, -1.0670689045667483, 1.2163180143769994, 1.2606444321802996, 0.44707974581430476, -0.8880132014347153, -1.2194066930866752, -2.4239278215183653, -0.9786108782375432, -1.5381539490860654, -0.5508869314965729, 0.5622665204632098, -0.0021063781002238326, -2.340126299060275, 1.0176679594030724, 0.465103292651719, 0.5907227711364399, -1.16760309197191, 0.03019824066058312, -1.3764999787918624, -1.2718215884026338, -0.17831627443409098, 1.2814054096612724, 0.2352658043763882, -1.205795351890635, -0.14128077527945218, 1.1379604528429612, -1.1483929447125005, 0.6874545329063514, -0.3539122817138465, -1.5232502992267007, -0.050609180929962264, -0.8924370414331331, -1.297095682798256, -1.6219132561134744, -1.8936760290626895, 1.1850047476517926, -0.46109733455122986, -0.27229948004941384, -0.07406098498002424, -0.9504368214456228, 0.9462613372780316, -0.8295241138993558, 0.1532323742698515, -0.6670549355196314, -0.5923159725527288, -0.24794113629509476, 1.9524995636018985, 0.4998450585359373, -1.1062881702257346, 0.13587800218672572, -2.933285654248314, -0.5641717627423569, -1.9537989457403402, 1.4001569822391131, -0.8410184862184784, -0.027004106559853473, 1.2117092903312259, 0.6366541067298124, -0.7927016697261386, 0.3384450811176931, -0.05709767634582821, -2.3515725408536894, 0.1750208690318183, -0.3026944554263393, -0.4905332458185276, 0.9231432054711954, -2.357298396200864, 0.6023402728805096, 3.156616872415227, -1.5758182205286755, 1.279742612350356, -0.39115642800493106, -0.42046240905743937, 0.7077895159892358, 0.8241745991646267, -0.31797129987295547, -0.314927637070509, -1.719432286477463, -0.22463973742817986, 1.602752846767361, 1.2519450436183734, 0.8674702677622947, -2.159152892925549, -1.171526081441452, -0.2585872740721711, -0.19635490329279073, -0.12001268342173535, 0.02378881682899219, -0.6776483928156894, 0.15959481550861207, 2.311806400205373, -1.1536468631186136, 1.1117805111879409, 0.18586996614404738, 1.1681236098688774, 0.6455650132643814, -1.52004672854632, 0.6896434887615169, -0.11600636163934207, -0.561068875549397, 0.7985111251313839, 1.5477096805098538, 0.8736074301623714, 0.7045361548973016, 1.1633319899575516, -0.24810891589461803, 0.27921358856819656, 0.43371508468149905, 1.1034564634717612, 2.5050466404303178, -0.16483409412670413, -0.5104686309595555, -1.3816631380157924, -1.0306638520753968, 0.7211123735753934, 0.5465131769555273, 1.256422110212107, 0.6845546175438181, 0.861502781258374, -1.0734813555944887, 0.22175323284360016, 0.7049097122985603, -0.6522467285940129, 1.7072201366740363, -0.218788407408003, 0.9135905405695138, 0.45871730731321914, 0.5817876570809112, -1.4691717709820848, -0.6547737155835915, -0.031131233227691926, 1.0377593136846333, -0.19582358593366028, 0.21268648214938646, -1.0011126059555102, -0.3886965903390829, 0.38026858055456425, -0.2940279893907621, -1.0254077160288062, -0.7470083066654714, -0.44429114269105474, -0.5453110778713616, 0.5395861166662994, 0.2708135011800522, -0.06470059403908594, 1.9564617543435643, -0.432333919041814, 0.5067048525472279, 0.5229330935175182, 0.2101794397804985, 0.938179336339367, 0.7868447097213469, -0.003443346051061483, 0.8592325354683917, -0.1420839585047478, 3.694396658613518, 1.4223347031385067, 0.9093936289301013, 0.10676877081902253, -0.5490524586350183, 0.5343222168326373, -0.23424488468910212, -0.3933356672017194, 0.24340373642032204, -0.151845385526148, -0.052169764880484165, 0.11993162552943759, 0.9696712175806628, 0.48223588919504423, 0.3362324371014734, 0.5702467806453818, -0.5677722459946181, 0.10589223557059865, 1.63430971150992, 1.1167160311609072, 0.24731495129876208, 1.3840288689619975, -0.608078568085077, 0.6381053300546177, -0.5284922338347697, 1.7509891918147393, 0.3421886169674765, -1.6362331822749736, -0.680564397150541, 0.040092156223998636, -0.86840265581892, -0.3851893556962164, -1.4179944754987586, -2.1789530489674434, -1.730500341395348, 0.7055768996557064, -1.0630408844227082, -0.025651798551981943, 1.1545239669542142, 0.3822274530557303, -0.8564210096587669, 0.24862244983937248, -3.2452671685133874, 0.8342279703633458, -0.12947529351286155, 0.9607448412421005, 0.467359223796623, 1.259057041323901, 0.6534600536554882, 0.16045273928746076, 1.5180994865453756, 2.4044364735877495, 1.4322423656814474, -0.5396552341138903, 1.5001083210271866, -0.40752518020982137, 0.24379621814635563, 1.568544867046723, -0.36399644326235775, 1.3651936557912976, 1.527450185027044, 0.2296590550535314, -0.24640404058641793, 0.521824057451896, 0.2611739816151239, 1.2230402752882619, -0.40577437456391996, 0.17837959271577777, 0.34384716627561107, 0.1957037916879198, 0.5107196971780921, 0.9279347948045223, 1.732081755416494, -0.5359620186444262, 0.16135228833214002, -1.4842117381155104, -0.6169655436089154, -0.9782268599603801, 0.5397710042994935, -0.5009348930070621, -1.5315212140260033, 0.0747970707967447, -1.4494186800199684, 0.6024403144467947, 1.9344634485001362, 0.362917739949109, -1.7873585688659743, 0.007102722785281595, 0.9621410190126948, -1.1994823469818916, -0.7986937335258988, -1.043382888307045, -0.37978703537535596, 0.06033174573831292, 0.8484634589790246, -0.554799645376418, -0.6424234644533247, -0.9347591027477961, -0.11884889268277901, -1.0074184279630418, 1.843852316945043, 0.9049680459286583, -0.1020949780166925, -0.023625491117846724, -0.6987074801465749, 0.7367260534596327, 0.46879168284441974, -1.1716576184486436, 1.748442763993925, 0.6726043302130907, 0.24344362885304316, 0.5123930577771927, -0.7015307160413079, -0.08775392617801109, -1.6704336232950232, 0.6555201813767159, -1.3233402331852437, 0.9718232401212409, -0.06652701892490973, 0.29198763423108315, -0.30389706538913214, -0.9597738501486184, 0.8016510326723989, -0.7350318096843497, -0.2599709044828511, -0.9543273494437775, 0.6937305181206764, 0.04587730111621826, 0.688526591125678, 1.700846111251511, -1.0531781861252807, 0.5184226505092429, 0.9653697005333185, 0.2444209529484008, 0.4833790053851811, 0.4416532928545742, -0.1901146731849631, 0.778043714748529, 0.5893915031188904, 0.7325648321745646, -0.37816087149933725, 1.9095203339863673, 0.5818574786277607, 0.026413665409351986, 0.055519072685805616, 0.8280254668315651, -0.9880544563406843, 0.6496247503606364, 0.08059595017119925, 0.043155862376799206, -0.010801137689456047, -0.11594149225283278, 0.15549382656469765, -1.0938146945446239, -0.8747865846025773, -0.8377376042618673, 1.5775132663157476, -1.5267560343471966, -0.641638595195471, -1.0206786268354715, -0.31654558845981196, 1.2070836021007163, 1.2519744543664295, 1.3620211245393679, -0.5758049200211387, -0.3436571715217041, -0.006809008756925487, 1.0425721037204725, -0.2683453740654711, 0.46386482154661124, 0.3781899797440103, -0.5260694749804433, 1.0108049809703041, 0.4486277694730061, 0.8482271658846813, 2.397841439783694, 0.39723551056344436, -0.2169180054439329, -0.5363785591164466, 0.09033058981696311, 0.8193942210427411, -1.5809830905048585, -0.02670988696703673, -0.6827856593323337, -0.22222234231234525, -0.8100678193369528, -1.5010142366488506, 0.35055719441474376, -0.8203869351978991, 0.3372525928053179, 0.06784539248672772, -0.6001969511182088, -0.29251335207346746, -0.6780073507781026, -0.6638991876422455, 0.17738912380520336, 0.5614311964442439, 1.8035575929699177, -0.0802772871632139, -0.004038993425842106, -2.351661717633923, -0.4607114419602301, -0.4219906367240297, 0.24029341388346526, -0.333280819699207, -0.7576124081110535, 1.453642002629453, -1.074770940474729, 1.1005675331575169, -0.08991782543364067, 0.3607891459177083, -0.337135787133882, -0.3691534271073082, -1.3802935488570502, 0.11498393839896288, -0.4363246859975441, 0.6294879355662918, -2.3515927064207047, -0.9967749652057925, 0.3503445075336472, -0.8461719960976719, -0.8368394395832245, 1.458325476116301, 2.1659032356443153, 0.531541037766066, 1.1515158845890374, -0.26215650787896694, 0.3113520994802183, 0.5049172087114622, -0.534266977246302, 0.8159919682986075, 0.29061212103918344, 0.15196074758868375, -1.42823657726965, -0.12276741927014596, -0.5497977505621221, -0.6769131288740722, 0.31520858933807877, 0.629821984206627, 0.24955825646821295, 0.5560703597910377, 0.5829510654291916, -0.1780318322112038, 1.132746924847246, 0.12842172255224166, -0.6010750772703259, -0.11754495476824414, -0.11592383992322612, 1.2165434367324701, 0.06691744116410338, 0.5198795317278825, -0.19318699184419988, 1.1852094246450562, -0.6293234528159541, -0.5034414300869162, 0.46564471512253197, 0.4542039761188095, -0.5323195566884231, -0.5867680714716964, 0.7819815768907447, -0.36857611215235153, 1.2394440311284398, -0.09918502705268852, -1.4405219265882685, 0.21351787348756185, 1.6704281601264572, -0.8774058277808333, -0.5593118830315608, 0.7856402782685128, 0.5707080415894913, 0.9174256797194358, -0.2775314144149202, -0.12301658290160146, -2.0846643776078353, -1.3762462862971638, -0.19755419494017762, -0.006641491650361934, -0.9096274383754026, -0.5971099252140613, 1.3112735562120001, 1.1083482037133068, -0.8282816855633934, 0.2674672916372101, -1.7728211173816888, -1.461030528906066, -1.237340996802259, -0.8658316740174291, 1.2630542492156198, 0.2132408091208058, -1.5278412780253785, 0.09263135786552003, -0.07001589956371139, -0.5505736366152822, 0.5394957904350058, -0.3633689927995137, 1.5713369244062279, 0.26071477368556834, -0.33107931433622895, 2.332470580286977, -0.8185600442687611, -0.5823111929029626, 0.007088679312868254, -1.692076251496375, 0.962332659124073, 1.4691811693734387, -0.48419049739647163, 0.6424944563458443, 1.115098601248761, 1.3774950555513064, -1.0669914673767216, -0.6470086913890872, 0.7782430409781838, 1.0054995231320203, 1.3737994810202088, -0.33444224785358784, 1.1049535726469388, 0.952760454845696, 1.4303661257450202, 1.6477275295302118, 1.042183232476793, 0.55035945289843, 1.9431048354502405, -1.6936099125860478, 0.4326896205507282, 0.5347517881386358, -0.49434868195333015, -1.4641989328859242, 1.5402945765100065, -1.8832316835391045, -0.3843603444840687, 0.374564191603682, 0.7527897660672472, -0.901920233084223, 0.44320284111699915, -0.3492681963961128, 0.6665865741892375, -1.046720242847255, 0.6310676479343553, -0.17159844857737888, 1.9174067420802106, 2.7295527660917207, 0.495845512386782, 1.0140082873466616, 0.36771611310196567, -0.5512453414671515, 0.9084402861661443, -3.287530077743736, 1.1491719357361383, -1.398627559385897, 0.17007485631450373, 1.288856846138785, 0.058667892214138685, -0.7814155013088079, -2.0349825070329954, 1.0955358125483157, -1.8048608517449471, 0.26845693492544476, 0.36844219537509454, 0.9964797246382584, 0.16291248573605188, 0.7798611486180289, 0.6230654765023648, 1.1778772397143271, -2.1303603045827857, -0.2729867089471212, 0.6467706614963887, 2.0839326669195763, 0.33086471650591787, 0.2981691863798915, -0.40708589574836856, 0.9901335406203067, 0.27468703518376786, 1.4930407276336344, -0.8398816614618494, 0.587562100630415, -2.024693010697679, 0.5095242185364632, 0.19712004966102495, 0.07211794648453931, 0.8555441022136336, -0.030502832011376678, -0.31214260951701556, -0.3211682946519583, -0.8323250640411975, 0.9792661675982206, -1.2009058340227847, 1.2363388678590441, 0.7190118101564605, 0.7416000892739272, -1.2632350764312952, 0.3068288236478884, 0.6181282934047112, -1.6602713631377461, -1.2750641009230559, -0.6988362032906485, 0.344638270555623, -0.34559819198371916, 0.6143569401454991, -0.5877716370920797, -0.15964961552701512, 1.116443542665929, -0.5549763857458183, -0.8414765106041433, 0.02045492587185687, -1.457908823189485, -0.9714991068834882, -2.032471300627158, 0.22635123529579548, -0.5939105023062459, 0.599999862855787, 0.5531056959491262, -0.04539900195826629, -0.7878451533397027, -1.2190612764818127, 0.0459959354703468, -0.7774361591325751, -0.703553237980456, -0.11491454728117895, 2.1728237026416832, 0.17310360569689526, 2.279238109757077, 1.1195503700845484, -0.4157273965632698, 0.6626134318535131, 0.04291767754220951, 0.011523234854885116, -0.06360587581847643, 0.26835274509925355, -0.646983783335303, -0.6262466948309314, -0.7748421963106951, -0.7926654253493494, 2.2766133996091633, 1.5247997159947524, -0.267710702647339, 0.37938013628287776, -0.0355165726092309, 1.5308402894136577, 1.3055324455300343, 2.535893622218615, -0.3159391597084789, 0.30799674312026415, -1.8747390541640498, -0.647323312906765, -0.5497034900229866, 0.5666287399129756, -1.0976654391397922, 0.417765579012914, -1.4685607229399962, -2.136762571616412, 1.571361929084623, -0.3319812966076226, 0.7879915069818246, -0.9042953242072482, -0.027191243033735584, -0.6673014923637884, 0.10925771816066347, 1.4296608794037293, -0.7371497718860981, 1.4959767273518467, 1.2601324806235192, -2.1934437295647182, -0.22424003347033777, -0.815947260395414, -0.5989057105542602, -0.997283056871895, 1.6252915029680628, 0.8334180721673413, -0.19274120175303944, -1.1298991865195516, 0.07655327609621816, 1.8526554556237738, -1.0425116366796603, -1.1447555729136085, -0.784709833816881, -0.02059336993219165, 0.04814621399293071, 0.1588312979129065, 0.6889149228629432, 0.6550245441894288, -1.0011074123561297, 0.10768685828248015, 0.5267330547652136, -0.40546670261126505, -0.7402057227143344, -0.17696656807873953, -0.7496296598380339, 0.708177674652507, -2.3638470083605743, -0.5507793279431229, 1.4052125517663154, -1.2423574784296867, 0.3334428536677854, -0.07773630964671698, -1.2473429202845836, -0.2322421672703655, 1.4067124506417998, 0.7357535747672663, 0.5314833509239953, -1.6353214420242732, -1.269279226499672, -1.4721961327363284, 0.12852367483714727, 0.7313175979657809, -0.10888701998311968, -0.5847264179525966, 0.4387546408404869, 1.2731049573244142, 0.37386070728933657, 0.9531091620594474, 1.4034425023691073, 0.6400232146125363, 0.7643054415657642, 2.1803321066802153, -0.9145901520565668, -1.2774074026035898, -0.022742279354341675, 0.38798164564551973, -1.8508350090494177, 1.1810890173807476, 1.8526711750745581, -0.8153565845503535, 0.05423030054339268, 0.6096329878880453, -0.2191491549251177, 1.2562023780741014, -0.05828290209918388, -0.9000599915929584, -1.209049225849141, 1.143866044648689, -0.2524480197963135, -0.6646760939101259, -0.05133056954705258, -0.08719166029332993, -0.7720438219510644, 0.2149540955648645, -1.1698156946873168, 1.1824181299085286, -0.05690847136321533, 1.8477906638974284, -1.122675089568244, -0.8072119933046342, -2.1792129182114195, -0.4464426200200032, -1.3725815037768954, 0.38531863740921896, 1.2891659383660596, -0.481428297514971, 0.27978772152914894, -0.39394769933021906, 1.3359219367404613, -0.9960543204148018, 0.08788505256229209, -1.9436610337125764, -0.17121491743260636, -1.6560534294737719, -1.8585524865005658, -0.6084719018104234, -0.7963695135219483, -1.8521149244352424, 1.078627018425451, -0.5504775438088677, -0.04535496439607079, -2.5697644390527983, -0.41464865156612574, -0.5857813601953487, 0.7009373463435074, 1.4899286697432874, 1.627563685561763, 0.02452081411126236, -0.3410080269840821, -1.8413561244488452, 0.6114735475079983, -0.24210209002504232, -0.24256840472730776, 0.9584928261251323, -0.3845730483019519, 0.3053192696407526, -1.061765432321283, 0.8978257322560756, 1.1569378035622129, -1.4644302569440988, 0.5932837501369506, 0.45664684622772367, -2.184156938052499, -0.6630434817050088, -1.2213933153071013, -0.2987020940971146, -1.3868642822329738, -0.6981929648912267, 0.17820881784991377, 1.5085802966566029, 0.9530640620937918, -1.8440957821423376, 0.3169285999703174, -0.1855193665659386, 0.7072054969107284, 0.20294967817298815, 0.27767113426092016, 0.6126717709217421, -0.24662843170694987, -0.29662988432046483, -1.7661611541214972, 0.1258347298393623, 0.8538956287168047, -1.2281090399988224, -0.1550137398040239, 0.26513882970317987, 0.6931226527838533, 0.28188276534416323, 0.7312184964771898, 0.23076500916471565, 0.7366631936368528, 0.21741498357748743, 1.1265920191727108, -0.9715924218512597, -0.29608695000303736, -0.7516104230392774, -0.42831099491249364, 0.3188370368149456, -1.3435988367033522, 0.24102604923027343, 0.5091498873536575, 0.4249918121349845, 0.02448686513447845, 0.7805361623469584, 0.9547271011205637, 0.7850761542511309, 0.6918730920191265, -1.2737489554260497, -0.2062523813159128, 0.2362304503320073, 1.5055927205897437, -0.5763448132412553, -2.454685185839964, 0.8026838228446975, -1.0957004673671524, 0.40161657345234336, -0.8200355940893168, -0.35373023306553963, 0.590361290505812, -0.6443372297775336, -0.01652235119871117, 0.22596217415879516, -0.8590666150528352, -1.0946236317233602, 0.6214382059750646, 0.011480149496757689, 0.8342549061744179, -1.2484021908382272, 2.4610653541104144, -1.3959652888428042, 0.5085596353374852, 0.2246882572023252, 2.5778110037665507, 1.8085640088692736, -0.7839758855973052, -0.759423588748596, -1.4691672760853587, -1.4958877054454565, 1.46913975027182, 1.2460801199937146, -1.117734642096033, -0.7397883653891448, -0.4439628229547024, -1.7156247677740013, 0.7817276573820254, 0.42392688844174864, 0.5593636215068738, -1.3415781140818623, -1.0693372418618108, -1.3599776349751624, 0.7991533331263054, 0.5634415346572197, 0.599932205648777, -0.8572197350424864, -1.1340774791425638, 2.8111464501031675, 0.08858901904695134, 0.04233699602389649, 0.08616779294713836, 1.350540612760146, -0.1171047599655767, -2.237452572432714, 0.17498173981715825, -0.1963790199735471, 0.13574594500576487, -1.8720659683693917, -0.27124463552893846, 0.4791333476534594, 0.24488241422552023, 0.3698505902247506, -0.45568758308665375, 0.23276951645863414, -0.6516933862457729, 0.735421318218712, 0.35060187301894197, 1.0773667946260272, -0.4815934910829617, 0.10601278094064645, -1.190957016440316, -0.018152974359411992, 0.8199876877732535, 0.46686004832074607, 0.28048360982543685, -1.2326881126931573, 1.0843155036597787, -1.2215959533931406, 0.2782601484790176, 1.1927232122954352, -1.0696552148979286, 0.3829596184322828, -0.6293649509810937, 0.1805092203184194, 0.32241241698328976, -0.17778925301484103, 0.3735381629880128, -1.082588281066664, 0.24341149039045684, -0.30770842895909495, -2.046610377903691, 1.0871682854205866, -1.528768498700158, 0.41649322920056747, 0.14466182331287925, 0.7859301717506297, 0.3841725957813304, 1.038609187384026, -1.059523548082836, -0.34924746752468944, 0.8324523115864688, 1.1560640054012183, 0.830487721569674, 0.7457359880684629, 1.4797493627575389, -0.7076067743391875, 0.6229844602908438, 1.25776898058494, -0.49713578576089107, 0.6140368889982785, -0.09200876820013679, 0.5983359438456806, -0.8288549012133358, 0.04721656889643316, -0.36055573077207625, 0.9192923599307188, 0.42934765484980236, 1.0362848149572936, 1.143547369010269, 0.5280100362997106, -0.5880241988262186, -0.016560263907824033, 0.4787673906335667, 0.3640420803941962, 0.6298204701105201, -0.9853893559248253, -0.7688789636163536, 0.938890814818562, 1.0730612170998635, -0.06470559932581976, -1.610377957344718, -0.15132197415331577, 1.6374595392974138, 0.0957825122676011, -1.815951410791237, 0.2873672466603323, 0.8784646770657152, -0.20363477061015436, 0.07132455601178833, 0.40404660311379037, -1.5465309137683239, -1.8345113993310085, -2.2608849619698925, 2.6106187452147123, 0.15564481905144315, 0.761994162163415, -0.15586857351182165, -0.8933247555015514, -0.18764058483203772, 0.4399685539341274, -0.15623982932543565, 1.3196303963149552, -0.3756985234770401, -0.2690760819451437, -0.7915510495643154, 0.21483632259593685, -0.5409922332858237, -0.10380991539044149, -0.4017617058339062, 1.39157944669314, 0.38066038421410653, -0.5947323000881365, -1.0617162200826757, -0.316191043729508, -0.6527337938503704, 1.717782792225666, 1.015449175936504, 2.2481697189066363, -1.5237314518282283, -1.3664408803903954, 0.5644577777820532, -0.8886178814071254, -0.8735694233422331, -0.8924139872936435, -0.03909907564862768, 0.9706054426069557, -0.021025709694876295, 1.5715357308118878, -0.014823251302728694, 0.15798841040499398, -0.43014238433576835, 0.17047576175537058, -0.20353541207322606, -1.402009173539136, 0.41200180632096717, -0.3250877136940342, 0.8973270912392878, 0.4630099237731056, -1.2288537042982872, 0.9753065523705424, -0.4044158696633463, 1.1221506459156811, 1.1464650579229743, 1.0878963491878568, 0.19649480660058172, -0.14809030970024295, 1.2450128873884325, -2.420483950093034, -1.1386060793319484, 0.28622026999208855, 1.0505072248588063, -0.4690679441351613, 0.3663265038444043, 1.5269771062324518, 0.2212745401420589, -1.1894400969527277, -0.44128397373349215, 1.2642615218661195, 0.749551000374635, -0.9058212326496337, -1.431142544008654, -1.4298034738649579, -0.2556903530872202, -0.12387491399250486, 0.8852724633353866, 0.9950289214439632, -0.027448597106918035, 0.5322718670529125, 0.009231834082801562, -0.19178247527933937, 1.0439091563537295, -1.1124438479901313, -1.053606250313878, -1.511417202415387, 0.1628991356411555, 2.1899158221993207, 1.1270828642542583, -0.9016069183890467, -0.922143662083217, -0.2285309322337544, -1.5614842360974597, -1.6221398840412504, -0.3576374417612272, 0.08165382876466953, 0.4735442206307257, -0.3424861257288686, 0.27942105176008514, -0.027374438433948853, 0.4879973646408307, -3.2649979523243964, -0.7876866919297009, 0.7314795437892281, -0.10322143285754981, -0.4732826712887429, -0.5346418202406933, 0.6397611636514631, 0.12191167026786322, -0.31518591908275934, 0.5144300241269764, -0.874415820506242, 0.3902767931693757, 1.3744012646244166, 0.11692013035433095, 0.13804436938154913, -0.7288863131226886, 0.2682461080576532, -0.7695783065053311, 0.4673486593531365, -0.4664770997404189, 0.6401926601801082, -0.9414066254610228, 2.54157677688306, 1.6515526888873464, 1.6103141950094784, 0.5307940082365282, 0.6057871556717571, 0.615014050943757, 0.3908564502360064, 0.5314280761506284, 0.07311967169398383, 1.85034997142701, -1.1265154868330254, -0.823802599525969, -1.1546646003065635, -0.161965969526038, 1.1465835654553191, 1.0428331070210062, 0.908424511660865, 0.7907215830918692, 0.4075069159448508, 0.6363384611395855, 0.7378554071182309, -0.5601946108293736, 0.551449780439428, 0.5408151379642726, -1.4997372546094574, 0.2669564988163084, 0.6711555424949794, -0.9149952918004718, -0.564322669598536, -0.8016459029935402, 1.8984419694960197, -0.038260818241607084, -0.8516256168740842, 0.08195867572619636, -1.0197576869312972, 0.30766213497788025, -0.9997385116221624, -0.5167832483459613, 0.5442967845707103, 0.0054724120689831, 1.328438990275057, -0.09935031899367079, -0.6866900591248546, -1.4029391340721915, 0.4552427210109578, 1.3407962680934926, 0.35422350659980206, -0.4494802367643454, 0.009033878331513022, -1.752547766202762, -0.7253614723784276, -1.5023245716834195, 0.06604800581210674, -1.4563682455658484, -0.10500386279472344, -1.819628636918484, -1.1316027193496743, 0.589914071764352, -0.7129089788440768, 0.3890393796844927, 0.4780077992543496, 0.8233970479024308, 0.7879056648338038, -0.16205666693900708, -1.1560232256251475, -1.0100595815541966, 1.1128527813689044, -0.30434818426619215, 0.5003998081681246, -0.3324821670623091, -0.04477966885743587, 1.3178503389926146, -0.2350970769734912, -0.1747288987611667, -0.3949780451997891, -0.2340940260863777, -1.1133829751006379, 1.616430687890167, 0.9963646135230853, 0.8537476771896462, -0.986439873611922, -0.5588836891718825, -0.712814149340727, 0.01905409136880841, -0.6703049745125861, 0.06218717688051511, -0.44551468754808465, 0.38249817197224373, -0.44534290878747496, 0.6772421852825562, 0.9858278403092028, -1.5237973346117806, -1.0984229488858022, 0.8169633034876874, 0.10012032873049033, 0.169418016493137, -1.4651486530055882, 1.2918350472419722, 0.334510341432922, -0.9661741135066604, 0.6199234676229511, -0.35511961494151223, -0.17738133105562792, -1.0865485563062909, 0.6111821850347091, 0.9161004714255729, -1.9196485965158732, -0.4099238841821015, -1.231806269811345, -0.0766864622864597, 0.41934685268524446, 0.6681772970967477, 0.7174622613099937, 0.32549724636306226, 0.9096649259375913, 1.1138298274876333, 0.30360482714077114, 0.7163607157304195, -0.055483061015748764, -1.1597589240723905, 1.264092837172727, -0.748161259782895, -1.4198684438461198, -0.35473470305992655, 0.8212961455595349, 1.327702927244398, 1.2253274246529735, -0.31387387647741, 2.6762828119628965, -0.8726019064296883, 0.5144327580964241, 0.3881505093253809, -2.3895652090449477, 0.29720636118839766, 0.11090030963567177, 1.1410999596171503, 1.2698830909969758, 0.9882179080115846, -0.12637296243138968, -0.2577398839613676, 0.6642295513573605, -0.482124723446206, -1.3983314496075954, -0.6754840256255206, -0.6365982134856839, 0.5558805247445945, -0.2403196307303652, -0.652541364045455, -0.9796428737307429, 0.7140101435515367, 0.5342322656043819, 1.7420130119120332, -1.196144711587351, -0.37342955816924844, 1.2493511443482512, 2.140917515780602, 0.569732357543803, -1.1141182062831827, 0.3574174450830324, 1.1247702764050156, -0.5130216037206635, 1.085955996606702, -0.9481929916010402, 0.3498629299928704, 0.4186827721503165, 0.7833142501148178, -1.2053904526048782, -0.3596143181783491, 1.0279381747388565, 0.33653028744821617, 1.0567303210070633, -2.4992940309246148, 0.6596600355645973, -0.33722830887947636, 2.322551545052346, -1.3850383685864687, 0.7958527993791936, -1.5515622489713663, -0.5095922961811515, 0.5152874273202053, -0.9416480730089354, -1.0851793965542598, -0.49580479602415484, 0.12109037111214345, 0.5538777813415902, 0.10581377467421799, -1.4919399976651315, 0.7822163410708476, -1.7235290296616874, -3.2454954082027347, -0.7882899979779424, -0.10736719145463859, 1.3420847549669597, 0.37489981276747486, -0.20964136306455197, 2.3624978046003813, -0.7023911972454062, 0.5733987285851228, -0.4993248844848296, -0.8921117750373351, 1.3210949324281647, -1.691321410532122, -0.489389815494083, 1.0087090766751312, 0.8197846177114748, -0.6871836562008812, -0.20806477028499534, -1.079545234784709, -0.8235531685797332, 0.4193408443635672, 0.8122491891139468, 0.14848179970060324, 1.4660546580296299, -1.0454842816236283, -0.3771474002389149, -2.1794779272228655, -1.3326197149578483, 0.9648218207011162, -1.0335095207959712, 0.21031371290854986, -0.0018227670162832674, -0.9585027070305454, 0.10266067493631031, 1.8678326800000593, -0.36536352753956247, 2.2694132828806026, -0.8911636007011624, 0.73405009217863, 0.4029221890470528, 1.5564008478342808, 0.8867157267273216, 0.7910843534522217, 0.5827275008455186, 1.486105079945072, -0.15463032279218755, 1.573721734614575, 0.6252201492933177, -0.31180264976888145, -0.9908438752411124, 1.8734238131560488, -0.15953716317379366, -0.9244413829126937, 0.6340642655107329, -1.1709184826622108, -1.6988862955262638, -2.004239214827232, 0.2642866922723928, 0.08681722833132968, -1.4903347774037168, 0.31802466503046634, 0.04256010012467336, -0.15391706179618797, -0.523838411488768, -1.8350270809152318, -0.5904444237237763, -0.8470609361624544, 1.319124967329478, 0.20683307700694303, 0.3971088140442117, 1.917957113350527, 1.4756067544181577, -0.6206850245771725, -0.11427153733936593, -0.8073019304239294, -0.78212362905164, 1.44660751351184, 2.512892688122019, 0.7076621901950908, -0.41089458685066027, -0.5094276701716628, -0.8670584073307704, 1.013486600397296, 0.8919025486135703, 0.5234790073213651, -0.2523182028072487, -0.8022171154438653, -0.9326529213549116, 1.1960358605758628, 1.0318330406349387, 0.1883830303939158, 0.3991915605768457, -0.19749757197284926, 0.43422460593094053, -1.4535703217099698, -0.13701699507056475, 1.4394002324223913, -1.00152549671241, 0.9339984461661411, -0.12237092940036479, 1.1203523041770125, -1.682570056021987, 0.3170578990456851, -1.1259709686124155, 1.8262140297827165, 0.6569514446663591, 0.703014440341267, 0.591966366525515, 1.482149792634496, -1.1872162574787224, 0.4435585819582374, 0.7554651140816377, -0.5880535920150073, -0.41426922960007506, 0.4379763655445572, 0.08356707312471769, -0.7473808225960846, 1.6112055471165563, 1.286857397046163, -1.7375509707212153, -1.5803486688625272, 0.8481633306014439, 1.1076227980021156, 1.0249999621750436, 2.1011198155150996, 1.606963274779067, 0.8543549208563445, -0.7136668796390008, 0.23609471135582152, 1.0997131124969428, -0.3422287267372669, 1.3078626781165796, 0.4825560682131485, 1.0508695667720305, 0.6647426381310191, -0.12581072049598602, -0.02454963625914189, 0.03976805913919926, 1.3861717720012048, 0.8431541146110427, 0.04001706016813472, 0.7175524317137771, -0.032531192159933435, -1.1290893118856058, 0.4008148943692308, -0.029156582662228422, 0.8348324430468714, -0.7866886519198714, 0.8538349381297751, -1.957084836586195, -0.35599990137665327, -0.07632081142934817, -0.43474602642133586, 0.5824398113539156, 0.2530374799136358, 1.0464700494883534, -0.011366481691100785, -0.3605749338486504, 1.0620167530067286, 0.6689293855642217, -0.17002262350694863, 0.2398175366752705, 0.648684744013695, 0.3845251335194507, 0.4730418835543221, 0.5444019443297692, 1.7334541775244305, -1.1261191810637128, -0.3647493187723124, -0.20146682844237357, 0.007424971275185205, -0.36548826725089806, -0.42505332100753246, -1.032970244563221, 0.14374864507847215, -1.7271027770008165, -1.5475753022605547, -0.07782812470976881, -0.4697822440713482, 1.1123102601372465, -1.1196208746482825, -0.48040858996390523, -0.40783691433150854, -1.3409609966370069, -1.4118154177953066, 0.22833155751467607, -0.679739083438857, -0.7520765849847947, 0.18171378882718406, -0.04676761701161879, 0.8722911504151831, -0.0618042618829813, 0.9030482800580067, -0.8059835826230685, 0.4884747136310498, 0.8293479950408605, -1.1109595140539703, -1.0919888403316909, 0.32462944426768603, -2.2542276633259912, 1.5417166601422492, 0.32710044720670844, 0.7939984518328959, 1.4706831935222453, 0.7184022529879873, -0.5493549605364838, 1.098504762524977, -1.841783337625231, 1.6185943075337041, 0.09680027531238355, -0.4061823019752458, -0.22208615609099105, -0.9884486413003141, 0.39373852056656916, -0.43315499340947405, -0.916604388716767, -0.8153895504569211, -0.11861912920701428, -0.15537236583247982, 0.667439618741246, -0.2397707133517423, -1.4455010591452047, -1.7196045386870589, -0.6092709170365099, -0.38326991330351484, -0.7172832959613511, 0.04875767627562995, 0.20826434498462748, -0.21834505131368087, 0.24485224990789328, 0.5395523776728567, -0.40877963329157396, -0.5228989672528624, -1.1911762864867146, -1.9522117927377989, 0.78730944582044, -0.698268081822046, 0.3074134113509286, -1.0839572783917089, -0.3308453310175056, 0.8695151827642199, 0.9052432244014108, -0.9786999100140986, -1.1740446461580363, -0.5941187723135037, -1.7831093182807238, -0.5378525880099759, 0.24039103538008366, -0.19010775641886143, 0.6698699625667724, 0.4947733479668434, -0.4763594599308393, -0.20683602926186068, -0.1298963732141755, 0.8630894950327196, 0.5058002464820636, 0.27362528950906817, 1.1056904802108147, 1.5214512782779614, 1.7681874944923226, 0.9146254002283482, -0.8534259139537116, -1.0410147852467388, -1.6519435946184977, -0.7943144365626955, 1.129233775181219, -0.04358757013407377, -0.8282623082604967, -0.1418692387887988, 0.5158080933278918, -0.35369553896404593, 1.0032124255115904, 1.5287479901409624, 1.7819095406706713, 0.6985421049257945, -1.6003552740675293, 0.8264882002989822, -0.7452094947552388, -0.9070868032477638, -0.8273928055664975, -0.2273637839239857, 1.2284862893683897, -1.1543778896303325, 1.275817955172599, -1.0178242211817152, 0.9376080155989199, 0.26644457855757936, 1.0162297939547522, -1.4012986412987438, -0.32105096058951216, -0.6217316382665354, 0.7492459675618255, -0.247664488161319, 1.381255576516809, -0.8674693014024913, -0.4473779918551851, 0.13217757064786423, -0.16442310158724568, -0.23235789731555154, 0.753581915360361, -1.192158569341944, -0.39856750035539135, -0.8827102262116163, 0.6327765667388288, -0.33885695268978516, -1.0386077500650563, -1.1945921531066213, -1.4839980808918862, 2.5305994766171547, -0.2325076441708066, -0.6071278624549089, -0.8150979107168125, -1.4509901696182836, 1.1294991629453566, -1.4631392915340322, -0.2753936213906435, -1.0567689096545327, 1.2746666730842588, -0.3377321861308915, -0.09622568882383574, -0.27410808455352004, 0.023696748552093888, -0.38438433361479896, 1.967797949295437, 0.2412437069092527, 2.8995765080445652, 1.1500304567252035, -0.06987971492174361, 1.987198181640952, 1.186158345421502, -0.016635994722253168, 1.5507598490843153, 0.5460702660436929, 0.0059038294981436715, 1.0681813061521035, -0.4714246820048339, -1.7521142536392242, 0.8297230231568119, 1.2598734708466617, -2.1065943652744563, 2.111869203914165, -0.9313149504979344, 1.204397280533474, -0.21382457597845786, 0.7322636683023018, 0.1680718881029463, -1.1377421283670661, -0.28702595097573735, -0.44783759020639285, -0.6060998215395578, -0.793638598531808, -1.8866637221414382, 0.3139468968705362, -0.21534593055705395, 0.249240755175163, -1.152258148128366, 1.1953418388693635, 1.117280709789872, 0.5349593001368782, -2.4406069405298516, -0.2727772283520298, 0.19472386940816294, -0.9101830788475362, -0.6858098654846704, 0.38632134757400405, 0.8146532596714312, -0.07867592578902241, -1.3809858372985508, 0.5141296617540878, -0.49274728759872016, 0.201783612597753, -0.753158214344087, -0.20506100488363166, 1.361931981998365, -1.1097612648272026, -0.674147839778411, -1.4924375854730343, -0.39646594039093885, -0.2324771957875216, 0.1347216950221664, 1.2818515498515923, 1.4498297435495362, 0.21813751379405397, -1.1256584372624072, 0.8708016147411275, -1.0126018978537092, -0.08358841404116939, -1.7751665112819501, 1.4358731934759206, 2.1979839173478366, -0.10347509119789809, -0.36027565319634586, -1.2488018830153509, -0.1679829101785262, -0.7363582104492048, 0.32897243599873544, -0.27498742702116197, 0.6173962348850123, -1.2184971065302856, 0.6373914440708174, 0.22966407995472254, 1.6505670924438463, -0.7190606887195311, -0.14193814253195297, 0.33460186003814957, -1.6755347392454922, -0.7480193412064334, -1.1473051957822307, -1.303406347364358, -0.12596656225077763, 1.5015637556664234, -1.0444017110676755, -0.4689029013736633, -0.4949561914503664, -0.5086616108429117, 0.7155057481401798, 0.6755310166262737, 1.091466651669465, 1.0371427062302194, 1.8246835337669058, -0.264520338943694, -1.2685199528821198, -0.7310278787428763, 0.5932610760156241, -1.675810091568811, -0.6370272421082248, -0.05712348536706761, -0.6778644250017573, 1.290201343562379, -0.9294436498441248, 0.7806303443063077, 1.3859510251151854, 0.9225594134542089, 0.9813637502445616, 1.4235589285290262, -1.2435570775418718, -1.3992190594581881, 0.2936637241604281, -0.5224299244408773, -0.9589332266357522, 0.9178130918859242, -0.4119261979760349, -1.1563619525809086, -1.2651347068640213, 0.3749258881449277, 2.054242630355826, 0.004938689715111093, 0.2985085442478897, -1.3307193007914744, -1.7101835938847403, -0.16644436211104688, -2.068788632142647, -0.41429704829173414, 0.2993177508251163, 0.195221794495182, 0.44705515542779406, 0.6887905097161828, -0.7097468079991309, 0.6182027203934498, -0.08547600065103579, 0.0721822541869296, -2.6444401084564215, 0.4425792159296338, 2.0184855199743894, -0.8238404205065479, -1.3606304507931457, 0.5774950161498533, -1.0272917311082874, -0.2125206825390517, 0.37744266629496015, 0.8097371801952379, -1.676842096658986, -1.0747262392580024, -0.9125400287553191, -1.6337458330583192, -0.7746839911000782, 1.5498141640530811, -1.8838506990633894, -0.7452139102111737, 0.7246357597801085, -2.433839878717183, -0.9378750145832236, 0.586166690865018, -0.41420459324315245, 0.9388153812529794, 0.6241924799291533, -0.7894360131151948, -1.0365802469999408, 0.678555286665428, -0.34065289677960203, -0.6145920405334493, 0.7154373276064182, -0.06385026593055863, -0.03135574046708523, -1.897514132358497, 0.028534816436140014, -1.6880773962672593, -0.18843420682191825, 0.11461100165911062, 0.6381382155842549, 0.21070151612057825, 0.9350987866842239, -0.46407325194106996, 0.31144479159905236, 0.3166429982516793, -0.19676735366191636, -0.6651035609702024, 0.4251200927682573, -1.8407411327859693, 0.5234570202803995, -0.9219117979365605, -0.36857289125010984, -0.8047312718807946, -0.9540501953341249, -1.2817211511440536, -0.2129540052531183, 0.4057892337263172, 0.8475809900613755, 0.35053312292623523, -0.16842114707967945, -0.2001708659819889, 1.5112537342760204, -0.12674810517576765, 1.1670536788121773, -0.9003439598127877, -0.48899883952688306, 0.26877235053328635, -0.2286345283668965, -1.0236620266437024, 0.6840218811863225, 0.38781635139206533, -1.5592913145309186, -1.4400786589905956, -0.28727743630933117, -0.21550490559120683, -1.3028113393686431, -0.7998225069515217, -1.5692157945381195, -0.6726582027866888, 0.8408643916023217, -0.7666277830795741, -0.13033527034570336, -0.7710637379834236, -0.5202462315551974, -0.18458400849848147, -0.6637886692866491, 0.43855257495369615, 0.9772807949064701, 0.07900439576944716, 0.6601318290729269, -0.19860326253709565, 0.2287748226737123, 0.44468766789313624, -0.5540180555052051, 2.2256408855148884, 0.4951244955878736, -1.0292369617902644, -1.390035791102977, -0.3016576609106425, 0.8457724410690993, -0.6899579694914668, 0.4726651468145064, 0.9710786696506427, -0.4856909403457958, -1.7155324021487839, 0.33841629450172034, 1.6382240607841279, 0.3008520912180498, -0.6150969182309373, 0.7154747349730649, -1.65209423770967, 0.06560563966902579, -0.3535149323736209, -0.18052861907411338, 0.419670972023283, -0.40871409318033664, 0.0739772481576837, -0.5471257025336206, -0.07210420368846199, -0.059552973892871106, 1.0727606413375685, 1.0413009676827731, 0.8383892915263631, -0.047603691910151895, -2.1547102853106783, -1.2160934523222597, 0.16349299949565463, -2.151783850309192, 0.6977739937967902, 2.0011652350936546, -0.7308329729913706, -1.3566378781828534, -0.692715937947373, 1.0701141935957414, -1.2428561194230294, -0.5637058907783626, 0.6254271368736898, 0.06711835702360838, -0.6965211001349109, -0.7392524817490368, -0.26989291877399235, -0.348461691349877, -0.886432806494443, 0.034838923679846485, 0.4283958418244315, 0.6736683571513519, -1.1955498883420308, 1.4147859746312783, -0.7525802910274617, -0.2701856860046944, -0.5586217839859564, 0.5709980106291024, 1.4304715921182902, 0.42984365317344014, 1.7469496460568619, -1.508856191020048, -0.3885219208618488, 0.733122337787874, -1.2777142169259785, -0.12119693159035773, 0.6706645954785371, -1.7699232229549766, -1.6977163941077476, -0.7561173906478293, 0.49244018610602563, -1.25616136488504, -0.5602776323924737, -0.21224485477779126, -1.5353136452041944, 0.2266719226803223, -0.964498868993888, 0.7924152819872398, 0.27106259242839204, 0.1471103874561684, -0.41560798569623253, 0.29127513509063735, -1.3712728586812275, 1.9100091501631216, 0.10953007498857896, 0.9816710040722734, -0.1910627571183757, 0.9606783684706642, -1.1337129126050582, -0.7414223944352512, -0.0699868094270123, 2.810132959511181, -0.4281212955494224, 1.4142034933210683, 0.32781494932172756, -0.6586523880203171, -0.23623443688714427, -1.596559549985662, 0.177993948289495, -0.9986882100854688, -0.16999951053009885, -0.2949958371393486, -1.1758289567874554, -0.11365782130234454, 0.6562629550752727, -1.3925435781011235, 0.00338054724451596, -0.5005376519419982, 1.583640879441715, 0.8199231547053226, 0.284426755681307, 0.02277790226206614, 0.222770997805625, -0.32142039066592776, -0.8786470179386704, -0.13909577895196018, 0.7187666823018427, 0.9250722465707731, 0.6431984336729721, 0.2237036610456391, -1.4463117758519093, -1.0933720312373907, -0.32705252541124946, -1.145527895946672, -0.5774658088685984, 1.465533485617307, 2.1287787759700283, -1.2217712875327777, -0.8593978108048195, -0.1476753006337152, -0.5756968729978029, -0.6302030301181998, 0.5595658299697798, -1.0887192657465394, -0.8251557616591129, 0.9786838758076577, -1.17744955853007, -1.4415794957204255, 0.4171798700743662, 0.12194888494209272, 1.7507413355832084, -1.1830311712687072, -0.32032174451390166, 0.5185050573035817, -0.29146339381343345, -0.31951516105305877, 0.4933241420827512, -1.5694091419979677, 0.5533111642851594, 0.26783157459500795, -0.5860766213674593, -0.0417953667971602, 0.37248215257328593, -0.6065632660361541, 0.19129527884266148, -0.40017371299001414, -0.07134283732092468, -1.4858182892750926, 1.8228090704055622, -0.23072755201345937, 0.5147092706897637, 0.10311454592856571, 1.1622481093253065, -1.2912613932593842, 0.4246822696584568, -2.3715508084814294, -1.3875958391485455, -1.6455974069203387, 0.23309738774682082, 0.6918933398601472, 1.168430376005721, -0.4321631916077954, -0.25206395423573896, 0.8079665309618632, -0.42259961154604214, 1.171211100010618, 1.2453701333957004, -0.04317871157710705, -0.45178824124457023, 0.9168699601873381, -0.42624233036043524, 0.1801201070326765, -1.0915580480710358, -0.07943022228594084, 0.17594535074574355, -0.6548674726196642, -1.70084617650642, 0.08516929055530105, -0.03413134100943146, 0.46924158142497663, -0.5030711497023694, 0.26577753042878777, -0.5601740080384904, -3.2042464630698246, -0.6061045748500841, -1.155191827039736, -0.12935198408198773, -0.6404815793366443, -0.04702519636543676, 0.7858339213502816, 0.37140133116462404, -0.244942460504615, 0.6697563428173605, -0.8257587813970966, -1.8958349962144543, -0.02917295594575918, -0.5033064618537721, -0.7477773740506588, -0.332673616258188, -0.6516274476181824, 0.6690622543450644, 1.0863175844960988, -0.09594636164748112, 0.2140492022197296, 0.41590767970532283, 0.01094272091804819, -0.16554873692607824, 0.6150138778379522, -0.3038688778076957, 1.170285482001961, 0.49655812570967245, 0.5113529723432826, 2.206013981911857, -0.007107747714561208, 0.8581762000296441, -1.6833451874037357, 0.709342727532284, -1.9409201513778649, 0.22394061522594233, 0.17904372553186204, 0.29164425474543837, 0.07241123134705008, -0.576575921258441, 0.3169306762398629, -1.0908725515011222, -1.007302166468355, 0.04614710245709881, 0.651796247433222, -1.7206497315036513, 0.30958513171967006, -0.6350205909290895, 1.4263502020991308, 0.8206282401269498, -0.6346850523728774, -0.18718496862471382, -1.4703596867702309, 0.003063274551156154, -1.0267286925914059, 0.9356701243944939, -0.22488066220354608, -0.639970376017695, 0.6453680876804189, -0.3808041748515081, -1.5800446486561766, -0.40040288950780706, 0.888522749186778, 1.7846304183017296, 0.8709358068098796, -0.10824868675582727, -0.4711802776390993, 0.46705632379195433, -0.5965695244694137, -0.8621393774190939, 0.8880951926722972, 0.750472137308727, 1.5250595759353427, -0.4233960458621247, 0.06463311983295615, -0.9126600872922608, 0.3306699265367333, -0.23073209062665556, 0.944446771116642, 0.44267466714058096, -1.2970194450970234, 0.3087652724593696, -0.19861581845149026, 0.6273114302638219, 1.4798928905910995, -1.4435107832744787, 0.4696251547181321, -0.19178577968069538, 1.4120832593665755, 0.06365358888258772, -1.7337955224444304, 0.00845448576482006, 0.6621784540378478, -1.3183699189228009, -1.4851629104759319, -0.9147775844542443, 0.42541638780917307, -1.0647696469161, -0.08847104481584918, -1.1629168387896764, -1.9745655023335358, 1.1583406991866674, 0.9569676704278289, -1.4897604069192987, -0.639001434837408, -1.4080711392638587, 1.3237901016212115, 0.6964097163341029, -1.0231689398959598, 0.09239228539293853, -1.4815436886349485, -0.49505007429148834, 1.2763063965096906, -0.5557974304909361, -0.01402908126467225, 0.844430200199155, -0.16886246756101145, -0.30617231877012135, 2.234674301738639, 1.0692543522604114, 0.26604854416627133, -0.6109150640410776, 1.5381841150501625, -1.565109372615347, 0.3362457406200426, 1.5430209392592413, 1.2686626563875696, 0.5923140547649642, -0.12104284147714954, -0.9509554513008914, -0.44214054106657624, -2.562553911044776, -0.17432217046489495, -1.0029942439690782, 0.194096305093581, -0.522478354198668, 0.3095006808510001, -0.33106188777039725, 1.457240530059734, 0.1667603840777408, -0.2938246752034103, -0.13865625890844632, -1.1141782015949502, -0.4062605382928254, 0.5734291717445106, -0.05250535954583747, -0.03800707523275839, 1.1170067094393816, -1.579052097814477, 0.5085096267218775, 0.7816418640826766, 2.6810787530899316, -0.345329380737007, -1.4331982225860354, 0.21527623070620297, 1.0959449628027969, 1.5524144201902, 2.047322567262915, -0.9470373635086838, 0.7566179549782363, -1.4742815268114886, -0.668455236293635, -0.772194650022831, 0.289972821543635, -1.6534871626263572, 0.3430909119983033, 1.1648315835695529, 2.2887051895802695, -0.7511754646209395, -1.273600872972181, -1.613707281459297, -0.5862734081053509, 0.017874827481311365, 1.349244060881872, 0.9904213411157164, -0.32909917592721255, -1.5063384330604732, -0.09864749697428353, -0.28906721098344207, -0.09850803588949096, -0.8049628985802506, -1.2485018074093943, -0.4480450175508973, -0.5854032519136272, 1.8274339604262377, 0.0032471767711876073, -1.7569855981077553, -0.29415879503055875, 1.0976120157057256, 1.175776853940152, 0.00427945200274642, 0.695229801916461, 0.26420089423401105, -1.1138012272109301, -0.7086196706062583, 0.13218703598519374, 0.34391458759936777, -1.458749836962868, 0.4400632758667074, 0.7865525975150678, 0.02778106599168945, -0.8466292372684631, 0.37940969514566025, 1.1490068685952626, -0.6638412854891665, 0.2683815591839878, -1.0666467442270304, -0.7002377410327965, -0.38807810486646704, -0.990354658596891, 1.0101049079746602, -0.9514964378312155, -0.6764677079500594, -0.38804421447171533, -0.13348861927553463, 0.8089552247494002, 0.703254171000152, -1.118308016154898, -1.2033044495200451, 0.9606655708655653, 0.2988977206268134, -0.6110247268738909, -0.6589266719095398, 0.5297213355924716, 0.6819337309319649, 1.533222927835558, 0.1995764227197221, -0.8421688607268076, -0.8103507526444551, -1.6292071550687968, -1.6552463764287024, -0.6918819525814773, -0.11604267694165789, -0.32976190644424036, 0.0157683003788871, 0.1485859177119796, 0.17313475548393842, -1.7855355261818846, -0.4529578005288341, 0.9733429178433631, 0.28152604048042223, 0.5164037493621622, -1.285950359085804, 0.38481214095806665, 0.35392845844435483, 0.0854735584844624, 0.34257771625406597, 0.36985191345635404, -0.7323818432986493, -1.9286045070384945, -0.7531192961471649, -0.18898671328751904, -0.07231675346605657, 1.2571562147600626, 1.876415189634882, 0.8247638061743969, -0.1998110816361578, -0.13056508816561302, -0.28127787022968753, -0.34599268589718946, 0.75101719452274, 1.9264149118652998, -0.08528094877031592, -0.2637103886863078, -0.7169742226163076, 0.5980179390827487, 0.4751252603879001, 0.100743054264825, 0.7540555744550542, 1.9248389095221545, 0.9871235052800306, -2.141861976761659, 1.1262867413830242, -0.6168720120348749, 0.41476503104448537, 1.764375251456738, 0.4072017415725644, 0.9553966844948139, -1.5647821595588598, 0.05074738389069825, 0.7026555614824068, -0.2711793767395207, 1.8711197866633529, 0.34999029510906154, 0.27041099399831137, 1.1973129498996375, -0.03912345466682736, -1.3520642729801093, 0.4938852595720382, 0.4509265803378005, -0.24034595803078232, -1.0555235117038548, -0.9993661135852663, -2.349726630152702, 0.2804892673500152, 0.8188618719516613, 0.07354474330746337, -0.50339828032934, 1.1133095223774911, 0.9886693910043401, 0.41058185174927236, 0.38218621975138, 1.2697890821148037, 1.6757438396042326, -0.41009130171307995, -0.38742360718639307, -0.3796244206224831, -0.8367813440295329, -0.7559929424741757, -0.007546204965903657, -0.0920404839567752, 2.161706015204988, -1.4242150886295362, 0.37439568474816004, 0.027392102119605213, 1.0837782350001768, 0.5130598090452312, -0.02026598092031858, 0.4578611624944088, 1.7625427108792586, 0.8159783920199783, -0.5724234632567987, -0.31498612678606663, 0.440601393222527, 0.9311528945349659, 0.7124616013807208, 0.02403134404799814, 0.4568529871442704, 1.2987850927169464, -1.074018824502234, 0.030594773861488584, 0.41065470551415584, 0.8873123058700493, -2.2417610998873303, 0.4278991319056694, 0.2952707433342518, 1.6335513275845686, 0.5051525959275471, 0.8271636151368688, -1.6314350780882934, 0.8854989969610532, -0.7418330031993051, 1.4694917271850823, -0.42868165974613615, -1.3353629150285091, -0.4306249978760498, 0.9121230098303622, 0.3488893050847925, -0.519661004131573, 0.7845679423246564, 0.6496175621825839, 1.2063279287979902, -0.6101260069615344, 0.6864469384409174, 0.616687804776528, -1.5522978616751462, 0.6700795471576138, 0.5775828017565499, 0.28027333109042357, -1.6894993282918, -0.8958387563912954, 0.02895660128617664, -0.8541316279232075, -0.19367856448541002, -0.45285475446628143, -0.04239097534490761, 0.4328543026730404, -0.38449705487532615, -0.8045545495111424, -0.02278573986772523, -0.6109255336973092, 0.3472803890906431, -0.36394303525569377, 1.7439931616623836, 2.078137431908478, -0.17451028191247314, 0.06208138870775166, -2.1054866849414937, 0.6971271772189512, -0.6064324630130667, -0.17945135519680958, 0.4735357305064451, -0.7897482754939185, 1.3984054400840107, 0.6461534254330872, -2.1962836158514274, -0.13005505637375347, 0.6250054979719019, -0.875912248449845, 1.8186416618253247, 0.9420519983278725, -0.7692321183230607, 0.3351542176856472, -0.5839225485863605, 0.623798288001376, 2.337738332120384, -1.104126059350298, 0.626939970793308, -0.4043391282974439, -0.18874744760315967, 1.063548586193404, 0.23990154860809645, 0.9077390807636393, -0.8431418799410572, 1.5103228447927701, -0.1563604399652125, -0.5963338184402466, -1.541158403778106, -0.5905937488865045, 0.3178198982816438, -1.2150880762450555, -0.478001644442629, 0.1852250513819034, 0.4897474021172568, -0.8107183178031967, 0.03629538945517062, 0.3262378304569411, 0.1010037530700086, -1.175911380930832, 1.9492351562754204, 1.1129907343181642, 0.008280202224134848, -0.48375762885078916, 0.7842802728948449, -0.1771570777383834, 0.12244245740002649, -1.326694396644424, -0.2917201885477381, -1.582929212999204, 0.5963879835213712, 0.7181014121598631, 0.4992027621822495, -0.002159204779704701, -0.2094488439281835, 0.436266284617464, 0.2344772710190598, -0.6845863682602173, 0.35994352290523157, 0.9526855435224321, 0.3630671818731957, -0.08511261472267392, 0.6063475061165358, 0.3784883816855874, -0.9666275079406204, 0.5017173681711645, 0.8318759517231326, -1.0459665941633787, 0.901819954494692, 0.4972508547997133, 0.2463866037928025, 0.08347906620002739, 0.9492317494905479, -0.5718053656205129, 0.3324824240342863, 0.7549753347105445, -1.8635889469944211, -0.26771773821324574, -0.15564047627905236, 0.5679109479597713, -0.21175723294390014, -1.1940635310005332, -2.581524956340569, 1.0239610747653125, -0.14143427941160522, -0.16569707887173546, 0.0848241839367074, -2.096923967576044, 0.2098934521178831, -0.7854295791567057, -1.0339614462310742, -1.0559777345373587, 0.05638152560849485, -0.4719959114930379, 0.6420618052362165, 0.8259952898234458, 1.4127173769916344, 0.23864514523038888, -0.28426380344644453, -0.7631557412738653, -1.0914726882010262, -1.2192160035558577, 0.7202062972883597, 0.132359728226499, -0.09673816351129454, 1.9334713504605643, 0.21011464663998525, 1.1287544829777358, -2.183410435662187, -1.5093139498104193, 1.0443113457659483, 0.5375577722728033, 0.8234623917637758, 0.0295106192220552, -0.17766447578207148, -1.3768626879458803, 0.9599171491368564, -0.7990503317254959, 0.19008713902512278, 0.7700206111233788, 0.06806823321868467, -0.06693905082285097, -0.5716207756214041, 0.5156168101210837, -0.11048083119919873, -1.6421195738815395, -0.32523234647344723, 0.7435559831267882, 0.05980329988088935, -0.24211012793922695, -0.012226027493112981, 0.23440217942039174, -0.5401989696097933, 0.8748489862271195, 0.03875442833657258, -0.11260061592926668, -1.393814822617306, 0.6286471680743797, 0.08907859192408323, -1.246310867163179, 0.3002421249530935, -1.2360247188005795, -1.010042098263404, 0.2997316864170855, -0.8945629629673368, 0.860924552729306, -1.0420139531026282, -0.48493838807580997, -0.07230738275205267, 0.407560405082776, -0.5176898886885369, 0.6427854540248994, 0.9690279921279351, -0.3497941206016327, -0.1684019262934047, 0.7225361410731442, -1.0417634169652543, -0.6711241542984091, -1.146605417997853, -0.49231205776416775, 0.6517263864352396, -0.8321230797462937, 0.37158726366274863, -0.5736157020542887, -0.8155105230206376, 0.1985069683093756, -0.04696447945292282, -0.8593257338575556, 0.15708026046331644, -2.302240116222682, -0.043615483254609726, -0.12296498748855149, -1.6265763140166618, 1.191809448066237, -0.6918915875645871, -1.9944678317329905, -1.311629389561861, -1.400544530594872, -1.468083500633115, 0.26368814617408104, -0.4539812104411973, 0.08430614659203452, 1.3285384288064743, -0.4687981688799956, -0.735557904556312, 1.408634408041586, -0.2322510332136692, 0.5961099635321834, -1.0240377488707277, -2.223335664464882, 0.6520045218983028, -1.015495587413518, -0.7962711799776444, -0.7135579964604377, -0.9173203389610614, 1.60617604903534, -0.10365353128482012, -0.45868007463759647, 0.5478797104939502, -0.4990262014512121, 0.3154547763895922, 0.10178701066050883, -1.141735018859667, 2.688874059902783, -0.3944379073641158, -1.3086137051763131, 0.16452073910008413, -0.7355067001024014, -0.7982750266604395, -0.07706427612266172, -0.9387442930840069, 1.6426018840853585, -0.07510081213975528, -0.04992424818529661, 0.8909618456750427, -0.16149405316633933, 2.2627949379722767, 1.5644277409684673, 0.4272949545521658, 0.4672038252548828, -3.1204768947249883, 3.0523717939527937, -0.1391776731140042, 0.6843079868144302, 1.057871257299657, -1.3392130196802243, -0.9652183881582711, 0.049423059397005066, -1.7869039138548837, 0.7994273306793889, -0.08342064908336326, 0.39156407267606835, -0.5973789336566458, 0.8950884529455613, -1.0167135978850899, -1.5497901267906697, -0.6236450122800143, -0.32625469459867623, 0.7666883865678111, 1.0027346037036757, 0.31987951996926417, 0.22560304595597502, -0.3549624167509472, -1.778710319785272, 0.23893423441149161, -0.754769600126638, 0.005229768982748693, -0.5815421231990708, -0.4011468584592908, 0.28670143358837824, 0.5480544464528079, -0.11705323013003083, -0.3291124181611934, -0.9285979243381891, 0.6274316366286689, -1.14947449371091, -0.6798480204020498, 0.20333309878635883, 0.9086084003882927, 1.273576564567149, -0.19589497501672723, -0.8239034633878723, 1.4943636377510459, 0.5397741880708082, 0.003641500178541025, 0.06007419573505805, -0.3142103637231945, -0.9211954235576807, 1.2132134554708311, 0.1005781303025278, 0.27687602791867444, 1.3670070940182448, -1.4593929006691335, -0.6920644431746362, 1.8463436412241674, -1.001723487682758, 0.7907862771717864, -1.9952471390459525, -0.32814431233623886, 0.02401871396884356, 0.2919337929096129, 0.03059614951718824, 1.6618387812558089, -0.025210818805379374, -0.2530895691798362, 0.5022402552613392, -0.4234815978870867, -0.3972181014867517, 0.44874903837005986, 1.7474500051746353, 0.5901026476528535, 1.8590784308834576, -0.05295190997969283, -1.2581802531581463, -1.877422459551457, -0.44706266761593816, 1.5747830248326975, -0.3188555240676936, 0.25396608454663344, -0.1346787785420904, -0.21755934965582424, 0.5825017020900721, 0.8597525743679808, 1.0295732835197666, -0.9888191252639773, -0.42567766348366665, -1.1327334852481545, 0.7683928915996121, 1.304930103380542, -0.19882575562869556, -0.07819036463889036, -0.3650598858168359, -0.9275105517325704, 0.9751949663688145, 0.43779740104254183, -0.7374191354930695, 0.7580213955584318, -0.9524946633773126, -1.7444022288621197, 2.0295937320271, 0.6866918232516225, -0.3366613869674053, -0.8604652489190564, 1.137957312029012, 0.609292845168, -0.09206380762739473, -0.9308953202289584, 2.741840530520314, -2.1821657163800205, 0.23162734858517742, 0.7636887899480985, 1.1599922692341382, 0.9869755883762394, 1.2229688808335006, -0.502397836381918, 1.3320073110071184, -0.438724649469768, 0.5832023862200622, 0.8192079402891327, 0.15896265603230633, 0.08903643985104895, -0.6202768204057704, 0.7948135545209452, 0.9591447565644063, -0.4348585177041761, 1.6097017449535536, -0.011261660159034343, 1.5834662347238149, -0.6772353639480481, -1.124656264957931, -0.10472382981676032, 1.6668562497703525, 1.127662971934826, -0.8686670710950045, -0.7425040676521718, -0.7028183736077956, 0.30703033602196594, -0.9803213880868614, 1.4147073520000466, 1.0695866192453432, -0.9471620569314712, -1.6586499231212242, -1.0726509959652668, -0.523081795640405, 0.9320451053688527, 1.0799105548892178, 0.6560896382729821, -0.2306382176236255, 1.1676031481481657, -1.604807208713082, -1.1641466869606707, 0.5092065961168725, 0.9429606882799862, 1.1682962264409842, -0.26225686504030316, 0.47543791138372615, 1.2285709339444355, -0.18651710316940892, -0.8553167829866124, 0.12302256160527197, 0.23494336074224745, -1.155738329966578, 0.2875892766004165, -0.36217094079118906, 1.7164879796763057, -0.8542192419801552, -1.6993453724594034, 0.5312618612845643, 0.6054019420830569, 1.118789884548959, -1.4808774830536287, 1.6811842702120938, 0.3941118605910841, -1.115698752134071, 0.41152988868504575, -2.052122975069792, -0.6562792690924463, -1.936331609164191, -0.07231140733769735, -0.40485930250389496, -2.3876646963014574, 1.4571996707155055, 0.6193232729717083, 0.5934865445079425, 2.5790295119573123, -0.9576345218625869, -0.5604453948208721, -0.08331132068609838, 0.07018061504149761, -0.5751498279299437, 0.826351978490179, -0.34032460174500334, 0.43261734101211263, -0.4211548940356197, -0.7215756375399802, -0.053975977733321384, 1.5842561778638353, -0.08206362508330454, 0.15704571071603488, 0.20675770508602676, -0.01565585193722919, 0.38305316812073115, 0.7466368818556463, -0.25309198891706247, 0.228376751034191, 0.5942287691320501, 1.9859705218378663, 0.019901006250158497, 0.5488331166735272, -0.03144279611383272, 1.5396458951420557, -0.437168609967144, -0.7152044845241874, -1.4847658814433742, 0.3227925484812035, -0.1200337838679634, 1.479474641265758, 0.5281158265215673, -0.754518860511222, 0.9137809136045725, 0.6682842578905198, 1.0668382367385263, 0.09676577979033824, -0.5580943049377102, 0.5688026272841167, -0.41449697257964546, -0.9294151409017485, 2.717438328761978, 0.2764383350155792, -1.9274479056420986, 1.4681158195520532, 1.1069105528994279, 0.9196745279948321, 0.12085959826805284, 0.743121345684147, 0.10319180207448078, 2.0740222500904975, 0.5622123869195136, -1.5192702349472107, 1.4629479484719161, 0.7128639112550766, 0.8769333741543901, 0.041026215110818505, -0.17422829536289688, -0.5139873016449663, 0.9237093583770744, -0.6168804945973277, 1.383185566779014, 0.5402058678784506, -0.6621477735637958, 0.6058231321750336, 0.6692917236576058, -1.5836912024631389, -0.37430424110336347, -0.9148304047514636, -0.8628133431108983, -1.041554338663063, -1.7607685096058556, 0.4226369841147685, -0.9401075810063698, -0.5703807760340326, -0.8333192906349569, -0.05238129416679329, -0.7545109337761706, -0.28065650560246713, 0.2668420615796111, 1.1896500974266377, 1.0915328156992752, -1.7790055616983655, -0.38865977313820227, 0.5838423338153271, 0.6489241182113887, -0.3886609485707962, -0.7044135678276952, 1.5853679797882096, -1.677435994922495, -0.2781370242340992, 1.3863660053100713, 0.4748084371367285, -0.8878111661585838, -0.7529985877310388, -0.11636178216189316, -0.7778938535761089, -0.05002088067017126, -1.7942782035823344, -0.08771611817270704, 0.6828738529727002, -0.729218885940822, 0.9811504620300583, 1.2122685675507143, 0.17183219213948364, 1.5955556818913375, 0.8456962175597369, -0.247690052495542, 0.8354043593133531, -0.853526891825697, 0.9566432911487193, 0.17533761279344412, -0.770133145034472, -0.364357168754861, 1.5306928607992638, 0.14066990958056827, -2.226000926314783, -1.360638051819061, -0.7927538378036012, 2.7682336000142977, -2.5160240383093386, -0.09483230829097548, -1.3176506815025204, -0.620556811471944, -1.9806639728463524, -0.2535074397913051, -0.27917603466213453, 1.3895443120357633, -0.4325199710618994, 0.95046473332032, 1.844826880131663, -1.0807250831743387, -0.24695211897167896, 0.024042669540010442, -0.1368489815257451, 1.2834412620277593, -1.4137951565448277, -0.25089844524868493, 0.30850996434004385, 0.8373841092923276, 2.527896704679436, -0.3300177407439481, -0.6389424852914746, 1.8010783125955974, 0.7403646274282032, -0.606410482354794, -1.0806393406487638, -1.8986675377280975, 0.5790781604725371, 1.9022805700021903, -0.7153405162882639, -0.14881232588365523, -1.3362026750583167, 0.19309635279640447, -0.03773228405105219, 0.598157440129317, -0.8230588794578643, 1.1247736822274306, -0.5488408227383992, 0.007263479527736247, 0.17746277738720959, 0.4816767018649354, -2.061545680984912, 0.8154752899666433, -1.022576503679278, -0.44509147901381996, -0.08623129778619837, 0.9310737869576107, 0.4745187655375418, -1.0012381495821783, 0.2083261401487164, -0.5130069496746867, 0.2621520478764154, -0.4867750565547165, -0.3879520613715636, 0.04590373940997971, -1.0667286466496395, 1.355535919722544, -0.3196268323693374, -0.7054201958126963, -1.8450086544882958, 2.2534240131598464, 0.16694487764807095, -1.3963527355860652, 1.2689689671492212, 0.8467123002305208, -1.060470187879675, -1.3616276989805476, -1.9783556716310793, -1.0063691193874, -0.3415539054511361, -0.9860142644029769, 0.935421402468925, -0.11494389452367527, 0.8608437126385013, 0.3854962905000536, -2.1119474435972827, -0.11172654386870709, -0.5282687832187636, 1.4827775534458594, -1.0249673775055392, -0.25442091660360666, 0.3980424182410157, -0.12298028082497074, 0.5571427127997064, 0.7020715847983685, -0.5639063210882157, -1.2491156330747784, -0.5321730921470492, 0.8529889802586458, 1.0508550241967474, 0.7638794917009967, -0.48071163187389915, -0.5129069974991773, 1.2121734752020072, 1.7573865627342384, -1.3636769024918844, 0.892721084779058, -0.3989457178488422, 0.8094278054698422, -0.5619784606980257, 0.35193093083796906, -0.2864922543181384, -0.49878393663845183, 0.26963334219592966, -0.616079109588763, -2.2815954620742254, -1.3304445393362117, -0.44709802552594785, -0.5266336029830839, 0.10917416181815924]], \"init_height\": 480, \"init_width\": 640, \"legend_layout\": \"VERTICAL\", \"legend_position\": {\"position\": \"TOP_RIGHT\"}, \"log\": false, \"log_x\": false, \"log_y\": false, \"normed\": false, \"numberOfPointsToDisplay\": \"10000 items\", \"omit_checkboxes\": false, \"rangeAxes\": [{\"auto_range\": true, \"auto_range_includes_zero\": false, \"label\": \"\", \"log_base\": 10.0, \"lower_bound\": 0.0, \"lower_margin\": 0.05, \"type\": \"YAxis\", \"upper_bound\": 0.0, \"upper_margin\": 0.05, \"use_log\": false}], \"rowsLimitItems\": 1000000, \"texts\": [], \"tooManyRows\": true, \"totalNumberOfPoints\": 1099999, \"type\": \"Histogram\", \"use_tool_tip\": true, \"x_auto_range\": true, \"x_log_base\": 10, \"x_lower_bound\": 0, \"x_lower_margin\": 0.05, \"x_upper_bound\": 0, \"x_upper_margin\": 0.05}}, \"buffer_paths\": []}, \"comm_id\": \"e3c83a0f0db348ac998202152e2cdfec\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "import random\n",
                                "from beakerx import *\n",
                                "dataH4 = []\n",
                                "\n",
                                "for x in range(1, 1100000):\n",
                                "  dataH4.append(random.gauss(0, 1))\n",
                                "\n",
                                "Histogram(data= dataH4, binCount= 10000)"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "import random\n",
                                "from beakerx import *\n",
                                "dataH4 = []\n",
                                "\n",
                                "for x in range(1, 1100000):\n",
                                "  dataH4.append(random.gauss(0, 1))\n",
                                "\n",
                                "Histogram(data= dataH4, binCount= 10000)"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "79eb5a3a-5fab-4a96-971e-af4fe686e26c"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "ce9dc7ab-d992-412a-b32a-57c3741890db",
                "data": "{\"header\": {\"msg_id\": \"62249a8c-9e05b297668dbc17ffee67f8\", \"msg_type\": \"display_data\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:59.532231Z\", \"version\": \"5.3\"}, \"msg_id\": \"62249a8c-9e05b297668dbc17ffee67f8\", \"msg_type\": \"display_data\", \"parent_header\": {\"date\": \"2020-04-03T18:12:58.226000Z\", \"msg_id\": \"20bc1b47-aee2-4337-a9e7-3869ea9f9e7d\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"data\": {\"application/vnd.jupyter.widget-view+json\": {\"version_major\": 2, \"version_minor\": 0, \"model_id\": \"e3c83a0f0db348ac998202152e2cdfec\"}}, \"metadata\": {}, \"transient\": {}}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 2,
                    "metadata": {},
                    "outputs": [],
                    "source": [
                        "import random\n",
                        "from beakerx import *\n",
                        "dataH4 = []\n",
                        "\n",
                        "for x in range(1, 1100000):\n",
                        "  dataH4.append(random.gauss(0, 1))\n",
                        "\n",
                        "Histogram(data= dataH4, binCount= 10000)"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "ce9dc7ab-d992-412a-b32a-57c3741890db"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg",
            "payload": {
                "id": "d1dd5ac1-f18d-4374-accd-0000ac8c1efa",
                "data": "{\"header\": {\"msg_id\": \"89b5cf85-6c950a480a749a7c2c197fb4\", \"msg_type\": \"status\", \"username\": \"username\", \"session\": \"c01d03b1-91a88151c6d1c6eccba5a839\", \"date\": \"2020-04-03T18:12:59.534234Z\", \"version\": \"5.3\"}, \"msg_id\": \"89b5cf85-6c950a480a749a7c2c197fb4\", \"msg_type\": \"status\", \"parent_header\": {\"date\": \"2020-04-03T18:12:58.226000Z\", \"msg_id\": \"20bc1b47-aee2-4337-a9e7-3869ea9f9e7d\", \"msg_type\": \"execute_request\", \"session\": \"ddd80db9-b2d8-4d42-8afe-437d7872f23e\", \"username\": \"\", \"version\": \"5.2\"}, \"metadata\": {}, \"content\": {\"execution_state\": \"idle\"}, \"buffers\": [], \"channel\": \"iopub\"}"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 2,
                    "metadata": {},
                    "outputs": [
                        {
                            "output_type": "display_data",
                            "data": {
                                "application/vnd.jupyter.widget-view+json": {
                                    "version_major": 2,
                                    "version_minor": 0,
                                    "model_id": "e3c83a0f0db348ac998202152e2cdfec"
                                }
                            },
                            "metadata": {},
                            "transient": {}
                        }
                    ],
                    "source": [
                        "import random\n",
                        "from beakerx import *\n",
                        "dataH4 = []\n",
                        "\n",
                        "for x in range(1, 1100000):\n",
                        "  dataH4.append(random.gauss(0, 1))\n",
                        "\n",
                        "Histogram(data= dataH4, binCount= 10000)"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [],
                            "source": [
                                "import random\n",
                                "from beakerx import *\n",
                                "dataH4 = []\n",
                                "\n",
                                "for x in range(1, 1100000):\n",
                                "  dataH4.append(random.gauss(0, 1))\n",
                                "\n",
                                "Histogram(data= dataH4, binCount= 10000)"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "IPyWidgets_msg_handled",
            "payload": {
                "id": "d1dd5ac1-f18d-4374-accd-0000ac8c1efa"
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "update_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 2,
                    "metadata": {},
                    "outputs": [
                        {
                            "output_type": "display_data",
                            "data": {
                                "application/vnd.jupyter.widget-view+json": {
                                    "version_major": 2,
                                    "version_minor": 0,
                                    "model_id": "e3c83a0f0db348ac998202152e2cdfec"
                                }
                            },
                            "metadata": {},
                            "transient": {}
                        }
                    ],
                    "source": [
                        "import random\n",
                        "from beakerx import *\n",
                        "dataH4 = []\n",
                        "\n",
                        "for x in range(1, 1100000):\n",
                        "  dataH4.append(random.gauss(0, 1))\n",
                        "\n",
                        "Histogram(data= dataH4, binCount= 10000)"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 1
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "dirty"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "finish_cell",
            "payload": {
                "data": {
                    "cell_type": "code",
                    "execution_count": 2,
                    "metadata": {},
                    "outputs": [
                        {
                            "output_type": "display_data",
                            "data": {
                                "application/vnd.jupyter.widget-view+json": {
                                    "version_major": 2,
                                    "version_minor": 0,
                                    "model_id": "e3c83a0f0db348ac998202152e2cdfec"
                                }
                            },
                            "metadata": {},
                            "transient": {}
                        }
                    ],
                    "source": [
                        "import random\n",
                        "from beakerx import *\n",
                        "dataH4 = []\n",
                        "\n",
                        "for x in range(1, 1100000):\n",
                        "  dataH4.append(random.gauss(0, 1))\n",
                        "\n",
                        "Histogram(data= dataH4, binCount= 10000)"
                    ]
                },
                "id": "NotebookImport#2",
                "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                "line": 0,
                "state": 2
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "stop_progress"
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "update_kernel",
            "payload": {
                "jupyterServerStatus": "Idle",
                "localizedUri": "local",
                "displayName": "Python 3"
            }
        },
        "type": "forUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "e3c83a0f0db348ac998202152e2cdfec"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "import random\n",
                                "from beakerx import *\n",
                                "dataH4 = []\n",
                                "\n",
                                "for x in range(1, 1100000):\n",
                                "  dataH4.append(random.gauss(0, 1))\n",
                                "\n",
                                "Histogram(data= dataH4, binCount= 10000)"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "e3c83a0f0db348ac998202152e2cdfec"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "import random\n",
                                "from beakerx import *\n",
                                "dataH4 = []\n",
                                "\n",
                                "for x in range(1, 1100000):\n",
                                "  dataH4.append(random.gauss(0, 1))\n",
                                "\n",
                                "Histogram(data= dataH4, binCount= 10000)"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 1
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_dirty",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "finish_cell",
                "payload": {
                    "data": {
                        "data": {
                            "cell_type": "code",
                            "execution_count": 2,
                            "metadata": {},
                            "outputs": [
                                {
                                    "output_type": "display_data",
                                    "data": {
                                        "application/vnd.jupyter.widget-view+json": {
                                            "version_major": 2,
                                            "version_minor": 0,
                                            "model_id": "e3c83a0f0db348ac998202152e2cdfec"
                                        }
                                    },
                                    "metadata": {},
                                    "transient": {}
                                }
                            ],
                            "source": [
                                "import random\n",
                                "from beakerx import *\n",
                                "dataH4 = []\n",
                                "\n",
                                "for x in range(1, 1100000):\n",
                                "  dataH4.append(random.gauss(0, 1))\n",
                                "\n",
                                "Histogram(data= dataH4, binCount= 10000)"
                            ]
                        },
                        "id": "NotebookImport#2",
                        "file": "2DB9B899-6519-4E1B-88B0-FA728A274115",
                        "line": 0,
                        "state": 2
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "rendered_execution",
            "payload": {
                "ids": [
                    "NotebookImport#2"
                ]
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_finish_cell",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_stop_progress",
            "payload": {}
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "sync_message_used_to_broadcast_and_sync_editors",
            "payload": {
                "type": "update_kernel",
                "payload": {
                    "data": {
                        "jupyterServerStatus": "Idle",
                        "localizedUri": "local",
                        "displayName": "Python 3"
                    },
                    "messageType": 3,
                    "messageDirection": "incoming"
                }
            }
        },
        "type": "fromUI"
    },
    {
        "payload": {
            "type": "DISPATCHED_ACTION_update_kernel",
            "payload": {}
        },
        "type": "fromUI"
    }
]